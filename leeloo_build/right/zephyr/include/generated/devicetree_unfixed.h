/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /Users/qilewang/GithubRepos/Keyboards/miryoku_zmk/leeloo_build/right/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/drivers/zephyr/dts/bindings, /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /connector_a
 *   5   /soc
 *   6   /soc/gpio@50000000
 *   7   /ext-power
 *   8   /keymap_transform_0
 *   9   /soc/gpio@50000300
 *   10  /kscan
 *   11  /pin-controller
 *   12  /encoder_left
 *   13  /encoder_right
 *   14  /sensors
 *   15  /soc/interrupt-controller@e000e100
 *   16  /soc/timer@4000a000
 *   17  /sw-pwm
 *   18  /vbatt
 *   19  /behaviors
 *   20  /behaviors/behavior_reset
 *   21  /behaviors/macro_control_mode_press
 *   22  /behaviors/macro_control_mode_release
 *   23  /behaviors/macro_control_mode_tap
 *   24  /behaviors/macro_control_tap_time
 *   25  /behaviors/macro_control_wait_time
 *   26  /behaviors/macro_pause_for_release
 *   27  /behaviors/behavior_bluetooth
 *   28  /macros
 *   29  /macros/u_macro_u_bt_sel_4
 *   30  /behaviors/u_bt_sel_4
 *   31  /cpus
 *   32  /cpus/cpu@0
 *   33  /keymap
 *   34  /behaviors/behavior_key_press
 *   35  /behaviors/behavior_momentary_layer
 *   36  /behaviors/behavior_layer_tap
 *   37  /behaviors/behavior_none
 *   38  /behaviors/behavior_sensor_rotate_key_press
 *   39  /behaviors/homerow_mods
 *   40  /keymap/0
 *   41  /keymap/1
 *   42  /keymap/2
 *   43  /macros/u_macro_btn1
 *   44  /macros/u_macro_btn2
 *   45  /macros/u_macro_btn3
 *   46  /keymap/3
 *   47  /behaviors/behavior_reset_dfu
 *   48  /behaviors/behavior_to_layer
 *   49  /behaviors/behavior_caps_word
 *   50  /behaviors/u_caps_word
 *   51  /keymap/4
 *   52  /keymap/5
 *   53  /behaviors/behavior_rgb_underglow
 *   54  /macros/u_macro_u_bt_sel_0
 *   55  /behaviors/u_bt_sel_0
 *   56  /macros/u_macro_u_bt_sel_1
 *   57  /behaviors/u_bt_sel_1
 *   58  /macros/u_macro_u_bt_sel_2
 *   59  /behaviors/u_bt_sel_2
 *   60  /macros/u_macro_u_bt_sel_3
 *   61  /behaviors/u_bt_sel_3
 *   62  /behaviors/behavior_ext_power
 *   63  /behaviors/u_ep_tog
 *   64  /behaviors/behavior_outputs
 *   65  /behaviors/u_out_tog
 *   66  /behaviors/u_rgb_bri
 *   67  /behaviors/u_rgb_eff
 *   68  /behaviors/u_rgb_hui
 *   69  /behaviors/u_rgb_sai
 *   70  /keymap/6
 *   71  /keymap/7
 *   72  /keymap/8
 *   73  /keymap/9
 *   74  /leds
 *   75  /leds/led_0
 *   76  /soc/adc@40007000
 *   77  /soc/clock@40000000
 *   78  /soc/ecb@4000e000
 *   79  /soc/egu@40014000
 *   80  /soc/egu@40015000
 *   81  /soc/egu@40016000
 *   82  /soc/egu@40017000
 *   83  /soc/egu@40018000
 *   84  /soc/egu@40019000
 *   85  /soc/ficr@10000000
 *   86  /soc/gpiote@40006000
 *   87  /soc/i2c@40004000
 *   88  /soc/i2s@40025000
 *   89  /soc/memory@20000000
 *   90  /soc/pdm@4001d000
 *   91  /soc/pwm@4001c000
 *   92  /soc/pwm@40021000
 *   93  /soc/pwm@40022000
 *   94  /soc/pwm@4002d000
 *   95  /soc/qdec@40012000
 *   96  /soc/qspi@40029000
 *   97  /soc/radio@40001000
 *   98  /soc/random@4000d000
 *   99  /soc/rtc@4000b000
 *   100 /soc/rtc@40011000
 *   101 /soc/rtc@40024000
 *   102 /soc/spi@40003000
 *   103 /soc/spi@40004000
 *   104 /soc/spi@40023000
 *   105 /soc/spi@4002f000
 *   106 /soc/temp@4000c000
 *   107 /soc/timer@40008000
 *   108 /soc/timer@40009000
 *   109 /soc/timer@4001a000
 *   110 /soc/timer@4001b000
 *   111 /soc/timer@e000e010
 *   112 /soc/uart@40002000
 *   113 /soc/uart@40028000
 *   114 /soc/uicr@10001000
 *   115 /soc/watchdog@40010000
 *   116 /soc/crypto@5002a000
 *   117 /soc/crypto@5002a000/crypto@5002b000
 *   118 /soc/flash-controller@4001e000
 *   119 /soc/flash-controller@4001e000/flash@0
 *   120 /soc/flash-controller@4001e000/flash@0/partitions
 *   121 /soc/flash-controller@4001e000/flash@0/partitions/partition@0
 *   122 /soc/flash-controller@4001e000/flash@0/partitions/partition@26000
 *   123 /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000
 *   124 /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000
 *   125 /soc/i2c@40003000
 *   126 /soc/i2c@40003000/ssd1306@3c
 *   127 /soc/usbd@40027000
 *   128 /soc/usbd@40027000/cdc_acm_uart
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_cpus) fn(DT_N_S_sw_pwm) fn(DT_N_S_connector) fn(DT_N_S_connector_a) fn(DT_N_S_leds) fn(DT_N_S_ext_power) fn(DT_N_S_vbatt) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_kscan) fn(DT_N_S_encoder_left) fn(DT_N_S_encoder_right) fn(DT_N_S_sensors) fn(DT_N_S_behaviors) fn(DT_N_S_keymap) fn(DT_N_S_macros)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_sw_pwm, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_connector_a, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_ext_power, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_keymap_transform_0, __VA_ARGS__) fn(DT_N_S_kscan, __VA_ARGS__) fn(DT_N_S_encoder_left, __VA_ARGS__) fn(DT_N_S_encoder_right, __VA_ARGS__) fn(DT_N_S_sensors, __VA_ARGS__) fn(DT_N_S_behaviors, __VA_ARGS__) fn(DT_N_S_keymap, __VA_ARGS__) fn(DT_N_S_macros, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_cpus) fn(DT_N_S_connector) fn(DT_N_S_connector_a) fn(DT_N_S_leds) fn(DT_N_S_ext_power) fn(DT_N_S_vbatt) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_kscan) fn(DT_N_S_encoder_left) fn(DT_N_S_encoder_right) fn(DT_N_S_sensors) fn(DT_N_S_behaviors) fn(DT_N_S_keymap) fn(DT_N_S_macros) 
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_connector_a, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_ext_power, __VA_ARGS__) fn(DT_N_S_vbatt, __VA_ARGS__) fn(DT_N_S_keymap_transform_0, __VA_ARGS__) fn(DT_N_S_kscan, __VA_ARGS__) fn(DT_N_S_encoder_left, __VA_ARGS__) fn(DT_N_S_encoder_right, __VA_ARGS__) fn(DT_N_S_sensors, __VA_ARGS__) fn(DT_N_S_behaviors, __VA_ARGS__) fn(DT_N_S_keymap, __VA_ARGS__) fn(DT_N_S_macros, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /connector_a */ \
	5, /* /soc */ \
	7, /* /ext-power */ \
	8, /* /keymap_transform_0 */ \
	10, /* /kscan */ \
	11, /* /pin-controller */ \
	12, /* /encoder_left */ \
	13, /* /encoder_right */ \
	14, /* /sensors */ \
	17, /* /sw-pwm */ \
	18, /* /vbatt */ \
	19, /* /behaviors */ \
	28, /* /macros */ \
	31, /* /cpus */ \
	33, /* /keymap */ \
	74, /* /leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_nice_nano DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_nice_nano 1
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"nice,nano"}
#define DT_N_P_compatible_IDX_0 "nice,nano"
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_arduino_pro_micro DT_N_S_connector
#define DT_N_NODELABEL_pro_micro      DT_N_S_connector
#define DT_N_NODELABEL_pro_micro_d    DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_COMPAT_MATCHES_arduino_pro_micro 1
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"arduino-pro-micro"}
#define DT_N_S_connector_P_compatible_IDX_0 "arduino-pro-micro"
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1

/*
 * Devicetree node: /connector_a
 *
 * Node identifier: DT_N_S_connector_a
 */

/* Node's full path: */
#define DT_N_S_connector_a_PATH "/connector_a"

/* Node's name with unit-address: */
#define DT_N_S_connector_a_FULL_NAME "connector_a"

/* Node parent (/) identifier: */
#define DT_N_S_connector_a_PARENT DT_N
#define DT_N_S_connector_a_FOREACH_CHILD(fn) 
#define DT_N_S_connector_a_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_a_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_a_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_a_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_a_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_a_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_a_EXISTS 1
#define DT_N_INST_1_arduino_pro_micro DT_N_S_connector_a
#define DT_N_NODELABEL_pro_micro_a    DT_N_S_connector_a

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_a_REG_NUM 0
#define DT_N_S_connector_a_RANGES_NUM 0
#define DT_N_S_connector_a_FOREACH_RANGE(fn) 
#define DT_N_S_connector_a_IRQ_NUM 0
#define DT_N_S_connector_a_COMPAT_MATCHES_arduino_pro_micro 1
#define DT_N_S_connector_a_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_a_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_a_P_compatible {"arduino-pro-micro"}
#define DT_N_S_connector_a_P_compatible_IDX_0 "arduino-pro-micro"
#define DT_N_S_connector_a_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_a_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector_a, compatible, 0)
#define DT_N_S_connector_a_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector_a, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_a_P_compatible_LEN 1
#define DT_N_S_connector_a_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_uart_40002000) fn(DT_N_S_soc_S_i2c_40003000) fn(DT_N_S_soc_S_spi_40003000) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_spi_40004000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_timer_40008000) fn(DT_N_S_soc_S_timer_40009000) fn(DT_N_S_soc_S_timer_4000a000) fn(DT_N_S_soc_S_rtc_4000b000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_rtc_40011000) fn(DT_N_S_soc_S_qdec_40012000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_timer_4001a000) fn(DT_N_S_soc_S_timer_4001b000) fn(DT_N_S_soc_S_pwm_4001c000) fn(DT_N_S_soc_S_pdm_4001d000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_pwm_40021000) fn(DT_N_S_soc_S_pwm_40022000) fn(DT_N_S_soc_S_spi_40023000) fn(DT_N_S_soc_S_rtc_40024000) fn(DT_N_S_soc_S_i2s_40025000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_uart_40028000) fn(DT_N_S_soc_S_qspi_40029000) fn(DT_N_S_soc_S_pwm_4002d000) fn(DT_N_S_soc_S_spi_4002f000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_soc_S_crypto_5002a000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40004000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_qdec_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4001c000, __VA_ARGS__) fn(DT_N_S_soc_S_pdm_4001d000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40023000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40025000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_qspi_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_4002d000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4002f000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_radio_40001000) fn(DT_N_S_soc_S_i2c_40003000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_timer_40008000) fn(DT_N_S_soc_S_timer_40009000) fn(DT_N_S_soc_S_timer_4000a000) fn(DT_N_S_soc_S_rtc_4000b000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_rtc_40011000) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000) fn(DT_N_S_soc_S_timer_4001a000) fn(DT_N_S_soc_S_timer_4001b000) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_rtc_40024000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_soc_S_crypto_5002a000) 
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	6, /* /soc/gpio@50000000 */ \
	9, /* /soc/gpio@50000300 */ \
	15, /* /soc/interrupt-controller@e000e100 */ \
	16, /* /soc/timer@4000a000 */ \
	76, /* /soc/adc@40007000 */ \
	77, /* /soc/clock@40000000 */ \
	78, /* /soc/ecb@4000e000 */ \
	79, /* /soc/egu@40014000 */ \
	80, /* /soc/egu@40015000 */ \
	81, /* /soc/egu@40016000 */ \
	82, /* /soc/egu@40017000 */ \
	83, /* /soc/egu@40018000 */ \
	84, /* /soc/egu@40019000 */ \
	85, /* /soc/ficr@10000000 */ \
	86, /* /soc/gpiote@40006000 */ \
	87, /* /soc/i2c@40004000 */ \
	88, /* /soc/i2s@40025000 */ \
	89, /* /soc/memory@20000000 */ \
	90, /* /soc/pdm@4001d000 */ \
	91, /* /soc/pwm@4001c000 */ \
	92, /* /soc/pwm@40021000 */ \
	93, /* /soc/pwm@40022000 */ \
	94, /* /soc/pwm@4002d000 */ \
	95, /* /soc/qdec@40012000 */ \
	96, /* /soc/qspi@40029000 */ \
	97, /* /soc/radio@40001000 */ \
	98, /* /soc/random@4000d000 */ \
	99, /* /soc/rtc@4000b000 */ \
	100, /* /soc/rtc@40011000 */ \
	101, /* /soc/rtc@40024000 */ \
	102, /* /soc/spi@40003000 */ \
	103, /* /soc/spi@40004000 */ \
	104, /* /soc/spi@40023000 */ \
	105, /* /soc/spi@4002f000 */ \
	106, /* /soc/temp@4000c000 */ \
	107, /* /soc/timer@40008000 */ \
	108, /* /soc/timer@40009000 */ \
	109, /* /soc/timer@4001a000 */ \
	110, /* /soc/timer@4001b000 */ \
	111, /* /soc/timer@e000e010 */ \
	112, /* /soc/uart@40002000 */ \
	113, /* /soc/uart@40028000 */ \
	114, /* /soc/uicr@10001000 */ \
	115, /* /soc/watchdog@40010000 */ \
	116, /* /soc/crypto@5002a000 */ \
	118, /* /soc/flash-controller@4001e000 */ \
	125, /* /soc/i2c@40003000 */ \
	127, /* /soc/usbd@40027000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_nordic_nrf52840_qiaa DT_N_S_soc
#define DT_N_INST_0_nordic_nrf52840      DT_N_S_soc
#define DT_N_INST_0_nordic_nrf52         DT_N_S_soc
#define DT_N_INST_0_simple_bus           DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52840_qiaa 1
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52840 1
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52 1
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"nordic,nRF52840-QIAA", "nordic,nRF52840", "nordic,nRF52", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "nordic,nRF52840-QIAA"
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "nordic,nRF52840"
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "nordic,nRF52"
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_3 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_3_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2) \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 4
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/gpio@50000000
 *
 * Node identifier: DT_N_S_soc_S_gpio_50000000
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_50000000_PATH "/soc/gpio@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_50000000_FULL_NAME "gpio@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_50000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_50000000_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_50000000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_50000000_SUPPORTS_ORDS \
	7, /* /ext-power */ \
	10, /* /kscan */ \
	12, /* /encoder_left */ \
	13, /* /encoder_right */ \
	75, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_50000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpio DT_N_S_soc_S_gpio_50000000
#define DT_N_NODELABEL_gpio0        DT_N_S_soc_S_gpio_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_50000000_REG_NUM 2
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_VAL_ADDRESS 1342178560 /* 0x50000500 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_50000000_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_50000000_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_50000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_50000000_P_reg {1342177280 /* 0x50000000 */, 512 /* 0x200 */, 1342178560 /* 0x50000500 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_1 512
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_2 1342178560
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_3 768
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000000, reg, 0) \
	fn(DT_N_S_soc_S_gpio_50000000, reg, 1) \
	fn(DT_N_S_soc_S_gpio_50000000, reg, 2) \
	fn(DT_N_S_soc_S_gpio_50000000, reg, 3)
#define DT_N_S_soc_S_gpio_50000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000000, reg, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000000, reg, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000000, reg, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_label "GPIO_0"
#define DT_N_S_soc_S_gpio_50000000_P_label_STRING_TOKEN GPIO_0
#define DT_N_S_soc_S_gpio_50000000_P_label_STRING_UPPER_TOKEN GPIO_0
#define DT_N_S_soc_S_gpio_50000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000000, label, 0) \
	fn(DT_N_S_soc_S_gpio_50000000, label, 1) \
	fn(DT_N_S_soc_S_gpio_50000000, label, 2) \
	fn(DT_N_S_soc_S_gpio_50000000, label, 3) \
	fn(DT_N_S_soc_S_gpio_50000000, label, 4) \
	fn(DT_N_S_soc_S_gpio_50000000, label, 5)
#define DT_N_S_soc_S_gpio_50000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_label_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_port 0
#define DT_N_S_soc_S_gpio_50000000_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_50000000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_ngpios 32
#define DT_N_S_soc_S_gpio_50000000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_status "okay"
#define DT_N_S_soc_S_gpio_50000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_50000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000000, status, 0) \
	fn(DT_N_S_soc_S_gpio_50000000, status, 1) \
	fn(DT_N_S_soc_S_gpio_50000000, status, 2) \
	fn(DT_N_S_soc_S_gpio_50000000, status, 3)
#define DT_N_S_soc_S_gpio_50000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_50000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /ext-power
 *
 * Node identifier: DT_N_S_ext_power
 *
 * Binding (compatible = zmk,ext-power-generic):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/zmk,ext-power-generic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ext_power_PATH "/ext-power"

/* Node's name with unit-address: */
#define DT_N_S_ext_power_FULL_NAME "ext-power"

/* Node parent (/) identifier: */
#define DT_N_S_ext_power_PARENT DT_N
#define DT_N_S_ext_power_FOREACH_CHILD(fn) 
#define DT_N_S_ext_power_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ext_power_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ext_power_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_ext_power_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ext_power_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ext_power_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ext_power_EXISTS 1
#define DT_N_INST_0_zmk_ext_power_generic DT_N_S_ext_power

/* Macros for properties that are special in the specification: */
#define DT_N_S_ext_power_REG_NUM 0
#define DT_N_S_ext_power_RANGES_NUM 0
#define DT_N_S_ext_power_FOREACH_RANGE(fn) 
#define DT_N_S_ext_power_IRQ_NUM 0
#define DT_N_S_ext_power_COMPAT_MATCHES_zmk_ext_power_generic 1
#define DT_N_S_ext_power_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ext_power_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ext_power_P_control_gpios_IDX_0_EXISTS 1
#define DT_N_S_ext_power_P_control_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_pin 13
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ext_power_P_control_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ext_power, control_gpios, 0)
#define DT_N_S_ext_power_P_control_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ext_power, control_gpios, 0, __VA_ARGS__)
#define DT_N_S_ext_power_P_control_gpios_LEN 1
#define DT_N_S_ext_power_P_control_gpios_EXISTS 1
#define DT_N_S_ext_power_P_label "EXT_POWER"
#define DT_N_S_ext_power_P_label_STRING_TOKEN EXT_POWER
#define DT_N_S_ext_power_P_label_STRING_UPPER_TOKEN EXT_POWER
#define DT_N_S_ext_power_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ext_power, label, 0) \
	fn(DT_N_S_ext_power, label, 1) \
	fn(DT_N_S_ext_power, label, 2) \
	fn(DT_N_S_ext_power, label, 3) \
	fn(DT_N_S_ext_power, label, 4) \
	fn(DT_N_S_ext_power, label, 5) \
	fn(DT_N_S_ext_power, label, 6) \
	fn(DT_N_S_ext_power, label, 7) \
	fn(DT_N_S_ext_power, label, 8)
#define DT_N_S_ext_power_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ext_power, label, 0, __VA_ARGS__) \
	fn(DT_N_S_ext_power, label, 1, __VA_ARGS__) \
	fn(DT_N_S_ext_power, label, 2, __VA_ARGS__) \
	fn(DT_N_S_ext_power, label, 3, __VA_ARGS__) \
	fn(DT_N_S_ext_power, label, 4, __VA_ARGS__) \
	fn(DT_N_S_ext_power, label, 5, __VA_ARGS__) \
	fn(DT_N_S_ext_power, label, 6, __VA_ARGS__) \
	fn(DT_N_S_ext_power, label, 7, __VA_ARGS__) \
	fn(DT_N_S_ext_power, label, 8, __VA_ARGS__)
#define DT_N_S_ext_power_P_label_EXISTS 1
#define DT_N_S_ext_power_P_init_delay_ms 50
#define DT_N_S_ext_power_P_init_delay_ms_EXISTS 1

/*
 * Devicetree node: /keymap_transform_0
 *
 * Node identifier: DT_N_S_keymap_transform_0
 *
 * Binding (compatible = zmk,matrix-transform):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/zmk,matrix-transform.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_transform_0_PATH "/keymap_transform_0"

/* Node's name with unit-address: */
#define DT_N_S_keymap_transform_0_FULL_NAME "keymap_transform_0"

/* Node parent (/) identifier: */
#define DT_N_S_keymap_transform_0_PARENT DT_N
#define DT_N_S_keymap_transform_0_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_transform_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_transform_0_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_transform_0_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_transform_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_transform_0_EXISTS 1
#define DT_N_INST_0_zmk_matrix_transform DT_N_S_keymap_transform_0
#define DT_N_NODELABEL_default_transform DT_N_S_keymap_transform_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_transform_0_REG_NUM 0
#define DT_N_S_keymap_transform_0_RANGES_NUM 0
#define DT_N_S_keymap_transform_0_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_transform_0_IRQ_NUM 0
#define DT_N_S_keymap_transform_0_COMPAT_MATCHES_zmk_matrix_transform 1
#define DT_N_S_keymap_transform_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_transform_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_transform_0_P_columns 12
#define DT_N_S_keymap_transform_0_P_columns_EXISTS 1
#define DT_N_S_keymap_transform_0_P_rows 5
#define DT_N_S_keymap_transform_0_P_rows_EXISTS 1
#define DT_N_S_keymap_transform_0_P_col_offset 6
#define DT_N_S_keymap_transform_0_P_col_offset_EXISTS 1
#define DT_N_S_keymap_transform_0_P_row_offset 0
#define DT_N_S_keymap_transform_0_P_row_offset_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map {0 /* 0x0 */, 1 /* 0x1 */, 2 /* 0x2 */, 3 /* 0x3 */, 4 /* 0x4 */, 5 /* 0x5 */, 6 /* 0x6 */, 7 /* 0x7 */, 8 /* 0x8 */, 9 /* 0x9 */, 10 /* 0xa */, 11 /* 0xb */, 256 /* 0x100 */, 257 /* 0x101 */, 258 /* 0x102 */, 259 /* 0x103 */, 260 /* 0x104 */, 261 /* 0x105 */, 262 /* 0x106 */, 263 /* 0x107 */, 264 /* 0x108 */, 265 /* 0x109 */, 266 /* 0x10a */, 267 /* 0x10b */, 512 /* 0x200 */, 513 /* 0x201 */, 514 /* 0x202 */, 515 /* 0x203 */, 516 /* 0x204 */, 517 /* 0x205 */, 518 /* 0x206 */, 519 /* 0x207 */, 520 /* 0x208 */, 521 /* 0x209 */, 522 /* 0x20a */, 523 /* 0x20b */, 768 /* 0x300 */, 769 /* 0x301 */, 770 /* 0x302 */, 771 /* 0x303 */, 772 /* 0x304 */, 773 /* 0x305 */, 774 /* 0x306 */, 775 /* 0x307 */, 776 /* 0x308 */, 777 /* 0x309 */, 778 /* 0x30a */, 779 /* 0x30b */, 1025 /* 0x401 */, 1026 /* 0x402 */, 1027 /* 0x403 */, 1028 /* 0x404 */, 1029 /* 0x405 */, 1030 /* 0x406 */, 1031 /* 0x407 */, 1032 /* 0x408 */, 1033 /* 0x409 */, 1034 /* 0x40a */}
#define DT_N_S_keymap_transform_0_P_map_IDX_0 0
#define DT_N_S_keymap_transform_0_P_map_IDX_0_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_1 1
#define DT_N_S_keymap_transform_0_P_map_IDX_1_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_2 2
#define DT_N_S_keymap_transform_0_P_map_IDX_2_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_3 3
#define DT_N_S_keymap_transform_0_P_map_IDX_3_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_4 4
#define DT_N_S_keymap_transform_0_P_map_IDX_4_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_5 5
#define DT_N_S_keymap_transform_0_P_map_IDX_5_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_6 6
#define DT_N_S_keymap_transform_0_P_map_IDX_6_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_7 7
#define DT_N_S_keymap_transform_0_P_map_IDX_7_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_8 8
#define DT_N_S_keymap_transform_0_P_map_IDX_8_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_9 9
#define DT_N_S_keymap_transform_0_P_map_IDX_9_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_10 10
#define DT_N_S_keymap_transform_0_P_map_IDX_10_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_11 11
#define DT_N_S_keymap_transform_0_P_map_IDX_11_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_12 256
#define DT_N_S_keymap_transform_0_P_map_IDX_12_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_13 257
#define DT_N_S_keymap_transform_0_P_map_IDX_13_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_14 258
#define DT_N_S_keymap_transform_0_P_map_IDX_14_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_15 259
#define DT_N_S_keymap_transform_0_P_map_IDX_15_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_16 260
#define DT_N_S_keymap_transform_0_P_map_IDX_16_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_17 261
#define DT_N_S_keymap_transform_0_P_map_IDX_17_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_18 262
#define DT_N_S_keymap_transform_0_P_map_IDX_18_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_19 263
#define DT_N_S_keymap_transform_0_P_map_IDX_19_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_20 264
#define DT_N_S_keymap_transform_0_P_map_IDX_20_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_21 265
#define DT_N_S_keymap_transform_0_P_map_IDX_21_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_22 266
#define DT_N_S_keymap_transform_0_P_map_IDX_22_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_23 267
#define DT_N_S_keymap_transform_0_P_map_IDX_23_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_24 512
#define DT_N_S_keymap_transform_0_P_map_IDX_24_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_25 513
#define DT_N_S_keymap_transform_0_P_map_IDX_25_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_26 514
#define DT_N_S_keymap_transform_0_P_map_IDX_26_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_27 515
#define DT_N_S_keymap_transform_0_P_map_IDX_27_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_28 516
#define DT_N_S_keymap_transform_0_P_map_IDX_28_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_29 517
#define DT_N_S_keymap_transform_0_P_map_IDX_29_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_30 518
#define DT_N_S_keymap_transform_0_P_map_IDX_30_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_31 519
#define DT_N_S_keymap_transform_0_P_map_IDX_31_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_32 520
#define DT_N_S_keymap_transform_0_P_map_IDX_32_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_33 521
#define DT_N_S_keymap_transform_0_P_map_IDX_33_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_34 522
#define DT_N_S_keymap_transform_0_P_map_IDX_34_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_35 523
#define DT_N_S_keymap_transform_0_P_map_IDX_35_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_36 768
#define DT_N_S_keymap_transform_0_P_map_IDX_36_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_37 769
#define DT_N_S_keymap_transform_0_P_map_IDX_37_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_38 770
#define DT_N_S_keymap_transform_0_P_map_IDX_38_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_39 771
#define DT_N_S_keymap_transform_0_P_map_IDX_39_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_40 772
#define DT_N_S_keymap_transform_0_P_map_IDX_40_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_41 773
#define DT_N_S_keymap_transform_0_P_map_IDX_41_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_42 774
#define DT_N_S_keymap_transform_0_P_map_IDX_42_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_43 775
#define DT_N_S_keymap_transform_0_P_map_IDX_43_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_44 776
#define DT_N_S_keymap_transform_0_P_map_IDX_44_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_45 777
#define DT_N_S_keymap_transform_0_P_map_IDX_45_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_46 778
#define DT_N_S_keymap_transform_0_P_map_IDX_46_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_47 779
#define DT_N_S_keymap_transform_0_P_map_IDX_47_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_48 1025
#define DT_N_S_keymap_transform_0_P_map_IDX_48_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_49 1026
#define DT_N_S_keymap_transform_0_P_map_IDX_49_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_50 1027
#define DT_N_S_keymap_transform_0_P_map_IDX_50_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_51 1028
#define DT_N_S_keymap_transform_0_P_map_IDX_51_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_52 1029
#define DT_N_S_keymap_transform_0_P_map_IDX_52_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_53 1030
#define DT_N_S_keymap_transform_0_P_map_IDX_53_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_54 1031
#define DT_N_S_keymap_transform_0_P_map_IDX_54_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_55 1032
#define DT_N_S_keymap_transform_0_P_map_IDX_55_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_56 1033
#define DT_N_S_keymap_transform_0_P_map_IDX_56_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_57 1034
#define DT_N_S_keymap_transform_0_P_map_IDX_57_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_transform_0, map, 0) \
	fn(DT_N_S_keymap_transform_0, map, 1) \
	fn(DT_N_S_keymap_transform_0, map, 2) \
	fn(DT_N_S_keymap_transform_0, map, 3) \
	fn(DT_N_S_keymap_transform_0, map, 4) \
	fn(DT_N_S_keymap_transform_0, map, 5) \
	fn(DT_N_S_keymap_transform_0, map, 6) \
	fn(DT_N_S_keymap_transform_0, map, 7) \
	fn(DT_N_S_keymap_transform_0, map, 8) \
	fn(DT_N_S_keymap_transform_0, map, 9) \
	fn(DT_N_S_keymap_transform_0, map, 10) \
	fn(DT_N_S_keymap_transform_0, map, 11) \
	fn(DT_N_S_keymap_transform_0, map, 12) \
	fn(DT_N_S_keymap_transform_0, map, 13) \
	fn(DT_N_S_keymap_transform_0, map, 14) \
	fn(DT_N_S_keymap_transform_0, map, 15) \
	fn(DT_N_S_keymap_transform_0, map, 16) \
	fn(DT_N_S_keymap_transform_0, map, 17) \
	fn(DT_N_S_keymap_transform_0, map, 18) \
	fn(DT_N_S_keymap_transform_0, map, 19) \
	fn(DT_N_S_keymap_transform_0, map, 20) \
	fn(DT_N_S_keymap_transform_0, map, 21) \
	fn(DT_N_S_keymap_transform_0, map, 22) \
	fn(DT_N_S_keymap_transform_0, map, 23) \
	fn(DT_N_S_keymap_transform_0, map, 24) \
	fn(DT_N_S_keymap_transform_0, map, 25) \
	fn(DT_N_S_keymap_transform_0, map, 26) \
	fn(DT_N_S_keymap_transform_0, map, 27) \
	fn(DT_N_S_keymap_transform_0, map, 28) \
	fn(DT_N_S_keymap_transform_0, map, 29) \
	fn(DT_N_S_keymap_transform_0, map, 30) \
	fn(DT_N_S_keymap_transform_0, map, 31) \
	fn(DT_N_S_keymap_transform_0, map, 32) \
	fn(DT_N_S_keymap_transform_0, map, 33) \
	fn(DT_N_S_keymap_transform_0, map, 34) \
	fn(DT_N_S_keymap_transform_0, map, 35) \
	fn(DT_N_S_keymap_transform_0, map, 36) \
	fn(DT_N_S_keymap_transform_0, map, 37) \
	fn(DT_N_S_keymap_transform_0, map, 38) \
	fn(DT_N_S_keymap_transform_0, map, 39) \
	fn(DT_N_S_keymap_transform_0, map, 40) \
	fn(DT_N_S_keymap_transform_0, map, 41) \
	fn(DT_N_S_keymap_transform_0, map, 42) \
	fn(DT_N_S_keymap_transform_0, map, 43) \
	fn(DT_N_S_keymap_transform_0, map, 44) \
	fn(DT_N_S_keymap_transform_0, map, 45) \
	fn(DT_N_S_keymap_transform_0, map, 46) \
	fn(DT_N_S_keymap_transform_0, map, 47) \
	fn(DT_N_S_keymap_transform_0, map, 48) \
	fn(DT_N_S_keymap_transform_0, map, 49) \
	fn(DT_N_S_keymap_transform_0, map, 50) \
	fn(DT_N_S_keymap_transform_0, map, 51) \
	fn(DT_N_S_keymap_transform_0, map, 52) \
	fn(DT_N_S_keymap_transform_0, map, 53) \
	fn(DT_N_S_keymap_transform_0, map, 54) \
	fn(DT_N_S_keymap_transform_0, map, 55) \
	fn(DT_N_S_keymap_transform_0, map, 56) \
	fn(DT_N_S_keymap_transform_0, map, 57)
#define DT_N_S_keymap_transform_0_P_map_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_transform_0, map, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 37, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 38, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 39, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 40, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 41, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 42, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 43, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 44, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 45, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 46, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 47, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 48, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 49, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 50, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 51, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 52, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 53, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 54, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 55, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 56, __VA_ARGS__) \
	fn(DT_N_S_keymap_transform_0, map, 57, __VA_ARGS__)
#define DT_N_S_keymap_transform_0_P_map_LEN 58
#define DT_N_S_keymap_transform_0_P_map_EXISTS 1

/*
 * Devicetree node: /soc/gpio@50000300
 *
 * Node identifier: DT_N_S_soc_S_gpio_50000300
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_50000300_PATH "/soc/gpio@50000300"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_50000300_FULL_NAME "gpio@50000300"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_50000300_PARENT DT_N_S_soc
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_50000300_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_50000300_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_50000300_SUPPORTS_ORDS \
	10, /* /kscan */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_50000300_EXISTS 1
#define DT_N_INST_1_nordic_nrf_gpio DT_N_S_soc_S_gpio_50000300
#define DT_N_NODELABEL_gpio1        DT_N_S_soc_S_gpio_50000300

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_50000300_REG_NUM 2
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_VAL_ADDRESS 1342178048 /* 0x50000300 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_VAL_ADDRESS 1342179328 /* 0x50000800 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_50000300_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_50000300_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_50000300_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_50000300_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_50000300_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_50000300_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_50000300_P_reg {1342178048 /* 0x50000300 */, 512 /* 0x200 */, 1342179328 /* 0x50000800 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_0 1342178048
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_1 512
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_2 1342179328
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_3 768
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000300, reg, 0) \
	fn(DT_N_S_soc_S_gpio_50000300, reg, 1) \
	fn(DT_N_S_soc_S_gpio_50000300, reg, 2) \
	fn(DT_N_S_soc_S_gpio_50000300, reg, 3)
#define DT_N_S_soc_S_gpio_50000300_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000300, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000300, reg, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000300, reg, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000300, reg, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_label "GPIO_1"
#define DT_N_S_soc_S_gpio_50000300_P_label_STRING_TOKEN GPIO_1
#define DT_N_S_soc_S_gpio_50000300_P_label_STRING_UPPER_TOKEN GPIO_1
#define DT_N_S_soc_S_gpio_50000300_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000300, label, 0) \
	fn(DT_N_S_soc_S_gpio_50000300, label, 1) \
	fn(DT_N_S_soc_S_gpio_50000300, label, 2) \
	fn(DT_N_S_soc_S_gpio_50000300, label, 3) \
	fn(DT_N_S_soc_S_gpio_50000300, label, 4) \
	fn(DT_N_S_soc_S_gpio_50000300, label, 5)
#define DT_N_S_soc_S_gpio_50000300_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000300, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000300, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000300, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000300, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000300, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000300, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_label_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_port 1
#define DT_N_S_soc_S_gpio_50000300_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_50000300_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_ngpios 16
#define DT_N_S_soc_S_gpio_50000300_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_status "okay"
#define DT_N_S_soc_S_gpio_50000300_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_50000300_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000300, status, 0) \
	fn(DT_N_S_soc_S_gpio_50000300, status, 1) \
	fn(DT_N_S_soc_S_gpio_50000300, status, 2) \
	fn(DT_N_S_soc_S_gpio_50000300, status, 3)
#define DT_N_S_soc_S_gpio_50000300_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000300, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000300, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000300, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_50000300, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_50000300, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_50000300_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_50000300_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /kscan
 *
 * Node identifier: DT_N_S_kscan
 *
 * Binding (compatible = zmk,kscan-gpio-matrix):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/drivers/zephyr/dts/bindings/kscan/zmk,kscan-gpio-matrix.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_kscan_PATH "/kscan"

/* Node's name with unit-address: */
#define DT_N_S_kscan_FULL_NAME "kscan"

/* Node parent (/) identifier: */
#define DT_N_S_kscan_PARENT DT_N
#define DT_N_S_kscan_FOREACH_CHILD(fn) 
#define DT_N_S_kscan_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_kscan_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_kscan_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_kscan_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_kscan_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */ \
	9, /* /soc/gpio@50000300 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_kscan_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_kscan_EXISTS 1
#define DT_N_INST_0_zmk_kscan_gpio_matrix DT_N_S_kscan
#define DT_N_NODELABEL_kscan0             DT_N_S_kscan

/* Macros for properties that are special in the specification: */
#define DT_N_S_kscan_REG_NUM 0
#define DT_N_S_kscan_RANGES_NUM 0
#define DT_N_S_kscan_FOREACH_RANGE(fn) 
#define DT_N_S_kscan_IRQ_NUM 0
#define DT_N_S_kscan_COMPAT_MATCHES_zmk_kscan_gpio_matrix 1
#define DT_N_S_kscan_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_kscan_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_kscan_P_row_gpios_IDX_0_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_pin 24
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_1_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_1_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_pin 0
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_2_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_2_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_pin 11
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_3_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_3_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_pin 4
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_4_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_4_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_row_gpios_IDX_4_VAL_pin 6
#define DT_N_S_kscan_P_row_gpios_IDX_4_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_4_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan, row_gpios, 0) \
	fn(DT_N_S_kscan, row_gpios, 1) \
	fn(DT_N_S_kscan, row_gpios, 2) \
	fn(DT_N_S_kscan, row_gpios, 3) \
	fn(DT_N_S_kscan, row_gpios, 4)
#define DT_N_S_kscan_P_row_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan, row_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_kscan, row_gpios, 1, __VA_ARGS__) \
	fn(DT_N_S_kscan, row_gpios, 2, __VA_ARGS__) \
	fn(DT_N_S_kscan, row_gpios, 3, __VA_ARGS__) \
	fn(DT_N_S_kscan, row_gpios, 4, __VA_ARGS__)
#define DT_N_S_kscan_P_row_gpios_LEN 5
#define DT_N_S_kscan_P_row_gpios_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_0_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_pin 9
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_pin 10
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_2_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_2_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_pin 11
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_3_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_3_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_pin 13
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_4_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_4_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_pin 15
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_5_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_5_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_pin 2
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan, col_gpios, 0) \
	fn(DT_N_S_kscan, col_gpios, 1) \
	fn(DT_N_S_kscan, col_gpios, 2) \
	fn(DT_N_S_kscan, col_gpios, 3) \
	fn(DT_N_S_kscan, col_gpios, 4) \
	fn(DT_N_S_kscan, col_gpios, 5)
#define DT_N_S_kscan_P_col_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan, col_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_kscan, col_gpios, 1, __VA_ARGS__) \
	fn(DT_N_S_kscan, col_gpios, 2, __VA_ARGS__) \
	fn(DT_N_S_kscan, col_gpios, 3, __VA_ARGS__) \
	fn(DT_N_S_kscan, col_gpios, 4, __VA_ARGS__) \
	fn(DT_N_S_kscan, col_gpios, 5, __VA_ARGS__)
#define DT_N_S_kscan_P_col_gpios_LEN 6
#define DT_N_S_kscan_P_col_gpios_EXISTS 1
#define DT_N_S_kscan_P_debounce_press_ms 5
#define DT_N_S_kscan_P_debounce_press_ms_EXISTS 1
#define DT_N_S_kscan_P_debounce_release_ms 5
#define DT_N_S_kscan_P_debounce_release_ms_EXISTS 1
#define DT_N_S_kscan_P_debounce_scan_period_ms 1
#define DT_N_S_kscan_P_debounce_scan_period_ms_EXISTS 1
#define DT_N_S_kscan_P_poll_period_ms 10
#define DT_N_S_kscan_P_poll_period_ms_EXISTS 1
#define DT_N_S_kscan_P_diode_direction "col2row"
#define DT_N_S_kscan_P_diode_direction_STRING_TOKEN col2row
#define DT_N_S_kscan_P_diode_direction_STRING_UPPER_TOKEN COL2ROW
#define DT_N_S_kscan_P_diode_direction_ENUM_IDX 1
#define DT_N_S_kscan_P_diode_direction_ENUM_TOKEN col2row
#define DT_N_S_kscan_P_diode_direction_ENUM_UPPER_TOKEN COL2ROW
#define DT_N_S_kscan_P_diode_direction_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan, diode_direction, 0) \
	fn(DT_N_S_kscan, diode_direction, 1) \
	fn(DT_N_S_kscan, diode_direction, 2) \
	fn(DT_N_S_kscan, diode_direction, 3) \
	fn(DT_N_S_kscan, diode_direction, 4) \
	fn(DT_N_S_kscan, diode_direction, 5) \
	fn(DT_N_S_kscan, diode_direction, 6)
#define DT_N_S_kscan_P_diode_direction_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan, diode_direction, 0, __VA_ARGS__) \
	fn(DT_N_S_kscan, diode_direction, 1, __VA_ARGS__) \
	fn(DT_N_S_kscan, diode_direction, 2, __VA_ARGS__) \
	fn(DT_N_S_kscan, diode_direction, 3, __VA_ARGS__) \
	fn(DT_N_S_kscan, diode_direction, 4, __VA_ARGS__) \
	fn(DT_N_S_kscan, diode_direction, 5, __VA_ARGS__) \
	fn(DT_N_S_kscan, diode_direction, 6, __VA_ARGS__)
#define DT_N_S_kscan_P_diode_direction_EXISTS 1
#define DT_N_S_kscan_P_label "KSCAN"
#define DT_N_S_kscan_P_label_STRING_TOKEN KSCAN
#define DT_N_S_kscan_P_label_STRING_UPPER_TOKEN KSCAN
#define DT_N_S_kscan_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan, label, 0) \
	fn(DT_N_S_kscan, label, 1) \
	fn(DT_N_S_kscan, label, 2) \
	fn(DT_N_S_kscan, label, 3) \
	fn(DT_N_S_kscan, label, 4)
#define DT_N_S_kscan_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan, label, 0, __VA_ARGS__) \
	fn(DT_N_S_kscan, label, 1, __VA_ARGS__) \
	fn(DT_N_S_kscan, label, 2, __VA_ARGS__) \
	fn(DT_N_S_kscan, label, 3, __VA_ARGS__) \
	fn(DT_N_S_kscan, label, 4, __VA_ARGS__)
#define DT_N_S_kscan_P_label_EXISTS 1
#define DT_N_S_kscan_P_compatible {"zmk,kscan-gpio-matrix"}
#define DT_N_S_kscan_P_compatible_IDX_0 "zmk,kscan-gpio-matrix"
#define DT_N_S_kscan_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_kscan_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_kscan, compatible, 0)
#define DT_N_S_kscan_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_kscan, compatible, 0, __VA_ARGS__)
#define DT_N_S_kscan_P_compatible_LEN 1
#define DT_N_S_kscan_P_compatible_EXISTS 1
#define DT_N_S_kscan_P_wakeup_source 0
#define DT_N_S_kscan_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /pin-controller
 *
 * Node identifier: DT_N_S_pin_controller
 *
 * Binding (compatible = nordic,nrf-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/nordic,nrf-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_PATH "/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_FULL_NAME "pin-controller"

/* Node parent (/) identifier: */
#define DT_N_S_pin_controller_PARENT DT_N
#define DT_N_S_pin_controller_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pinctrl DT_N_S_pin_controller
#define DT_N_NODELABEL_pinctrl         DT_N_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_REG_NUM 0
#define DT_N_S_pin_controller_RANGES_NUM 0
#define DT_N_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_IRQ_NUM 0
#define DT_N_S_pin_controller_COMPAT_MATCHES_nordic_nrf_pinctrl 1
#define DT_N_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_P_compatible {"nordic,nrf-pinctrl"}
#define DT_N_S_pin_controller_P_compatible_IDX_0 "nordic,nrf-pinctrl"
#define DT_N_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_pin_controller_P_wakeup_source 0
#define DT_N_S_pin_controller_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /encoder_left
 *
 * Node identifier: DT_N_S_encoder_left
 *
 * Binding (compatible = alps,ec11):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/drivers/zephyr/dts/bindings/sensor/alps,ec11.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_encoder_left_PATH "/encoder_left"

/* Node's name with unit-address: */
#define DT_N_S_encoder_left_FULL_NAME "encoder_left"

/* Node parent (/) identifier: */
#define DT_N_S_encoder_left_PARENT DT_N
#define DT_N_S_encoder_left_FOREACH_CHILD(fn) 
#define DT_N_S_encoder_left_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_encoder_left_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_encoder_left_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_encoder_left_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_encoder_left_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_encoder_left_SUPPORTS_ORDS \
	14, /* /sensors */

/* Existence and alternate IDs: */
#define DT_N_S_encoder_left_EXISTS 1
#define DT_N_INST_0_alps_ec11       DT_N_S_encoder_left
#define DT_N_NODELABEL_left_encoder DT_N_S_encoder_left

/* Macros for properties that are special in the specification: */
#define DT_N_S_encoder_left_REG_NUM 0
#define DT_N_S_encoder_left_RANGES_NUM 0
#define DT_N_S_encoder_left_FOREACH_RANGE(fn) 
#define DT_N_S_encoder_left_IRQ_NUM 0
#define DT_N_S_encoder_left_COMPAT_MATCHES_alps_ec11 1
#define DT_N_S_encoder_left_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_encoder_left_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_encoder_left_P_label "LEFT_ENCODER"
#define DT_N_S_encoder_left_P_label_STRING_TOKEN LEFT_ENCODER
#define DT_N_S_encoder_left_P_label_STRING_UPPER_TOKEN LEFT_ENCODER
#define DT_N_S_encoder_left_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_encoder_left, label, 0) \
	fn(DT_N_S_encoder_left, label, 1) \
	fn(DT_N_S_encoder_left, label, 2) \
	fn(DT_N_S_encoder_left, label, 3) \
	fn(DT_N_S_encoder_left, label, 4) \
	fn(DT_N_S_encoder_left, label, 5) \
	fn(DT_N_S_encoder_left, label, 6) \
	fn(DT_N_S_encoder_left, label, 7) \
	fn(DT_N_S_encoder_left, label, 8) \
	fn(DT_N_S_encoder_left, label, 9) \
	fn(DT_N_S_encoder_left, label, 10) \
	fn(DT_N_S_encoder_left, label, 11)
#define DT_N_S_encoder_left_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_encoder_left, label, 0, __VA_ARGS__) \
	fn(DT_N_S_encoder_left, label, 1, __VA_ARGS__) \
	fn(DT_N_S_encoder_left, label, 2, __VA_ARGS__) \
	fn(DT_N_S_encoder_left, label, 3, __VA_ARGS__) \
	fn(DT_N_S_encoder_left, label, 4, __VA_ARGS__) \
	fn(DT_N_S_encoder_left, label, 5, __VA_ARGS__) \
	fn(DT_N_S_encoder_left, label, 6, __VA_ARGS__) \
	fn(DT_N_S_encoder_left, label, 7, __VA_ARGS__) \
	fn(DT_N_S_encoder_left, label, 8, __VA_ARGS__) \
	fn(DT_N_S_encoder_left, label, 9, __VA_ARGS__) \
	fn(DT_N_S_encoder_left, label, 10, __VA_ARGS__) \
	fn(DT_N_S_encoder_left, label, 11, __VA_ARGS__)
#define DT_N_S_encoder_left_P_label_EXISTS 1
#define DT_N_S_encoder_left_P_a_gpios_IDX_0_EXISTS 1
#define DT_N_S_encoder_left_P_a_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_encoder_left_P_a_gpios_IDX_0_VAL_pin 31
#define DT_N_S_encoder_left_P_a_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_encoder_left_P_a_gpios_IDX_0_VAL_flags 16
#define DT_N_S_encoder_left_P_a_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_encoder_left_P_a_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_encoder_left, a_gpios, 0)
#define DT_N_S_encoder_left_P_a_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_encoder_left, a_gpios, 0, __VA_ARGS__)
#define DT_N_S_encoder_left_P_a_gpios_LEN 1
#define DT_N_S_encoder_left_P_a_gpios_EXISTS 1
#define DT_N_S_encoder_left_P_b_gpios_IDX_0_EXISTS 1
#define DT_N_S_encoder_left_P_b_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_encoder_left_P_b_gpios_IDX_0_VAL_pin 29
#define DT_N_S_encoder_left_P_b_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_encoder_left_P_b_gpios_IDX_0_VAL_flags 16
#define DT_N_S_encoder_left_P_b_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_encoder_left_P_b_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_encoder_left, b_gpios, 0)
#define DT_N_S_encoder_left_P_b_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_encoder_left, b_gpios, 0, __VA_ARGS__)
#define DT_N_S_encoder_left_P_b_gpios_LEN 1
#define DT_N_S_encoder_left_P_b_gpios_EXISTS 1
#define DT_N_S_encoder_left_P_resolution 4
#define DT_N_S_encoder_left_P_resolution_EXISTS 1

/*
 * Devicetree node: /encoder_right
 *
 * Node identifier: DT_N_S_encoder_right
 *
 * Binding (compatible = alps,ec11):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/drivers/zephyr/dts/bindings/sensor/alps,ec11.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_encoder_right_PATH "/encoder_right"

/* Node's name with unit-address: */
#define DT_N_S_encoder_right_FULL_NAME "encoder_right"

/* Node parent (/) identifier: */
#define DT_N_S_encoder_right_PARENT DT_N
#define DT_N_S_encoder_right_FOREACH_CHILD(fn) 
#define DT_N_S_encoder_right_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_encoder_right_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_encoder_right_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_encoder_right_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_encoder_right_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_encoder_right_SUPPORTS_ORDS \
	14, /* /sensors */

/* Existence and alternate IDs: */
#define DT_N_S_encoder_right_EXISTS 1
#define DT_N_INST_1_alps_ec11        DT_N_S_encoder_right
#define DT_N_NODELABEL_right_encoder DT_N_S_encoder_right

/* Macros for properties that are special in the specification: */
#define DT_N_S_encoder_right_REG_NUM 0
#define DT_N_S_encoder_right_RANGES_NUM 0
#define DT_N_S_encoder_right_FOREACH_RANGE(fn) 
#define DT_N_S_encoder_right_IRQ_NUM 0
#define DT_N_S_encoder_right_COMPAT_MATCHES_alps_ec11 1
#define DT_N_S_encoder_right_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_encoder_right_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_encoder_right_P_label "RIGHT_ENCODER"
#define DT_N_S_encoder_right_P_label_STRING_TOKEN RIGHT_ENCODER
#define DT_N_S_encoder_right_P_label_STRING_UPPER_TOKEN RIGHT_ENCODER
#define DT_N_S_encoder_right_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_encoder_right, label, 0) \
	fn(DT_N_S_encoder_right, label, 1) \
	fn(DT_N_S_encoder_right, label, 2) \
	fn(DT_N_S_encoder_right, label, 3) \
	fn(DT_N_S_encoder_right, label, 4) \
	fn(DT_N_S_encoder_right, label, 5) \
	fn(DT_N_S_encoder_right, label, 6) \
	fn(DT_N_S_encoder_right, label, 7) \
	fn(DT_N_S_encoder_right, label, 8) \
	fn(DT_N_S_encoder_right, label, 9) \
	fn(DT_N_S_encoder_right, label, 10) \
	fn(DT_N_S_encoder_right, label, 11) \
	fn(DT_N_S_encoder_right, label, 12)
#define DT_N_S_encoder_right_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_encoder_right, label, 0, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 1, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 2, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 3, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 4, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 5, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 6, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 7, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 8, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 9, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 10, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 11, __VA_ARGS__) \
	fn(DT_N_S_encoder_right, label, 12, __VA_ARGS__)
#define DT_N_S_encoder_right_P_label_EXISTS 1
#define DT_N_S_encoder_right_P_a_gpios_IDX_0_EXISTS 1
#define DT_N_S_encoder_right_P_a_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_encoder_right_P_a_gpios_IDX_0_VAL_pin 29
#define DT_N_S_encoder_right_P_a_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_encoder_right_P_a_gpios_IDX_0_VAL_flags 16
#define DT_N_S_encoder_right_P_a_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_encoder_right_P_a_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_encoder_right, a_gpios, 0)
#define DT_N_S_encoder_right_P_a_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_encoder_right, a_gpios, 0, __VA_ARGS__)
#define DT_N_S_encoder_right_P_a_gpios_LEN 1
#define DT_N_S_encoder_right_P_a_gpios_EXISTS 1
#define DT_N_S_encoder_right_P_b_gpios_IDX_0_EXISTS 1
#define DT_N_S_encoder_right_P_b_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_encoder_right_P_b_gpios_IDX_0_VAL_pin 31
#define DT_N_S_encoder_right_P_b_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_encoder_right_P_b_gpios_IDX_0_VAL_flags 16
#define DT_N_S_encoder_right_P_b_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_encoder_right_P_b_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_encoder_right, b_gpios, 0)
#define DT_N_S_encoder_right_P_b_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_encoder_right, b_gpios, 0, __VA_ARGS__)
#define DT_N_S_encoder_right_P_b_gpios_LEN 1
#define DT_N_S_encoder_right_P_b_gpios_EXISTS 1
#define DT_N_S_encoder_right_P_resolution 4
#define DT_N_S_encoder_right_P_resolution_EXISTS 1

/*
 * Devicetree node: /sensors
 *
 * Node identifier: DT_N_S_sensors
 *
 * Binding (compatible = zmk,keymap-sensors):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/zmk,keymap-sensors.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_sensors_PATH "/sensors"

/* Node's name with unit-address: */
#define DT_N_S_sensors_FULL_NAME "sensors"

/* Node parent (/) identifier: */
#define DT_N_S_sensors_PARENT DT_N
#define DT_N_S_sensors_FOREACH_CHILD(fn) 
#define DT_N_S_sensors_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_sensors_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_sensors_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_sensors_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sensors_REQUIRES_ORDS \
	0, /* / */ \
	12, /* /encoder_left */ \
	13, /* /encoder_right */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sensors_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sensors_EXISTS 1
#define DT_N_INST_0_zmk_keymap_sensors DT_N_S_sensors

/* Macros for properties that are special in the specification: */
#define DT_N_S_sensors_REG_NUM 0
#define DT_N_S_sensors_RANGES_NUM 0
#define DT_N_S_sensors_FOREACH_RANGE(fn) 
#define DT_N_S_sensors_IRQ_NUM 0
#define DT_N_S_sensors_COMPAT_MATCHES_zmk_keymap_sensors 1
#define DT_N_S_sensors_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_sensors_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_sensors_P_sensors_IDX_0 DT_N_S_encoder_left
#define DT_N_S_sensors_P_sensors_IDX_0_PH DT_N_S_encoder_left
#define DT_N_S_sensors_P_sensors_IDX_0_EXISTS 1
#define DT_N_S_sensors_P_sensors_IDX_1 DT_N_S_encoder_right
#define DT_N_S_sensors_P_sensors_IDX_1_PH DT_N_S_encoder_right
#define DT_N_S_sensors_P_sensors_IDX_1_EXISTS 1
#define DT_N_S_sensors_P_sensors_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sensors, sensors, 0) \
	fn(DT_N_S_sensors, sensors, 1)
#define DT_N_S_sensors_P_sensors_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sensors, sensors, 0, __VA_ARGS__) \
	fn(DT_N_S_sensors, sensors, 1, __VA_ARGS__)
#define DT_N_S_sensors_P_sensors_LEN 2
#define DT_N_S_sensors_P_sensors_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	16, /* /soc/timer@4000a000 */ \
	76, /* /soc/adc@40007000 */ \
	77, /* /soc/clock@40000000 */ \
	78, /* /soc/ecb@4000e000 */ \
	79, /* /soc/egu@40014000 */ \
	80, /* /soc/egu@40015000 */ \
	81, /* /soc/egu@40016000 */ \
	82, /* /soc/egu@40017000 */ \
	83, /* /soc/egu@40018000 */ \
	84, /* /soc/egu@40019000 */ \
	86, /* /soc/gpiote@40006000 */ \
	87, /* /soc/i2c@40004000 */ \
	88, /* /soc/i2s@40025000 */ \
	90, /* /soc/pdm@4001d000 */ \
	91, /* /soc/pwm@4001c000 */ \
	92, /* /soc/pwm@40021000 */ \
	93, /* /soc/pwm@40022000 */ \
	94, /* /soc/pwm@4002d000 */ \
	95, /* /soc/qdec@40012000 */ \
	96, /* /soc/qspi@40029000 */ \
	97, /* /soc/radio@40001000 */ \
	98, /* /soc/random@4000d000 */ \
	99, /* /soc/rtc@4000b000 */ \
	100, /* /soc/rtc@40011000 */ \
	101, /* /soc/rtc@40024000 */ \
	102, /* /soc/spi@40003000 */ \
	103, /* /soc/spi@40004000 */ \
	104, /* /soc/spi@40023000 */ \
	105, /* /soc/spi@4002f000 */ \
	106, /* /soc/temp@4000c000 */ \
	107, /* /soc/timer@40008000 */ \
	108, /* /soc/timer@40009000 */ \
	109, /* /soc/timer@4001a000 */ \
	110, /* /soc/timer@4001b000 */ \
	112, /* /soc/uart@40002000 */ \
	113, /* /soc/uart@40028000 */ \
	115, /* /soc/watchdog@40010000 */ \
	117, /* /soc/crypto@5002a000/crypto@5002b000 */ \
	125, /* /soc/i2c@40003000 */ \
	127, /* /soc/usbd@40027000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@4000a000
 *
 * Node identifier: DT_N_S_soc_S_timer_4000a000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4000a000_PATH "/soc/timer@4000a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4000a000_FULL_NAME "timer@4000a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4000a000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4000a000_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4000a000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4000a000_SUPPORTS_ORDS \
	17, /* /sw-pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4000a000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_timer DT_N_S_soc_S_timer_4000a000
#define DT_N_NODELABEL_timer2        DT_N_S_soc_S_timer_4000a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4000a000_REG_NUM 1
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_VAL_ADDRESS 1073782784 /* 0x4000a000 */
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4000a000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4000a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4000a000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4000a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4000a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4000a000_P_reg {1073782784 /* 0x4000a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_0 1073782784
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4000a000, reg, 0) \
	fn(DT_N_S_soc_S_timer_4000a000, reg, 1)
#define DT_N_S_soc_S_timer_4000a000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4000a000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4000a000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_cc_num 4
#define DT_N_S_soc_S_timer_4000a000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts {10 /* 0xa */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4000a000, interrupts, 0) \
	fn(DT_N_S_soc_S_timer_4000a000, interrupts, 1)
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4000a000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4000a000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_label "TIMER_2"
#define DT_N_S_soc_S_timer_4000a000_P_label_STRING_TOKEN TIMER_2
#define DT_N_S_soc_S_timer_4000a000_P_label_STRING_UPPER_TOKEN TIMER_2
#define DT_N_S_soc_S_timer_4000a000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4000a000, label, 0) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 1) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 2) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 3) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 4) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 5) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 6)
#define DT_N_S_soc_S_timer_4000a000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4000a000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4000a000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_label_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_prescaler 0
#define DT_N_S_soc_S_timer_4000a000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_status "okay"
#define DT_N_S_soc_S_timer_4000a000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_4000a000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4000a000, status, 0) \
	fn(DT_N_S_soc_S_timer_4000a000, status, 1) \
	fn(DT_N_S_soc_S_timer_4000a000, status, 2) \
	fn(DT_N_S_soc_S_timer_4000a000, status, 3)
#define DT_N_S_soc_S_timer_4000a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4000a000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4000a000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4000a000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4000a000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4000a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4000a000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4000a000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /sw-pwm
 *
 * Node identifier: DT_N_S_sw_pwm
 *
 * Binding (compatible = nordic,nrf-sw-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-sw-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_sw_pwm_PATH "/sw-pwm"

/* Node's name with unit-address: */
#define DT_N_S_sw_pwm_FULL_NAME "sw-pwm"

/* Node parent (/) identifier: */
#define DT_N_S_sw_pwm_PARENT DT_N
#define DT_N_S_sw_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_sw_pwm_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sw_pwm_REQUIRES_ORDS \
	0, /* / */ \
	16, /* /soc/timer@4000a000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sw_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sw_pwm_EXISTS 1
#define DT_N_INST_0_nordic_nrf_sw_pwm DT_N_S_sw_pwm
#define DT_N_NODELABEL_sw_pwm         DT_N_S_sw_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_sw_pwm_REG_NUM 0
#define DT_N_S_sw_pwm_RANGES_NUM 0
#define DT_N_S_sw_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_sw_pwm_IRQ_NUM 0
#define DT_N_S_sw_pwm_COMPAT_MATCHES_nordic_nrf_sw_pwm 1
#define DT_N_S_sw_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_sw_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_sw_pwm_P_generator DT_N_S_soc_S_timer_4000a000
#define DT_N_S_sw_pwm_P_generator_IDX_0 DT_N_S_soc_S_timer_4000a000
#define DT_N_S_sw_pwm_P_generator_IDX_0_PH DT_N_S_soc_S_timer_4000a000
#define DT_N_S_sw_pwm_P_generator_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_generator_LEN 1
#define DT_N_S_sw_pwm_P_generator_EXISTS 1
#define DT_N_S_sw_pwm_P_channel_count 3
#define DT_N_S_sw_pwm_P_channel_count_EXISTS 1
#define DT_N_S_sw_pwm_P_clock_prescaler 0
#define DT_N_S_sw_pwm_P_clock_prescaler_EXISTS 1
#define DT_N_S_sw_pwm_P_label "SW_PWM"
#define DT_N_S_sw_pwm_P_label_STRING_TOKEN SW_PWM
#define DT_N_S_sw_pwm_P_label_STRING_UPPER_TOKEN SW_PWM
#define DT_N_S_sw_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, label, 0) \
	fn(DT_N_S_sw_pwm, label, 1) \
	fn(DT_N_S_sw_pwm, label, 2) \
	fn(DT_N_S_sw_pwm, label, 3) \
	fn(DT_N_S_sw_pwm, label, 4) \
	fn(DT_N_S_sw_pwm, label, 5)
#define DT_N_S_sw_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, label, 4, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, label, 5, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_label_EXISTS 1
#define DT_N_S_sw_pwm_P_status "disabled"
#define DT_N_S_sw_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_sw_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_sw_pwm_P_status_ENUM_IDX 2
#define DT_N_S_sw_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_sw_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, status, 0) \
	fn(DT_N_S_sw_pwm, status, 1) \
	fn(DT_N_S_sw_pwm, status, 2) \
	fn(DT_N_S_sw_pwm, status, 3) \
	fn(DT_N_S_sw_pwm, status, 4) \
	fn(DT_N_S_sw_pwm, status, 5) \
	fn(DT_N_S_sw_pwm, status, 6) \
	fn(DT_N_S_sw_pwm, status, 7)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_sw_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_status_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible {"nordic,nrf-sw-pwm"}
#define DT_N_S_sw_pwm_P_compatible_IDX_0 "nordic,nrf-sw-pwm"
#define DT_N_S_sw_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, compatible, 0)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_compatible_LEN 1
#define DT_N_S_sw_pwm_P_compatible_EXISTS 1
#define DT_N_S_sw_pwm_P_wakeup_source 0
#define DT_N_S_sw_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /vbatt
 *
 * Node identifier: DT_N_S_vbatt
 *
 * Binding (compatible = zmk,battery-nrf-vddh):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/drivers/zephyr/dts/bindings/sensor/zmk,battery-nrf-vddh.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vbatt_PATH "/vbatt"

/* Node's name with unit-address: */
#define DT_N_S_vbatt_FULL_NAME "vbatt"

/* Node parent (/) identifier: */
#define DT_N_S_vbatt_PARENT DT_N
#define DT_N_S_vbatt_FOREACH_CHILD(fn) 
#define DT_N_S_vbatt_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vbatt_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vbatt_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vbatt_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vbatt_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vbatt_EXISTS 1
#define DT_N_INST_0_zmk_battery_nrf_vddh DT_N_S_vbatt
#define DT_N_NODELABEL_vbatt             DT_N_S_vbatt

/* Macros for properties that are special in the specification: */
#define DT_N_S_vbatt_REG_NUM 0
#define DT_N_S_vbatt_RANGES_NUM 0
#define DT_N_S_vbatt_FOREACH_RANGE(fn) 
#define DT_N_S_vbatt_IRQ_NUM 0
#define DT_N_S_vbatt_COMPAT_MATCHES_zmk_battery_nrf_vddh 1
#define DT_N_S_vbatt_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vbatt_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vbatt_P_label "BATTERY"
#define DT_N_S_vbatt_P_label_STRING_TOKEN BATTERY
#define DT_N_S_vbatt_P_label_STRING_UPPER_TOKEN BATTERY
#define DT_N_S_vbatt_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vbatt, label, 0) \
	fn(DT_N_S_vbatt, label, 1) \
	fn(DT_N_S_vbatt, label, 2) \
	fn(DT_N_S_vbatt, label, 3) \
	fn(DT_N_S_vbatt, label, 4) \
	fn(DT_N_S_vbatt, label, 5) \
	fn(DT_N_S_vbatt, label, 6)
#define DT_N_S_vbatt_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vbatt, label, 0, __VA_ARGS__) \
	fn(DT_N_S_vbatt, label, 1, __VA_ARGS__) \
	fn(DT_N_S_vbatt, label, 2, __VA_ARGS__) \
	fn(DT_N_S_vbatt, label, 3, __VA_ARGS__) \
	fn(DT_N_S_vbatt, label, 4, __VA_ARGS__) \
	fn(DT_N_S_vbatt, label, 5, __VA_ARGS__) \
	fn(DT_N_S_vbatt, label, 6, __VA_ARGS__)
#define DT_N_S_vbatt_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors
 *
 * Node identifier: DT_N_S_behaviors
 */

/* Node's full path: */
#define DT_N_S_behaviors_PATH "/behaviors"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_FULL_NAME "behaviors"

/* Node parent (/) identifier: */
#define DT_N_S_behaviors_PARENT DT_N
#define DT_N_S_behaviors_FOREACH_CHILD(fn) fn(DT_N_S_behaviors_S_behavior_key_press) fn(DT_N_S_behaviors_S_behavior_none) fn(DT_N_S_behaviors_S_behavior_layer_tap) fn(DT_N_S_behaviors_S_behavior_momentary_layer) fn(DT_N_S_behaviors_S_behavior_to_layer) fn(DT_N_S_behaviors_S_behavior_reset) fn(DT_N_S_behaviors_S_behavior_reset_dfu) fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press) fn(DT_N_S_behaviors_S_behavior_rgb_underglow) fn(DT_N_S_behaviors_S_behavior_bluetooth) fn(DT_N_S_behaviors_S_behavior_ext_power) fn(DT_N_S_behaviors_S_behavior_outputs) fn(DT_N_S_behaviors_S_behavior_caps_word) fn(DT_N_S_behaviors_S_macro_control_mode_tap) fn(DT_N_S_behaviors_S_macro_control_mode_press) fn(DT_N_S_behaviors_S_macro_control_mode_release) fn(DT_N_S_behaviors_S_macro_control_tap_time) fn(DT_N_S_behaviors_S_macro_control_wait_time) fn(DT_N_S_behaviors_S_macro_pause_for_release) fn(DT_N_S_behaviors_S_homerow_mods) fn(DT_N_S_behaviors_S_u_bt_sel_0) fn(DT_N_S_behaviors_S_u_bt_sel_1) fn(DT_N_S_behaviors_S_u_bt_sel_2) fn(DT_N_S_behaviors_S_u_bt_sel_3) fn(DT_N_S_behaviors_S_u_bt_sel_4) fn(DT_N_S_behaviors_S_u_out_tog) fn(DT_N_S_behaviors_S_u_rgb_eff) fn(DT_N_S_behaviors_S_u_rgb_hui) fn(DT_N_S_behaviors_S_u_rgb_sai) fn(DT_N_S_behaviors_S_u_rgb_bri) fn(DT_N_S_behaviors_S_u_ep_tog) fn(DT_N_S_behaviors_S_u_caps_word)
#define DT_N_S_behaviors_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_none, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_layer_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_momentary_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_to_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_reset, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_reset_dfu, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_rgb_underglow, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_bluetooth, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_ext_power, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_outputs, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_caps_word, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_control_mode_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_control_mode_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_control_mode_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_control_tap_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_control_wait_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_homerow_mods, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_0, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_1, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_2, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_3, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_4, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_out_tog, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_eff, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_hui, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_sai, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_bri, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_ep_tog, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_caps_word, __VA_ARGS__)
#define DT_N_S_behaviors_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_behaviors_S_behavior_key_press) fn(DT_N_S_behaviors_S_behavior_none) fn(DT_N_S_behaviors_S_behavior_layer_tap) fn(DT_N_S_behaviors_S_behavior_momentary_layer) fn(DT_N_S_behaviors_S_behavior_to_layer) fn(DT_N_S_behaviors_S_behavior_reset) fn(DT_N_S_behaviors_S_behavior_reset_dfu) fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press) fn(DT_N_S_behaviors_S_behavior_rgb_underglow) fn(DT_N_S_behaviors_S_behavior_bluetooth) fn(DT_N_S_behaviors_S_behavior_ext_power) fn(DT_N_S_behaviors_S_behavior_outputs) fn(DT_N_S_behaviors_S_behavior_caps_word) fn(DT_N_S_behaviors_S_macro_control_mode_tap) fn(DT_N_S_behaviors_S_macro_control_mode_press) fn(DT_N_S_behaviors_S_macro_control_mode_release) fn(DT_N_S_behaviors_S_macro_control_tap_time) fn(DT_N_S_behaviors_S_macro_control_wait_time) fn(DT_N_S_behaviors_S_macro_pause_for_release) fn(DT_N_S_behaviors_S_homerow_mods) fn(DT_N_S_behaviors_S_u_bt_sel_0) fn(DT_N_S_behaviors_S_u_bt_sel_1) fn(DT_N_S_behaviors_S_u_bt_sel_2) fn(DT_N_S_behaviors_S_u_bt_sel_3) fn(DT_N_S_behaviors_S_u_bt_sel_4) fn(DT_N_S_behaviors_S_u_out_tog) fn(DT_N_S_behaviors_S_u_rgb_eff) fn(DT_N_S_behaviors_S_u_rgb_hui) fn(DT_N_S_behaviors_S_u_rgb_sai) fn(DT_N_S_behaviors_S_u_rgb_bri) fn(DT_N_S_behaviors_S_u_ep_tog) fn(DT_N_S_behaviors_S_u_caps_word) 
#define DT_N_S_behaviors_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_none, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_layer_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_momentary_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_to_layer, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_reset, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_reset_dfu, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_rgb_underglow, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_bluetooth, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_ext_power, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_outputs, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_caps_word, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_control_mode_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_control_mode_press, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_control_mode_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_control_tap_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_control_wait_time, __VA_ARGS__) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__) fn(DT_N_S_behaviors_S_homerow_mods, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_0, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_1, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_2, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_3, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_4, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_out_tog, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_eff, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_hui, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_sai, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_bri, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_ep_tog, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_caps_word, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_SUPPORTS_ORDS \
	20, /* /behaviors/behavior_reset */ \
	21, /* /behaviors/macro_control_mode_press */ \
	22, /* /behaviors/macro_control_mode_release */ \
	23, /* /behaviors/macro_control_mode_tap */ \
	24, /* /behaviors/macro_control_tap_time */ \
	25, /* /behaviors/macro_control_wait_time */ \
	26, /* /behaviors/macro_pause_for_release */ \
	27, /* /behaviors/behavior_bluetooth */ \
	30, /* /behaviors/u_bt_sel_4 */ \
	34, /* /behaviors/behavior_key_press */ \
	35, /* /behaviors/behavior_momentary_layer */ \
	36, /* /behaviors/behavior_layer_tap */ \
	37, /* /behaviors/behavior_none */ \
	38, /* /behaviors/behavior_sensor_rotate_key_press */ \
	39, /* /behaviors/homerow_mods */ \
	47, /* /behaviors/behavior_reset_dfu */ \
	48, /* /behaviors/behavior_to_layer */ \
	49, /* /behaviors/behavior_caps_word */ \
	50, /* /behaviors/u_caps_word */ \
	53, /* /behaviors/behavior_rgb_underglow */ \
	55, /* /behaviors/u_bt_sel_0 */ \
	57, /* /behaviors/u_bt_sel_1 */ \
	59, /* /behaviors/u_bt_sel_2 */ \
	61, /* /behaviors/u_bt_sel_3 */ \
	62, /* /behaviors/behavior_ext_power */ \
	63, /* /behaviors/u_ep_tog */ \
	64, /* /behaviors/behavior_outputs */ \
	65, /* /behaviors/u_out_tog */ \
	66, /* /behaviors/u_rgb_bri */ \
	67, /* /behaviors/u_rgb_eff */ \
	68, /* /behaviors/u_rgb_hui */ \
	69, /* /behaviors/u_rgb_sai */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_REG_NUM 0
#define DT_N_S_behaviors_RANGES_NUM 0
#define DT_N_S_behaviors_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_IRQ_NUM 0
#define DT_N_S_behaviors_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/behavior_reset
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_reset
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_reset_PATH "/behaviors/behavior_reset"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_reset_FULL_NAME "behavior_reset"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_reset_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_reset_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_reset_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_reset_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_reset_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_reset_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_reset_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_reset_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_reset_EXISTS 1
#define DT_N_INST_0_zmk_behavior_reset DT_N_S_behaviors_S_behavior_reset
#define DT_N_NODELABEL_reset           DT_N_S_behaviors_S_behavior_reset

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_reset_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_reset_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_COMPAT_MATCHES_zmk_behavior_reset 1
#define DT_N_S_behaviors_S_behavior_reset_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_reset_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_reset_P_type 0
#define DT_N_S_behaviors_S_behavior_reset_P_type_EXISTS 1
#define DT_N_S_behaviors_S_behavior_reset_P_label "RESET"
#define DT_N_S_behaviors_S_behavior_reset_P_label_STRING_TOKEN RESET
#define DT_N_S_behaviors_S_behavior_reset_P_label_STRING_UPPER_TOKEN RESET
#define DT_N_S_behaviors_S_behavior_reset_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_reset, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_reset, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_reset, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_reset, label, 3) \
	fn(DT_N_S_behaviors_S_behavior_reset, label, 4)
#define DT_N_S_behaviors_S_behavior_reset_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_reset, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_reset, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_reset, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_reset, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_reset, label, 4, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_reset_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_control_mode_press
 *
 * Node identifier: DT_N_S_behaviors_S_macro_control_mode_press
 *
 * Binding (compatible = zmk,macro-control-mode-press):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/macros/zmk,macro-control-mode-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_control_mode_press_PATH "/behaviors/macro_control_mode_press"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_control_mode_press_FULL_NAME "macro_control_mode_press"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_control_mode_press_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_control_mode_press_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_control_mode_press_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_control_mode_press_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_control_mode_press_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_control_mode_press_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_control_mode_press_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_control_mode_press_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_control_mode_press_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_press DT_N_S_behaviors_S_macro_control_mode_press
#define DT_N_NODELABEL_macro_press               DT_N_S_behaviors_S_macro_control_mode_press

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_control_mode_press_REG_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_press_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_press_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_control_mode_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_press_COMPAT_MATCHES_zmk_macro_control_mode_press 1
#define DT_N_S_behaviors_S_macro_control_mode_press_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_control_mode_press_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_control_mode_press_P_label "MAC_PRESS"
#define DT_N_S_behaviors_S_macro_control_mode_press_P_label_STRING_TOKEN MAC_PRESS
#define DT_N_S_behaviors_S_macro_control_mode_press_P_label_STRING_UPPER_TOKEN MAC_PRESS
#define DT_N_S_behaviors_S_macro_control_mode_press_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 0) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 1) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 2) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 3) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 4) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 5) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 6) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 7) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 8)
#define DT_N_S_behaviors_S_macro_control_mode_press_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_press, label, 8, __VA_ARGS__)
#define DT_N_S_behaviors_S_macro_control_mode_press_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_control_mode_release
 *
 * Node identifier: DT_N_S_behaviors_S_macro_control_mode_release
 *
 * Binding (compatible = zmk,macro-control-mode-release):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/macros/zmk,macro-control-mode-release.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_control_mode_release_PATH "/behaviors/macro_control_mode_release"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_control_mode_release_FULL_NAME "macro_control_mode_release"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_control_mode_release_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_control_mode_release_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_control_mode_release_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_control_mode_release_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_control_mode_release_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_control_mode_release_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_control_mode_release_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_control_mode_release_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_control_mode_release_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_release DT_N_S_behaviors_S_macro_control_mode_release
#define DT_N_NODELABEL_macro_release               DT_N_S_behaviors_S_macro_control_mode_release

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_control_mode_release_REG_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_release_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_release_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_control_mode_release_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_release_COMPAT_MATCHES_zmk_macro_control_mode_release 1
#define DT_N_S_behaviors_S_macro_control_mode_release_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_control_mode_release_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_control_mode_release_P_label "MAC_REL"
#define DT_N_S_behaviors_S_macro_control_mode_release_P_label_STRING_TOKEN MAC_REL
#define DT_N_S_behaviors_S_macro_control_mode_release_P_label_STRING_UPPER_TOKEN MAC_REL
#define DT_N_S_behaviors_S_macro_control_mode_release_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 0) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 1) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 2) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 3) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 4) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 5) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 6)
#define DT_N_S_behaviors_S_macro_control_mode_release_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_release, label, 6, __VA_ARGS__)
#define DT_N_S_behaviors_S_macro_control_mode_release_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_control_mode_tap
 *
 * Node identifier: DT_N_S_behaviors_S_macro_control_mode_tap
 *
 * Binding (compatible = zmk,macro-control-mode-tap):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/macros/zmk,macro-control-mode-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_PATH "/behaviors/macro_control_mode_tap"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_FULL_NAME "macro_control_mode_tap"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_control_mode_tap_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_control_mode_tap_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_control_mode_tap_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_control_mode_tap_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_tap DT_N_S_behaviors_S_macro_control_mode_tap
#define DT_N_NODELABEL_macro_tap               DT_N_S_behaviors_S_macro_control_mode_tap

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_REG_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_tap_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_tap_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_control_mode_tap_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_tap_COMPAT_MATCHES_zmk_macro_control_mode_tap 1
#define DT_N_S_behaviors_S_macro_control_mode_tap_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_P_label "MAC_TAP"
#define DT_N_S_behaviors_S_macro_control_mode_tap_P_label_STRING_TOKEN MAC_TAP
#define DT_N_S_behaviors_S_macro_control_mode_tap_P_label_STRING_UPPER_TOKEN MAC_TAP
#define DT_N_S_behaviors_S_macro_control_mode_tap_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 0) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 1) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 2) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 3) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 4) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 5) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 6)
#define DT_N_S_behaviors_S_macro_control_mode_tap_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_mode_tap, label, 6, __VA_ARGS__)
#define DT_N_S_behaviors_S_macro_control_mode_tap_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_control_tap_time
 *
 * Node identifier: DT_N_S_behaviors_S_macro_control_tap_time
 *
 * Binding (compatible = zmk,macro-control-tap-time):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/macros/zmk,macro-control-tap-time.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_control_tap_time_PATH "/behaviors/macro_control_tap_time"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_control_tap_time_FULL_NAME "macro_control_tap_time"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_control_tap_time_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_control_tap_time_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_control_tap_time_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_control_tap_time_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_control_tap_time_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_control_tap_time_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_control_tap_time_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_control_tap_time_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_control_tap_time_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_tap_time DT_N_S_behaviors_S_macro_control_tap_time
#define DT_N_NODELABEL_macro_tap_time          DT_N_S_behaviors_S_macro_control_tap_time

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_control_tap_time_REG_NUM 0
#define DT_N_S_behaviors_S_macro_control_tap_time_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_control_tap_time_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_control_tap_time_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_control_tap_time_COMPAT_MATCHES_zmk_macro_control_tap_time 1
#define DT_N_S_behaviors_S_macro_control_tap_time_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_control_tap_time_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_control_tap_time_P_label "MAC_TAP_TIME"
#define DT_N_S_behaviors_S_macro_control_tap_time_P_label_STRING_TOKEN MAC_TAP_TIME
#define DT_N_S_behaviors_S_macro_control_tap_time_P_label_STRING_UPPER_TOKEN MAC_TAP_TIME
#define DT_N_S_behaviors_S_macro_control_tap_time_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 0) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 1) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 2) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 3) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 4) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 5) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 6) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 7) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 8) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 9) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 10) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 11)
#define DT_N_S_behaviors_S_macro_control_tap_time_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 9, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 10, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_tap_time, label, 11, __VA_ARGS__)
#define DT_N_S_behaviors_S_macro_control_tap_time_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_control_wait_time
 *
 * Node identifier: DT_N_S_behaviors_S_macro_control_wait_time
 *
 * Binding (compatible = zmk,macro-control-wait-time):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/macros/zmk,macro-control-wait-time.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_control_wait_time_PATH "/behaviors/macro_control_wait_time"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_control_wait_time_FULL_NAME "macro_control_wait_time"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_control_wait_time_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_control_wait_time_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_control_wait_time_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_control_wait_time_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_control_wait_time_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_control_wait_time_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_control_wait_time_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_control_wait_time_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_control_wait_time_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_wait_time DT_N_S_behaviors_S_macro_control_wait_time
#define DT_N_NODELABEL_macro_wait_time          DT_N_S_behaviors_S_macro_control_wait_time

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_control_wait_time_REG_NUM 0
#define DT_N_S_behaviors_S_macro_control_wait_time_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_control_wait_time_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_control_wait_time_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_control_wait_time_COMPAT_MATCHES_zmk_macro_control_wait_time 1
#define DT_N_S_behaviors_S_macro_control_wait_time_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_control_wait_time_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_control_wait_time_P_label "MAC_WAIT_TIME"
#define DT_N_S_behaviors_S_macro_control_wait_time_P_label_STRING_TOKEN MAC_WAIT_TIME
#define DT_N_S_behaviors_S_macro_control_wait_time_P_label_STRING_UPPER_TOKEN MAC_WAIT_TIME
#define DT_N_S_behaviors_S_macro_control_wait_time_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 0) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 1) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 2) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 3) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 4) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 5) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 6) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 7) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 8) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 9) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 10) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 11) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 12)
#define DT_N_S_behaviors_S_macro_control_wait_time_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 9, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 10, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 11, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_control_wait_time, label, 12, __VA_ARGS__)
#define DT_N_S_behaviors_S_macro_control_wait_time_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_pause_for_release
 *
 * Node identifier: DT_N_S_behaviors_S_macro_pause_for_release
 *
 * Binding (compatible = zmk,macro-pause-for-release):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/macros/zmk,macro-pause-for-release.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_pause_for_release_PATH "/behaviors/macro_pause_for_release"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_macro_pause_for_release_FULL_NAME "macro_pause_for_release"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_pause_for_release_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_pause_for_release_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_pause_for_release_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_pause_for_release_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_pause_for_release_EXISTS 1
#define DT_N_INST_0_zmk_macro_pause_for_release DT_N_S_behaviors_S_macro_pause_for_release
#define DT_N_NODELABEL_macro_pause_for_release  DT_N_S_behaviors_S_macro_pause_for_release

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_macro_pause_for_release_REG_NUM 0
#define DT_N_S_behaviors_S_macro_pause_for_release_RANGES_NUM 0
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_macro_pause_for_release_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_MATCHES_zmk_macro_pause_for_release 1
#define DT_N_S_behaviors_S_macro_pause_for_release_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_macro_pause_for_release_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_pause_for_release_P_label "MAC_WAIT_REL"
#define DT_N_S_behaviors_S_macro_pause_for_release_P_label_STRING_TOKEN MAC_WAIT_REL
#define DT_N_S_behaviors_S_macro_pause_for_release_P_label_STRING_UPPER_TOKEN MAC_WAIT_REL
#define DT_N_S_behaviors_S_macro_pause_for_release_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 0) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 1) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 2) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 3) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 4) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 5) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 6) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 7) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 8) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 9) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 10) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 11)
#define DT_N_S_behaviors_S_macro_pause_for_release_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 9, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 10, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_macro_pause_for_release, label, 11, __VA_ARGS__)
#define DT_N_S_behaviors_S_macro_pause_for_release_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_bluetooth
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_bluetooth
 *
 * Binding (compatible = zmk,behavior-bluetooth):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-bluetooth.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_bluetooth_PATH "/behaviors/behavior_bluetooth"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_bluetooth_FULL_NAME "behavior_bluetooth"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_bluetooth_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_bluetooth_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_bluetooth_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_bluetooth_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_bluetooth_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_bluetooth_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_bluetooth_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_bluetooth_SUPPORTS_ORDS \
	29, /* /macros/u_macro_u_bt_sel_4 */ \
	30, /* /behaviors/u_bt_sel_4 */ \
	54, /* /macros/u_macro_u_bt_sel_0 */ \
	55, /* /behaviors/u_bt_sel_0 */ \
	56, /* /macros/u_macro_u_bt_sel_1 */ \
	57, /* /behaviors/u_bt_sel_1 */ \
	58, /* /macros/u_macro_u_bt_sel_2 */ \
	59, /* /behaviors/u_bt_sel_2 */ \
	60, /* /macros/u_macro_u_bt_sel_3 */ \
	61, /* /behaviors/u_bt_sel_3 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_bluetooth_EXISTS 1
#define DT_N_INST_0_zmk_behavior_bluetooth DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_NODELABEL_bt                  DT_N_S_behaviors_S_behavior_bluetooth

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_bluetooth_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_bluetooth_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_bluetooth_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_bluetooth_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_bluetooth_COMPAT_MATCHES_zmk_behavior_bluetooth 1
#define DT_N_S_behaviors_S_behavior_bluetooth_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_bluetooth_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_bluetooth_P_label "BLUETOOTH"
#define DT_N_S_behaviors_S_behavior_bluetooth_P_label_STRING_TOKEN BLUETOOTH
#define DT_N_S_behaviors_S_behavior_bluetooth_P_label_STRING_UPPER_TOKEN BLUETOOTH
#define DT_N_S_behaviors_S_behavior_bluetooth_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 3) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 4) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 5) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 6) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 7) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 8)
#define DT_N_S_behaviors_S_behavior_bluetooth_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_bluetooth, label, 8, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_bluetooth_P_label_EXISTS 1

/*
 * Devicetree node: /macros
 *
 * Node identifier: DT_N_S_macros
 */

/* Node's full path: */
#define DT_N_S_macros_PATH "/macros"

/* Node's name with unit-address: */
#define DT_N_S_macros_FULL_NAME "macros"

/* Node parent (/) identifier: */
#define DT_N_S_macros_PARENT DT_N
#define DT_N_S_macros_FOREACH_CHILD(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_0) fn(DT_N_S_macros_S_u_macro_u_bt_sel_1) fn(DT_N_S_macros_S_u_macro_u_bt_sel_2) fn(DT_N_S_macros_S_u_macro_u_bt_sel_3) fn(DT_N_S_macros_S_u_macro_u_bt_sel_4) fn(DT_N_S_macros_S_u_macro_btn1) fn(DT_N_S_macros_S_u_macro_btn2) fn(DT_N_S_macros_S_u_macro_btn3)
#define DT_N_S_macros_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_btn1, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_btn2, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_btn3, __VA_ARGS__)
#define DT_N_S_macros_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_0) fn(DT_N_S_macros_S_u_macro_u_bt_sel_1) fn(DT_N_S_macros_S_u_macro_u_bt_sel_2) fn(DT_N_S_macros_S_u_macro_u_bt_sel_3) fn(DT_N_S_macros_S_u_macro_u_bt_sel_4) fn(DT_N_S_macros_S_u_macro_btn1) fn(DT_N_S_macros_S_u_macro_btn2) fn(DT_N_S_macros_S_u_macro_btn3) 
#define DT_N_S_macros_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_btn1, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_btn2, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_btn3, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_SUPPORTS_ORDS \
	29, /* /macros/u_macro_u_bt_sel_4 */ \
	43, /* /macros/u_macro_btn1 */ \
	44, /* /macros/u_macro_btn2 */ \
	45, /* /macros/u_macro_btn3 */ \
	54, /* /macros/u_macro_u_bt_sel_0 */ \
	56, /* /macros/u_macro_u_bt_sel_1 */ \
	58, /* /macros/u_macro_u_bt_sel_2 */ \
	60, /* /macros/u_macro_u_bt_sel_3 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_REG_NUM 0
#define DT_N_S_macros_RANGES_NUM 0
#define DT_N_S_macros_FOREACH_RANGE(fn) 
#define DT_N_S_macros_IRQ_NUM 0
#define DT_N_S_macros_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /macros/u_macro_u_bt_sel_4
 *
 * Node identifier: DT_N_S_macros_S_u_macro_u_bt_sel_4
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_PATH "/macros/u_macro_u_bt_sel_4"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_FULL_NAME "u_macro_u_bt_sel_4"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_PARENT DT_N_S_macros
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_REQUIRES_ORDS \
	27, /* /behaviors/behavior_bluetooth */ \
	28, /* /macros */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_SUPPORTS_ORDS \
	30, /* /behaviors/u_bt_sel_4 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_EXISTS 1
#define DT_N_INST_4_zmk_behavior_macro    DT_N_S_macros_S_u_macro_u_bt_sel_4
#define DT_N_NODELABEL_u_macro_u_bt_sel_4 DT_N_S_macros_S_u_macro_u_bt_sel_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_REG_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_RANGES_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_IRQ_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_0_VAL_param1 3
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_0_VAL_param2 4
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_1_VAL_param1 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, bindings, 0) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, bindings, 1)
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, bindings, 1, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_LEN 2
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_bindings_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_wait_ms 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_tap_ms 100
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_tap_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_label "ZM_u_macro_u_bt_sel_4"
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_label_STRING_TOKEN ZM_u_macro_u_bt_sel_4
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_label_STRING_UPPER_TOKEN ZM_U_MACRO_U_BT_SEL_4
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 0) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 1) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 2) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 3) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 4) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 5) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 6) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 7) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 8) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 9) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 10) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 11) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 12) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 13) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 14) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 15) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 16) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 17) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 18) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 19) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 20)
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 10, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 11, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 12, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 13, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 14, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 15, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 16, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 17, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 18, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 19, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, label, 20, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_u_bt_sel_4_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_bt_sel_4
 *
 * Node identifier: DT_N_S_behaviors_S_u_bt_sel_4
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_bt_sel_4_PATH "/behaviors/u_bt_sel_4"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_bt_sel_4_FULL_NAME "u_bt_sel_4"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_bt_sel_4_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_bt_sel_4_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_bt_sel_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_bt_sel_4_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_bt_sel_4_REQUIRES_ORDS \
	19, /* /behaviors */ \
	27, /* /behaviors/behavior_bluetooth */ \
	29, /* /macros/u_macro_u_bt_sel_4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_bt_sel_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_bt_sel_4_EXISTS 1
#define DT_N_INST_4_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_bt_sel_4
#define DT_N_NODELABEL_u_bt_sel_4          DT_N_S_behaviors_S_u_bt_sel_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_bt_sel_4_REG_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_4_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_4_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_4_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_4_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_bt_sel_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_bt_sel_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_IDX_0_VAL_param1 3
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_IDX_0_VAL_param2 4
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_IDX_1_PH DT_N_S_macros_S_u_macro_u_bt_sel_4
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_bt_sel_4, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, bindings, 1)
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_bt_sel_4, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_bt_sel_4_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_4_P_mods 34
#define DT_N_S_behaviors_S_u_bt_sel_4_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_4_P_label "u_bt_sel_4"
#define DT_N_S_behaviors_S_u_bt_sel_4_P_label_STRING_TOKEN u_bt_sel_4
#define DT_N_S_behaviors_S_u_bt_sel_4_P_label_STRING_UPPER_TOKEN U_BT_SEL_4
#define DT_N_S_behaviors_S_u_bt_sel_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 0) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 1) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 2) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 3) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 4) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 5) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 6) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 7) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 8) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 9)
#define DT_N_S_behaviors_S_u_bt_sel_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_4, label, 9, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_bt_sel_4_P_label_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) 
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	32, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	31, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_swo_ref_frequency 32000000
#define DT_N_S_cpus_S_cpu_0_P_swo_ref_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /keymap
 *
 * Node identifier: DT_N_S_keymap
 *
 * Binding (compatible = zmk,keymap):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_PATH "/keymap"

/* Node's name with unit-address: */
#define DT_N_S_keymap_FULL_NAME "keymap"

/* Node parent (/) identifier: */
#define DT_N_S_keymap_PARENT DT_N
#define DT_N_S_keymap_FOREACH_CHILD(fn) fn(DT_N_S_keymap_S_0) fn(DT_N_S_keymap_S_1) fn(DT_N_S_keymap_S_2) fn(DT_N_S_keymap_S_3) fn(DT_N_S_keymap_S_4) fn(DT_N_S_keymap_S_5) fn(DT_N_S_keymap_S_6) fn(DT_N_S_keymap_S_7) fn(DT_N_S_keymap_S_8) fn(DT_N_S_keymap_S_9)
#define DT_N_S_keymap_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_keymap_S_0, __VA_ARGS__) fn(DT_N_S_keymap_S_1, __VA_ARGS__) fn(DT_N_S_keymap_S_2, __VA_ARGS__) fn(DT_N_S_keymap_S_3, __VA_ARGS__) fn(DT_N_S_keymap_S_4, __VA_ARGS__) fn(DT_N_S_keymap_S_5, __VA_ARGS__) fn(DT_N_S_keymap_S_6, __VA_ARGS__) fn(DT_N_S_keymap_S_7, __VA_ARGS__) fn(DT_N_S_keymap_S_8, __VA_ARGS__) fn(DT_N_S_keymap_S_9, __VA_ARGS__)
#define DT_N_S_keymap_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_keymap_S_0) fn(DT_N_S_keymap_S_1) fn(DT_N_S_keymap_S_2) fn(DT_N_S_keymap_S_3) fn(DT_N_S_keymap_S_4) fn(DT_N_S_keymap_S_5) fn(DT_N_S_keymap_S_6) fn(DT_N_S_keymap_S_7) fn(DT_N_S_keymap_S_8) fn(DT_N_S_keymap_S_9) 
#define DT_N_S_keymap_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_keymap_S_0, __VA_ARGS__) fn(DT_N_S_keymap_S_1, __VA_ARGS__) fn(DT_N_S_keymap_S_2, __VA_ARGS__) fn(DT_N_S_keymap_S_3, __VA_ARGS__) fn(DT_N_S_keymap_S_4, __VA_ARGS__) fn(DT_N_S_keymap_S_5, __VA_ARGS__) fn(DT_N_S_keymap_S_6, __VA_ARGS__) fn(DT_N_S_keymap_S_7, __VA_ARGS__) fn(DT_N_S_keymap_S_8, __VA_ARGS__) fn(DT_N_S_keymap_S_9, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_SUPPORTS_ORDS \
	40, /* /keymap/0 */ \
	41, /* /keymap/1 */ \
	42, /* /keymap/2 */ \
	46, /* /keymap/3 */ \
	51, /* /keymap/4 */ \
	52, /* /keymap/5 */ \
	70, /* /keymap/6 */ \
	71, /* /keymap/7 */ \
	72, /* /keymap/8 */ \
	73, /* /keymap/9 */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_EXISTS 1
#define DT_N_INST_0_zmk_keymap DT_N_S_keymap

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_REG_NUM 0
#define DT_N_S_keymap_RANGES_NUM 0
#define DT_N_S_keymap_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_IRQ_NUM 0
#define DT_N_S_keymap_COMPAT_MATCHES_zmk_keymap 1
#define DT_N_S_keymap_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_P_compatible {"zmk,keymap"}
#define DT_N_S_keymap_P_compatible_IDX_0 "zmk,keymap"
#define DT_N_S_keymap_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_keymap_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap, compatible, 0)
#define DT_N_S_keymap_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap, compatible, 0, __VA_ARGS__)
#define DT_N_S_keymap_P_compatible_LEN 1
#define DT_N_S_keymap_P_compatible_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_key_press
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_key_press
 *
 * Binding (compatible = zmk,behavior-key-press):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-key-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_key_press_PATH "/behaviors/behavior_key_press"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_key_press_FULL_NAME "behavior_key_press"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_key_press_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_key_press_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_key_press_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_key_press_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_key_press_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_key_press_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_key_press_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_key_press_SUPPORTS_ORDS \
	36, /* /behaviors/behavior_layer_tap */ \
	39, /* /behaviors/homerow_mods */ \
	40, /* /keymap/0 */ \
	41, /* /keymap/1 */ \
	42, /* /keymap/2 */ \
	43, /* /macros/u_macro_btn1 */ \
	44, /* /macros/u_macro_btn2 */ \
	45, /* /macros/u_macro_btn3 */ \
	46, /* /keymap/3 */ \
	50, /* /behaviors/u_caps_word */ \
	51, /* /keymap/4 */ \
	52, /* /keymap/5 */ \
	70, /* /keymap/6 */ \
	71, /* /keymap/7 */ \
	72, /* /keymap/8 */ \
	73, /* /keymap/9 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_key_press_EXISTS 1
#define DT_N_INST_0_zmk_behavior_key_press DT_N_S_behaviors_S_behavior_key_press
#define DT_N_NODELABEL_cp                  DT_N_S_behaviors_S_behavior_key_press
#define DT_N_NODELABEL_kp                  DT_N_S_behaviors_S_behavior_key_press

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_key_press_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_key_press_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_key_press_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_key_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_key_press_COMPAT_MATCHES_zmk_behavior_key_press 1
#define DT_N_S_behaviors_S_behavior_key_press_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_key_press_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_key_press_P_label "KEY_PRESS"
#define DT_N_S_behaviors_S_behavior_key_press_P_label_STRING_TOKEN KEY_PRESS
#define DT_N_S_behaviors_S_behavior_key_press_P_label_STRING_UPPER_TOKEN KEY_PRESS
#define DT_N_S_behaviors_S_behavior_key_press_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_key_press, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 3) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 4) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 5) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 6) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 7) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 8)
#define DT_N_S_behaviors_S_behavior_key_press_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_key_press, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_key_press, label, 8, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_key_press_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_momentary_layer
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_momentary_layer
 *
 * Binding (compatible = zmk,behavior-momentary-layer):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-momentary-layer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_PATH "/behaviors/behavior_momentary_layer"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_FULL_NAME "behavior_momentary_layer"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_momentary_layer_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_momentary_layer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_momentary_layer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_momentary_layer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_SUPPORTS_ORDS \
	36, /* /behaviors/behavior_layer_tap */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_EXISTS 1
#define DT_N_INST_0_zmk_behavior_momentary_layer DT_N_S_behaviors_S_behavior_momentary_layer
#define DT_N_NODELABEL_mo                        DT_N_S_behaviors_S_behavior_momentary_layer

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_momentary_layer_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_momentary_layer_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_momentary_layer_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_momentary_layer_COMPAT_MATCHES_zmk_behavior_momentary_layer 1
#define DT_N_S_behaviors_S_behavior_momentary_layer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_P_label "MO"
#define DT_N_S_behaviors_S_behavior_momentary_layer_P_label_STRING_TOKEN MO
#define DT_N_S_behaviors_S_behavior_momentary_layer_P_label_STRING_UPPER_TOKEN MO
#define DT_N_S_behaviors_S_behavior_momentary_layer_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_momentary_layer, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_momentary_layer, label, 1)
#define DT_N_S_behaviors_S_behavior_momentary_layer_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_momentary_layer, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_momentary_layer, label, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_momentary_layer_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_layer_tap
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_layer_tap
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_layer_tap_PATH "/behaviors/behavior_layer_tap"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_layer_tap_FULL_NAME "behavior_layer_tap"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_layer_tap_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_layer_tap_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_layer_tap_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_layer_tap_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_layer_tap_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_layer_tap_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_layer_tap_REQUIRES_ORDS \
	19, /* /behaviors */ \
	34, /* /behaviors/behavior_key_press */ \
	35, /* /behaviors/behavior_momentary_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_layer_tap_SUPPORTS_ORDS \
	40, /* /keymap/0 */ \
	41, /* /keymap/1 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_layer_tap_EXISTS 1
#define DT_N_INST_0_zmk_behavior_hold_tap DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_NODELABEL_lt                 DT_N_S_behaviors_S_behavior_layer_tap

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_layer_tap_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_layer_tap_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_layer_tap_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_layer_tap_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_layer_tap_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_behavior_layer_tap_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_layer_tap_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_IDX_0 DT_N_S_behaviors_S_behavior_momentary_layer
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_momentary_layer
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_IDX_1 DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_layer_tap, bindings, 0) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, bindings, 1)
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_layer_tap, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_LEN 2
#define DT_N_S_behaviors_S_behavior_layer_tap_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_behavior_layer_tap_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_quick_tap_ms -1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_global_quick_tap 0
#define DT_N_S_behaviors_S_behavior_layer_tap_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor "tap-preferred"
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor_STRING_TOKEN tap_preferred
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor_STRING_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor_ENUM_IDX 2
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor_ENUM_TOKEN tap_preferred
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor_ENUM_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 0) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 1) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 2) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 3) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 4) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 5) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 6) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 7) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 8) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 9) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 10) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 11) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 12)
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 9, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 10, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 11, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, flavor, 12, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_layer_tap_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_retro_tap 0
#define DT_N_S_behaviors_S_behavior_layer_tap_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_behavior_layer_tap_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_behavior_layer_tap_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_layer_tap_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_behavior_layer_tap_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_behavior_layer_tap_P_label "LAYER_TAP"
#define DT_N_S_behaviors_S_behavior_layer_tap_P_label_STRING_TOKEN LAYER_TAP
#define DT_N_S_behaviors_S_behavior_layer_tap_P_label_STRING_UPPER_TOKEN LAYER_TAP
#define DT_N_S_behaviors_S_behavior_layer_tap_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 3) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 4) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 5) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 6) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 7) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 8)
#define DT_N_S_behaviors_S_behavior_layer_tap_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_layer_tap, label, 8, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_layer_tap_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_none
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_none
 *
 * Binding (compatible = zmk,behavior-none):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-none.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_none_PATH "/behaviors/behavior_none"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_none_FULL_NAME "behavior_none"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_none_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_none_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_none_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_none_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_none_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_none_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_none_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_none_SUPPORTS_ORDS \
	40, /* /keymap/0 */ \
	41, /* /keymap/1 */ \
	42, /* /keymap/2 */ \
	46, /* /keymap/3 */ \
	51, /* /keymap/4 */ \
	52, /* /keymap/5 */ \
	70, /* /keymap/6 */ \
	71, /* /keymap/7 */ \
	72, /* /keymap/8 */ \
	73, /* /keymap/9 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_none_EXISTS 1
#define DT_N_INST_0_zmk_behavior_none DT_N_S_behaviors_S_behavior_none
#define DT_N_NODELABEL_none           DT_N_S_behaviors_S_behavior_none

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_none_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_none_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_none_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_none_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_none_COMPAT_MATCHES_zmk_behavior_none 1
#define DT_N_S_behaviors_S_behavior_none_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_none_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_none_P_label "NONE"
#define DT_N_S_behaviors_S_behavior_none_P_label_STRING_TOKEN NONE
#define DT_N_S_behaviors_S_behavior_none_P_label_STRING_UPPER_TOKEN NONE
#define DT_N_S_behaviors_S_behavior_none_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_none, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_none, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_none, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_none, label, 3)
#define DT_N_S_behaviors_S_behavior_none_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_none, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_none, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_none, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_none, label, 3, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_none_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_sensor_rotate_key_press
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
 *
 * Binding (compatible = zmk,behavior-sensor-rotate-key-press):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-sensor-rotate-key-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_PATH "/behaviors/behavior_sensor_rotate_key_press"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_FULL_NAME "behavior_sensor_rotate_key_press"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_SUPPORTS_ORDS \
	40, /* /keymap/0 */ \
	41, /* /keymap/1 */ \
	42, /* /keymap/2 */ \
	46, /* /keymap/3 */ \
	51, /* /keymap/4 */ \
	52, /* /keymap/5 */ \
	70, /* /keymap/6 */ \
	71, /* /keymap/7 */ \
	72, /* /keymap/8 */ \
	73, /* /keymap/9 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_EXISTS 1
#define DT_N_INST_0_zmk_behavior_sensor_rotate_key_press DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_NODELABEL_inc_dec_cp                        DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_NODELABEL_inc_dec_kp                        DT_N_S_behaviors_S_behavior_sensor_rotate_key_press

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_COMPAT_MATCHES_zmk_behavior_sensor_rotate_key_press 1
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_P_label "ENC_KEY_PRESS"
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_P_label_STRING_TOKEN ENC_KEY_PRESS
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_P_label_STRING_UPPER_TOKEN ENC_KEY_PRESS
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 3) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 4) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 5) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 6) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 7) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 8) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 9) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 10) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 11) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 12)
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 9, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 10, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 11, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, label, 12, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_sensor_rotate_key_press_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/homerow_mods
 *
 * Node identifier: DT_N_S_behaviors_S_homerow_mods
 *
 * Binding (compatible = zmk,behavior-hold-tap):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-hold-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_homerow_mods_PATH "/behaviors/homerow_mods"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_homerow_mods_FULL_NAME "homerow_mods"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_homerow_mods_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_homerow_mods_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_homerow_mods_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_homerow_mods_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_homerow_mods_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_homerow_mods_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_homerow_mods_REQUIRES_ORDS \
	19, /* /behaviors */ \
	34, /* /behaviors/behavior_key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_homerow_mods_SUPPORTS_ORDS \
	40, /* /keymap/0 */ \
	41, /* /keymap/1 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_homerow_mods_EXISTS 1
#define DT_N_INST_1_zmk_behavior_hold_tap DT_N_S_behaviors_S_homerow_mods
#define DT_N_NODELABEL_hm                 DT_N_S_behaviors_S_homerow_mods

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_homerow_mods_REG_NUM 0
#define DT_N_S_behaviors_S_homerow_mods_RANGES_NUM 0
#define DT_N_S_behaviors_S_homerow_mods_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_homerow_mods_IRQ_NUM 0
#define DT_N_S_behaviors_S_homerow_mods_COMPAT_MATCHES_zmk_behavior_hold_tap 1
#define DT_N_S_behaviors_S_homerow_mods_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_homerow_mods_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_homerow_mods_P_bindings_IDX_0 DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_behaviors_S_homerow_mods_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_behaviors_S_homerow_mods_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_homerow_mods_P_bindings_IDX_1 DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_behaviors_S_homerow_mods_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_behaviors_S_homerow_mods_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_homerow_mods_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_homerow_mods, bindings, 0) \
	fn(DT_N_S_behaviors_S_homerow_mods, bindings, 1)
#define DT_N_S_behaviors_S_homerow_mods_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_homerow_mods, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_homerow_mods_P_bindings_LEN 2
#define DT_N_S_behaviors_S_homerow_mods_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_homerow_mods_P_tapping_term_ms 200
#define DT_N_S_behaviors_S_homerow_mods_P_tapping_term_ms_EXISTS 1
#define DT_N_S_behaviors_S_homerow_mods_P_quick_tap_ms -1
#define DT_N_S_behaviors_S_homerow_mods_P_quick_tap_ms_EXISTS 1
#define DT_N_S_behaviors_S_homerow_mods_P_global_quick_tap 0
#define DT_N_S_behaviors_S_homerow_mods_P_global_quick_tap_EXISTS 1
#define DT_N_S_behaviors_S_homerow_mods_P_flavor "tap-preferred"
#define DT_N_S_behaviors_S_homerow_mods_P_flavor_STRING_TOKEN tap_preferred
#define DT_N_S_behaviors_S_homerow_mods_P_flavor_STRING_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_homerow_mods_P_flavor_ENUM_IDX 2
#define DT_N_S_behaviors_S_homerow_mods_P_flavor_ENUM_TOKEN tap_preferred
#define DT_N_S_behaviors_S_homerow_mods_P_flavor_ENUM_UPPER_TOKEN TAP_PREFERRED
#define DT_N_S_behaviors_S_homerow_mods_P_flavor_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_homerow_mods, flavor, 0) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 1) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 2) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 3) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 4) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 5) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 6) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 7) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 8) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 9) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 10) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 11) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 12)
#define DT_N_S_behaviors_S_homerow_mods_P_flavor_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_homerow_mods, flavor, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 9, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 10, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 11, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, flavor, 12, __VA_ARGS__)
#define DT_N_S_behaviors_S_homerow_mods_P_flavor_EXISTS 1
#define DT_N_S_behaviors_S_homerow_mods_P_retro_tap 0
#define DT_N_S_behaviors_S_homerow_mods_P_retro_tap_EXISTS 1
#define DT_N_S_behaviors_S_homerow_mods_P_hold_trigger_key_positions {}
#define DT_N_S_behaviors_S_homerow_mods_P_hold_trigger_key_positions_FOREACH_PROP_ELEM(fn) 
#define DT_N_S_behaviors_S_homerow_mods_P_hold_trigger_key_positions_FOREACH_PROP_ELEM_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_homerow_mods_P_hold_trigger_key_positions_LEN 0
#define DT_N_S_behaviors_S_homerow_mods_P_hold_trigger_key_positions_EXISTS 1
#define DT_N_S_behaviors_S_homerow_mods_P_label "HOMEROW_MODS"
#define DT_N_S_behaviors_S_homerow_mods_P_label_STRING_TOKEN HOMEROW_MODS
#define DT_N_S_behaviors_S_homerow_mods_P_label_STRING_UPPER_TOKEN HOMEROW_MODS
#define DT_N_S_behaviors_S_homerow_mods_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_homerow_mods, label, 0) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 1) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 2) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 3) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 4) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 5) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 6) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 7) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 8) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 9) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 10) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 11)
#define DT_N_S_behaviors_S_homerow_mods_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_homerow_mods, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 9, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 10, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_homerow_mods, label, 11, __VA_ARGS__)
#define DT_N_S_behaviors_S_homerow_mods_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/0
 *
 * Node identifier: DT_N_S_keymap_S_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_0_PATH "/keymap/0"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_0_FULL_NAME "0"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_0_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_0_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_0_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_0_REQUIRES_ORDS \
	33, /* /keymap */ \
	34, /* /behaviors/behavior_key_press */ \
	36, /* /behaviors/behavior_layer_tap */ \
	37, /* /behaviors/behavior_none */ \
	38, /* /behaviors/behavior_sensor_rotate_key_press */ \
	39, /* /behaviors/homerow_mods */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_0_REG_NUM 0
#define DT_N_S_keymap_S_0_RANGES_NUM 0
#define DT_N_S_keymap_S_0_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_0_IRQ_NUM 0
#define DT_N_S_keymap_S_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_0_P_label "Base"
#define DT_N_S_keymap_S_0_P_label_STRING_TOKEN Base
#define DT_N_S_keymap_S_0_P_label_STRING_UPPER_TOKEN BASE
#define DT_N_S_keymap_S_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_0, label, 0) \
	fn(DT_N_S_keymap_S_0, label, 1) \
	fn(DT_N_S_keymap_S_0, label, 2) \
	fn(DT_N_S_keymap_S_0, label, 3)
#define DT_N_S_keymap_S_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, label, 3, __VA_ARGS__)
#define DT_N_S_keymap_S_0_P_label_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_13_VAL_param1 458772
#define DT_N_S_keymap_S_0_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_14_VAL_param1 458759
#define DT_N_S_keymap_S_0_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_15_VAL_param1 458773
#define DT_N_S_keymap_S_0_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_16_VAL_param1 458778
#define DT_N_S_keymap_S_0_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_17_VAL_param1 458757
#define DT_N_S_keymap_S_0_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_18_VAL_param1 458765
#define DT_N_S_keymap_S_0_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_19_VAL_param1 458761
#define DT_N_S_keymap_S_0_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_20_VAL_param1 458776
#define DT_N_S_keymap_S_0_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_21_VAL_param1 458771
#define DT_N_S_keymap_S_0_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_22_VAL_param1 458804
#define DT_N_S_keymap_S_0_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_25_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_0_P_bindings_IDX_25_VAL_param1 458979
#define DT_N_S_keymap_S_0_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_25_VAL_param2 458756
#define DT_N_S_keymap_S_0_P_bindings_IDX_25_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_26_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_0_P_bindings_IDX_26_VAL_param1 458978
#define DT_N_S_keymap_S_0_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_26_VAL_param2 458774
#define DT_N_S_keymap_S_0_P_bindings_IDX_26_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_27_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_0_P_bindings_IDX_27_VAL_param1 458976
#define DT_N_S_keymap_S_0_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_27_VAL_param2 458763
#define DT_N_S_keymap_S_0_P_bindings_IDX_27_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_28_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_0_P_bindings_IDX_28_VAL_param1 458977
#define DT_N_S_keymap_S_0_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_28_VAL_param2 458775
#define DT_N_S_keymap_S_0_P_bindings_IDX_28_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_29_VAL_param1 458762
#define DT_N_S_keymap_S_0_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_30_VAL_param1 458780
#define DT_N_S_keymap_S_0_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_31_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_0_P_bindings_IDX_31_VAL_param1 458977
#define DT_N_S_keymap_S_0_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_31_VAL_param2 458769
#define DT_N_S_keymap_S_0_P_bindings_IDX_31_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_32_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_0_P_bindings_IDX_32_VAL_param1 458976
#define DT_N_S_keymap_S_0_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_32_VAL_param2 458760
#define DT_N_S_keymap_S_0_P_bindings_IDX_32_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_33_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_0_P_bindings_IDX_33_VAL_param1 458978
#define DT_N_S_keymap_S_0_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_33_VAL_param2 458770
#define DT_N_S_keymap_S_0_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_34_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_0_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_0_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_34_VAL_param2 458764
#define DT_N_S_keymap_S_0_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_0_P_bindings_IDX_37_VAL_param1 3
#define DT_N_S_keymap_S_0_P_bindings_IDX_37_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_37_VAL_param2 458781
#define DT_N_S_keymap_S_0_P_bindings_IDX_37_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_38_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_0_P_bindings_IDX_38_VAL_param1 458982
#define DT_N_S_keymap_S_0_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_38_VAL_param2 458779
#define DT_N_S_keymap_S_0_P_bindings_IDX_38_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_39_VAL_param1 458768
#define DT_N_S_keymap_S_0_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_40_VAL_param1 458758
#define DT_N_S_keymap_S_0_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_41_VAL_param1 458777
#define DT_N_S_keymap_S_0_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_42_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_42_VAL_param1 458766
#define DT_N_S_keymap_S_0_P_bindings_IDX_42_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_43_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_43_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_43_VAL_param1 458767
#define DT_N_S_keymap_S_0_P_bindings_IDX_43_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_44_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_44_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_0_P_bindings_IDX_44_VAL_param1 458806
#define DT_N_S_keymap_S_0_P_bindings_IDX_44_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_45_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_45_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_0_P_bindings_IDX_45_VAL_param1 458982
#define DT_N_S_keymap_S_0_P_bindings_IDX_45_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_45_VAL_param2 458807
#define DT_N_S_keymap_S_0_P_bindings_IDX_45_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_46_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_46_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_0_P_bindings_IDX_46_VAL_param1 3
#define DT_N_S_keymap_S_0_P_bindings_IDX_46_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_46_VAL_param2 458808
#define DT_N_S_keymap_S_0_P_bindings_IDX_46_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_47_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_47_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_48_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_48_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_49_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_49_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_0_P_bindings_IDX_49_VAL_param1 6
#define DT_N_S_keymap_S_0_P_bindings_IDX_49_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_49_VAL_param2 458793
#define DT_N_S_keymap_S_0_P_bindings_IDX_49_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_50_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_50_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_0_P_bindings_IDX_50_VAL_param1 4
#define DT_N_S_keymap_S_0_P_bindings_IDX_50_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_50_VAL_param2 458796
#define DT_N_S_keymap_S_0_P_bindings_IDX_50_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_51_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_51_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_0_P_bindings_IDX_51_VAL_param1 5
#define DT_N_S_keymap_S_0_P_bindings_IDX_51_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_51_VAL_param2 458795
#define DT_N_S_keymap_S_0_P_bindings_IDX_51_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_52_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_52_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_53_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_53_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_IDX_54_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_54_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_0_P_bindings_IDX_54_VAL_param1 8
#define DT_N_S_keymap_S_0_P_bindings_IDX_54_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_54_VAL_param2 458792
#define DT_N_S_keymap_S_0_P_bindings_IDX_54_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_55_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_55_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_0_P_bindings_IDX_55_VAL_param1 7
#define DT_N_S_keymap_S_0_P_bindings_IDX_55_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_55_VAL_param2 458794
#define DT_N_S_keymap_S_0_P_bindings_IDX_55_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_56_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_56_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_0_P_bindings_IDX_56_VAL_param1 9
#define DT_N_S_keymap_S_0_P_bindings_IDX_56_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_56_VAL_param2 458828
#define DT_N_S_keymap_S_0_P_bindings_IDX_56_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_57_EXISTS 1
#define DT_N_S_keymap_S_0_P_bindings_IDX_57_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_0, bindings, 0) \
	fn(DT_N_S_keymap_S_0, bindings, 1) \
	fn(DT_N_S_keymap_S_0, bindings, 2) \
	fn(DT_N_S_keymap_S_0, bindings, 3) \
	fn(DT_N_S_keymap_S_0, bindings, 4) \
	fn(DT_N_S_keymap_S_0, bindings, 5) \
	fn(DT_N_S_keymap_S_0, bindings, 6) \
	fn(DT_N_S_keymap_S_0, bindings, 7) \
	fn(DT_N_S_keymap_S_0, bindings, 8) \
	fn(DT_N_S_keymap_S_0, bindings, 9) \
	fn(DT_N_S_keymap_S_0, bindings, 10) \
	fn(DT_N_S_keymap_S_0, bindings, 11) \
	fn(DT_N_S_keymap_S_0, bindings, 12) \
	fn(DT_N_S_keymap_S_0, bindings, 13) \
	fn(DT_N_S_keymap_S_0, bindings, 14) \
	fn(DT_N_S_keymap_S_0, bindings, 15) \
	fn(DT_N_S_keymap_S_0, bindings, 16) \
	fn(DT_N_S_keymap_S_0, bindings, 17) \
	fn(DT_N_S_keymap_S_0, bindings, 18) \
	fn(DT_N_S_keymap_S_0, bindings, 19) \
	fn(DT_N_S_keymap_S_0, bindings, 20) \
	fn(DT_N_S_keymap_S_0, bindings, 21) \
	fn(DT_N_S_keymap_S_0, bindings, 22) \
	fn(DT_N_S_keymap_S_0, bindings, 23) \
	fn(DT_N_S_keymap_S_0, bindings, 24) \
	fn(DT_N_S_keymap_S_0, bindings, 25) \
	fn(DT_N_S_keymap_S_0, bindings, 26) \
	fn(DT_N_S_keymap_S_0, bindings, 27) \
	fn(DT_N_S_keymap_S_0, bindings, 28) \
	fn(DT_N_S_keymap_S_0, bindings, 29) \
	fn(DT_N_S_keymap_S_0, bindings, 30) \
	fn(DT_N_S_keymap_S_0, bindings, 31) \
	fn(DT_N_S_keymap_S_0, bindings, 32) \
	fn(DT_N_S_keymap_S_0, bindings, 33) \
	fn(DT_N_S_keymap_S_0, bindings, 34) \
	fn(DT_N_S_keymap_S_0, bindings, 35) \
	fn(DT_N_S_keymap_S_0, bindings, 36) \
	fn(DT_N_S_keymap_S_0, bindings, 37) \
	fn(DT_N_S_keymap_S_0, bindings, 38) \
	fn(DT_N_S_keymap_S_0, bindings, 39) \
	fn(DT_N_S_keymap_S_0, bindings, 40) \
	fn(DT_N_S_keymap_S_0, bindings, 41) \
	fn(DT_N_S_keymap_S_0, bindings, 42) \
	fn(DT_N_S_keymap_S_0, bindings, 43) \
	fn(DT_N_S_keymap_S_0, bindings, 44) \
	fn(DT_N_S_keymap_S_0, bindings, 45) \
	fn(DT_N_S_keymap_S_0, bindings, 46) \
	fn(DT_N_S_keymap_S_0, bindings, 47) \
	fn(DT_N_S_keymap_S_0, bindings, 48) \
	fn(DT_N_S_keymap_S_0, bindings, 49) \
	fn(DT_N_S_keymap_S_0, bindings, 50) \
	fn(DT_N_S_keymap_S_0, bindings, 51) \
	fn(DT_N_S_keymap_S_0, bindings, 52) \
	fn(DT_N_S_keymap_S_0, bindings, 53) \
	fn(DT_N_S_keymap_S_0, bindings, 54) \
	fn(DT_N_S_keymap_S_0, bindings, 55) \
	fn(DT_N_S_keymap_S_0, bindings, 56) \
	fn(DT_N_S_keymap_S_0, bindings, 57)
#define DT_N_S_keymap_S_0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_0, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 37, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 38, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 39, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 40, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 41, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 42, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 43, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 44, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 45, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 46, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 47, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 48, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 49, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 50, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 51, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 52, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 53, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 54, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 55, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 56, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_0, bindings, 57, __VA_ARGS__)
#define DT_N_S_keymap_S_0_P_bindings_LEN 58
#define DT_N_S_keymap_S_0_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_0_P_sensor_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_0_P_sensor_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_S_keymap_S_0_P_sensor_bindings_IDX_0_VAL_param1 458832
#define DT_N_S_keymap_S_0_P_sensor_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_0_P_sensor_bindings_IDX_0_VAL_param2 458831
#define DT_N_S_keymap_S_0_P_sensor_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_0_P_sensor_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_0, sensor_bindings, 0)
#define DT_N_S_keymap_S_0_P_sensor_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_0, sensor_bindings, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_0_P_sensor_bindings_LEN 1
#define DT_N_S_keymap_S_0_P_sensor_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/1
 *
 * Node identifier: DT_N_S_keymap_S_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_1_PATH "/keymap/1"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_1_FULL_NAME "1"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_1_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_1_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_1_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_1_REQUIRES_ORDS \
	33, /* /keymap */ \
	34, /* /behaviors/behavior_key_press */ \
	36, /* /behaviors/behavior_layer_tap */ \
	37, /* /behaviors/behavior_none */ \
	38, /* /behaviors/behavior_sensor_rotate_key_press */ \
	39, /* /behaviors/homerow_mods */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_1_REG_NUM 0
#define DT_N_S_keymap_S_1_RANGES_NUM 0
#define DT_N_S_keymap_S_1_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_1_IRQ_NUM 0
#define DT_N_S_keymap_S_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_1_P_label "Extra"
#define DT_N_S_keymap_S_1_P_label_STRING_TOKEN Extra
#define DT_N_S_keymap_S_1_P_label_STRING_UPPER_TOKEN EXTRA
#define DT_N_S_keymap_S_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_1, label, 0) \
	fn(DT_N_S_keymap_S_1, label, 1) \
	fn(DT_N_S_keymap_S_1, label, 2) \
	fn(DT_N_S_keymap_S_1, label, 3) \
	fn(DT_N_S_keymap_S_1, label, 4)
#define DT_N_S_keymap_S_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, label, 4, __VA_ARGS__)
#define DT_N_S_keymap_S_1_P_label_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_13_VAL_param1 458772
#define DT_N_S_keymap_S_1_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_14_VAL_param1 458778
#define DT_N_S_keymap_S_1_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_15_VAL_param1 458760
#define DT_N_S_keymap_S_1_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_16_VAL_param1 458773
#define DT_N_S_keymap_S_1_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_17_VAL_param1 458775
#define DT_N_S_keymap_S_1_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_18_VAL_param1 458780
#define DT_N_S_keymap_S_1_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_19_VAL_param1 458776
#define DT_N_S_keymap_S_1_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_20_VAL_param1 458764
#define DT_N_S_keymap_S_1_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_21_VAL_param1 458770
#define DT_N_S_keymap_S_1_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_22_VAL_param1 458771
#define DT_N_S_keymap_S_1_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_25_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_1_P_bindings_IDX_25_VAL_param1 458979
#define DT_N_S_keymap_S_1_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_25_VAL_param2 458756
#define DT_N_S_keymap_S_1_P_bindings_IDX_25_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_26_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_1_P_bindings_IDX_26_VAL_param1 458978
#define DT_N_S_keymap_S_1_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_26_VAL_param2 458774
#define DT_N_S_keymap_S_1_P_bindings_IDX_26_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_27_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_1_P_bindings_IDX_27_VAL_param1 458976
#define DT_N_S_keymap_S_1_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_27_VAL_param2 458759
#define DT_N_S_keymap_S_1_P_bindings_IDX_27_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_28_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_1_P_bindings_IDX_28_VAL_param1 458977
#define DT_N_S_keymap_S_1_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_28_VAL_param2 458761
#define DT_N_S_keymap_S_1_P_bindings_IDX_28_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_29_VAL_param1 458762
#define DT_N_S_keymap_S_1_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_30_VAL_param1 458763
#define DT_N_S_keymap_S_1_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_31_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_1_P_bindings_IDX_31_VAL_param1 458977
#define DT_N_S_keymap_S_1_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_31_VAL_param2 458765
#define DT_N_S_keymap_S_1_P_bindings_IDX_31_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_32_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_1_P_bindings_IDX_32_VAL_param1 458976
#define DT_N_S_keymap_S_1_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_32_VAL_param2 458766
#define DT_N_S_keymap_S_1_P_bindings_IDX_32_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_33_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_1_P_bindings_IDX_33_VAL_param1 458978
#define DT_N_S_keymap_S_1_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_33_VAL_param2 458767
#define DT_N_S_keymap_S_1_P_bindings_IDX_33_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_34_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_1_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_1_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_34_VAL_param2 458804
#define DT_N_S_keymap_S_1_P_bindings_IDX_34_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_1_P_bindings_IDX_37_VAL_param1 3
#define DT_N_S_keymap_S_1_P_bindings_IDX_37_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_37_VAL_param2 458781
#define DT_N_S_keymap_S_1_P_bindings_IDX_37_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_38_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_1_P_bindings_IDX_38_VAL_param1 458982
#define DT_N_S_keymap_S_1_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_38_VAL_param2 458779
#define DT_N_S_keymap_S_1_P_bindings_IDX_38_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_39_VAL_param1 458758
#define DT_N_S_keymap_S_1_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_40_VAL_param1 458777
#define DT_N_S_keymap_S_1_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_41_VAL_param1 458757
#define DT_N_S_keymap_S_1_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_42_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_42_VAL_param1 458769
#define DT_N_S_keymap_S_1_P_bindings_IDX_42_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_43_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_43_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_43_VAL_param1 458768
#define DT_N_S_keymap_S_1_P_bindings_IDX_43_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_44_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_44_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_1_P_bindings_IDX_44_VAL_param1 458806
#define DT_N_S_keymap_S_1_P_bindings_IDX_44_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_45_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_45_PH DT_N_S_behaviors_S_homerow_mods
#define DT_N_S_keymap_S_1_P_bindings_IDX_45_VAL_param1 458982
#define DT_N_S_keymap_S_1_P_bindings_IDX_45_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_45_VAL_param2 458807
#define DT_N_S_keymap_S_1_P_bindings_IDX_45_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_46_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_46_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_1_P_bindings_IDX_46_VAL_param1 3
#define DT_N_S_keymap_S_1_P_bindings_IDX_46_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_46_VAL_param2 458808
#define DT_N_S_keymap_S_1_P_bindings_IDX_46_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_47_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_47_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_48_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_48_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_49_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_49_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_1_P_bindings_IDX_49_VAL_param1 6
#define DT_N_S_keymap_S_1_P_bindings_IDX_49_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_49_VAL_param2 458793
#define DT_N_S_keymap_S_1_P_bindings_IDX_49_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_50_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_50_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_1_P_bindings_IDX_50_VAL_param1 4
#define DT_N_S_keymap_S_1_P_bindings_IDX_50_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_50_VAL_param2 458796
#define DT_N_S_keymap_S_1_P_bindings_IDX_50_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_51_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_51_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_1_P_bindings_IDX_51_VAL_param1 5
#define DT_N_S_keymap_S_1_P_bindings_IDX_51_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_51_VAL_param2 458795
#define DT_N_S_keymap_S_1_P_bindings_IDX_51_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_52_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_52_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_53_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_53_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_IDX_54_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_54_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_1_P_bindings_IDX_54_VAL_param1 8
#define DT_N_S_keymap_S_1_P_bindings_IDX_54_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_54_VAL_param2 458792
#define DT_N_S_keymap_S_1_P_bindings_IDX_54_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_55_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_55_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_1_P_bindings_IDX_55_VAL_param1 7
#define DT_N_S_keymap_S_1_P_bindings_IDX_55_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_55_VAL_param2 458794
#define DT_N_S_keymap_S_1_P_bindings_IDX_55_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_56_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_56_PH DT_N_S_behaviors_S_behavior_layer_tap
#define DT_N_S_keymap_S_1_P_bindings_IDX_56_VAL_param1 9
#define DT_N_S_keymap_S_1_P_bindings_IDX_56_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_56_VAL_param2 458828
#define DT_N_S_keymap_S_1_P_bindings_IDX_56_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_57_EXISTS 1
#define DT_N_S_keymap_S_1_P_bindings_IDX_57_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_1, bindings, 0) \
	fn(DT_N_S_keymap_S_1, bindings, 1) \
	fn(DT_N_S_keymap_S_1, bindings, 2) \
	fn(DT_N_S_keymap_S_1, bindings, 3) \
	fn(DT_N_S_keymap_S_1, bindings, 4) \
	fn(DT_N_S_keymap_S_1, bindings, 5) \
	fn(DT_N_S_keymap_S_1, bindings, 6) \
	fn(DT_N_S_keymap_S_1, bindings, 7) \
	fn(DT_N_S_keymap_S_1, bindings, 8) \
	fn(DT_N_S_keymap_S_1, bindings, 9) \
	fn(DT_N_S_keymap_S_1, bindings, 10) \
	fn(DT_N_S_keymap_S_1, bindings, 11) \
	fn(DT_N_S_keymap_S_1, bindings, 12) \
	fn(DT_N_S_keymap_S_1, bindings, 13) \
	fn(DT_N_S_keymap_S_1, bindings, 14) \
	fn(DT_N_S_keymap_S_1, bindings, 15) \
	fn(DT_N_S_keymap_S_1, bindings, 16) \
	fn(DT_N_S_keymap_S_1, bindings, 17) \
	fn(DT_N_S_keymap_S_1, bindings, 18) \
	fn(DT_N_S_keymap_S_1, bindings, 19) \
	fn(DT_N_S_keymap_S_1, bindings, 20) \
	fn(DT_N_S_keymap_S_1, bindings, 21) \
	fn(DT_N_S_keymap_S_1, bindings, 22) \
	fn(DT_N_S_keymap_S_1, bindings, 23) \
	fn(DT_N_S_keymap_S_1, bindings, 24) \
	fn(DT_N_S_keymap_S_1, bindings, 25) \
	fn(DT_N_S_keymap_S_1, bindings, 26) \
	fn(DT_N_S_keymap_S_1, bindings, 27) \
	fn(DT_N_S_keymap_S_1, bindings, 28) \
	fn(DT_N_S_keymap_S_1, bindings, 29) \
	fn(DT_N_S_keymap_S_1, bindings, 30) \
	fn(DT_N_S_keymap_S_1, bindings, 31) \
	fn(DT_N_S_keymap_S_1, bindings, 32) \
	fn(DT_N_S_keymap_S_1, bindings, 33) \
	fn(DT_N_S_keymap_S_1, bindings, 34) \
	fn(DT_N_S_keymap_S_1, bindings, 35) \
	fn(DT_N_S_keymap_S_1, bindings, 36) \
	fn(DT_N_S_keymap_S_1, bindings, 37) \
	fn(DT_N_S_keymap_S_1, bindings, 38) \
	fn(DT_N_S_keymap_S_1, bindings, 39) \
	fn(DT_N_S_keymap_S_1, bindings, 40) \
	fn(DT_N_S_keymap_S_1, bindings, 41) \
	fn(DT_N_S_keymap_S_1, bindings, 42) \
	fn(DT_N_S_keymap_S_1, bindings, 43) \
	fn(DT_N_S_keymap_S_1, bindings, 44) \
	fn(DT_N_S_keymap_S_1, bindings, 45) \
	fn(DT_N_S_keymap_S_1, bindings, 46) \
	fn(DT_N_S_keymap_S_1, bindings, 47) \
	fn(DT_N_S_keymap_S_1, bindings, 48) \
	fn(DT_N_S_keymap_S_1, bindings, 49) \
	fn(DT_N_S_keymap_S_1, bindings, 50) \
	fn(DT_N_S_keymap_S_1, bindings, 51) \
	fn(DT_N_S_keymap_S_1, bindings, 52) \
	fn(DT_N_S_keymap_S_1, bindings, 53) \
	fn(DT_N_S_keymap_S_1, bindings, 54) \
	fn(DT_N_S_keymap_S_1, bindings, 55) \
	fn(DT_N_S_keymap_S_1, bindings, 56) \
	fn(DT_N_S_keymap_S_1, bindings, 57)
#define DT_N_S_keymap_S_1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_1, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 37, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 38, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 39, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 40, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 41, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 42, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 43, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 44, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 45, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 46, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 47, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 48, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 49, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 50, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 51, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 52, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 53, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 54, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 55, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 56, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_1, bindings, 57, __VA_ARGS__)
#define DT_N_S_keymap_S_1_P_bindings_LEN 58
#define DT_N_S_keymap_S_1_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_1_P_sensor_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_1_P_sensor_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_S_keymap_S_1_P_sensor_bindings_IDX_0_VAL_param1 458832
#define DT_N_S_keymap_S_1_P_sensor_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_1_P_sensor_bindings_IDX_0_VAL_param2 458831
#define DT_N_S_keymap_S_1_P_sensor_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_1_P_sensor_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_1, sensor_bindings, 0)
#define DT_N_S_keymap_S_1_P_sensor_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_1, sensor_bindings, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_1_P_sensor_bindings_LEN 1
#define DT_N_S_keymap_S_1_P_sensor_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/2
 *
 * Node identifier: DT_N_S_keymap_S_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_2_PATH "/keymap/2"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_2_FULL_NAME "2"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_2_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_2_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_2_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_2_REQUIRES_ORDS \
	33, /* /keymap */ \
	34, /* /behaviors/behavior_key_press */ \
	37, /* /behaviors/behavior_none */ \
	38, /* /behaviors/behavior_sensor_rotate_key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_2_REG_NUM 0
#define DT_N_S_keymap_S_2_RANGES_NUM 0
#define DT_N_S_keymap_S_2_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_2_IRQ_NUM 0
#define DT_N_S_keymap_S_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_2_P_label "Tap"
#define DT_N_S_keymap_S_2_P_label_STRING_TOKEN Tap
#define DT_N_S_keymap_S_2_P_label_STRING_UPPER_TOKEN TAP
#define DT_N_S_keymap_S_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_2, label, 0) \
	fn(DT_N_S_keymap_S_2, label, 1) \
	fn(DT_N_S_keymap_S_2, label, 2)
#define DT_N_S_keymap_S_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, label, 2, __VA_ARGS__)
#define DT_N_S_keymap_S_2_P_label_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_13_VAL_param1 458772
#define DT_N_S_keymap_S_2_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_14_VAL_param1 458778
#define DT_N_S_keymap_S_2_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_15_VAL_param1 458761
#define DT_N_S_keymap_S_2_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_16_VAL_param1 458771
#define DT_N_S_keymap_S_2_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_17_VAL_param1 458757
#define DT_N_S_keymap_S_2_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_18_VAL_param1 458765
#define DT_N_S_keymap_S_2_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_19_VAL_param1 458767
#define DT_N_S_keymap_S_2_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_20_VAL_param1 458776
#define DT_N_S_keymap_S_2_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_21_VAL_param1 458780
#define DT_N_S_keymap_S_2_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_22_VAL_param1 458804
#define DT_N_S_keymap_S_2_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_25_VAL_param1 458756
#define DT_N_S_keymap_S_2_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_26_VAL_param1 458773
#define DT_N_S_keymap_S_2_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_27_VAL_param1 458774
#define DT_N_S_keymap_S_2_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_28_VAL_param1 458775
#define DT_N_S_keymap_S_2_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_29_VAL_param1 458762
#define DT_N_S_keymap_S_2_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_30_VAL_param1 458768
#define DT_N_S_keymap_S_2_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_31_VAL_param1 458769
#define DT_N_S_keymap_S_2_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_32_VAL_param1 458760
#define DT_N_S_keymap_S_2_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_33_VAL_param1 458764
#define DT_N_S_keymap_S_2_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_34_VAL_param1 458770
#define DT_N_S_keymap_S_2_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_37_VAL_param1 458781
#define DT_N_S_keymap_S_2_P_bindings_IDX_37_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_38_VAL_param1 458779
#define DT_N_S_keymap_S_2_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_39_VAL_param1 458758
#define DT_N_S_keymap_S_2_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_40_VAL_param1 458759
#define DT_N_S_keymap_S_2_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_41_VAL_param1 458777
#define DT_N_S_keymap_S_2_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_42_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_42_VAL_param1 458766
#define DT_N_S_keymap_S_2_P_bindings_IDX_42_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_43_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_43_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_43_VAL_param1 458763
#define DT_N_S_keymap_S_2_P_bindings_IDX_43_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_44_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_44_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_44_VAL_param1 458806
#define DT_N_S_keymap_S_2_P_bindings_IDX_44_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_45_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_45_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_45_VAL_param1 458807
#define DT_N_S_keymap_S_2_P_bindings_IDX_45_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_46_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_46_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_46_VAL_param1 458808
#define DT_N_S_keymap_S_2_P_bindings_IDX_46_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_47_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_47_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_48_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_48_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_49_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_49_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_49_VAL_param1 458793
#define DT_N_S_keymap_S_2_P_bindings_IDX_49_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_50_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_50_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_50_VAL_param1 458796
#define DT_N_S_keymap_S_2_P_bindings_IDX_50_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_51_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_51_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_51_VAL_param1 458795
#define DT_N_S_keymap_S_2_P_bindings_IDX_51_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_52_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_52_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_53_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_53_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_IDX_54_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_54_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_54_VAL_param1 458792
#define DT_N_S_keymap_S_2_P_bindings_IDX_54_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_55_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_55_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_55_VAL_param1 458794
#define DT_N_S_keymap_S_2_P_bindings_IDX_55_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_56_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_56_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_2_P_bindings_IDX_56_VAL_param1 458828
#define DT_N_S_keymap_S_2_P_bindings_IDX_56_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_57_EXISTS 1
#define DT_N_S_keymap_S_2_P_bindings_IDX_57_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_2, bindings, 0) \
	fn(DT_N_S_keymap_S_2, bindings, 1) \
	fn(DT_N_S_keymap_S_2, bindings, 2) \
	fn(DT_N_S_keymap_S_2, bindings, 3) \
	fn(DT_N_S_keymap_S_2, bindings, 4) \
	fn(DT_N_S_keymap_S_2, bindings, 5) \
	fn(DT_N_S_keymap_S_2, bindings, 6) \
	fn(DT_N_S_keymap_S_2, bindings, 7) \
	fn(DT_N_S_keymap_S_2, bindings, 8) \
	fn(DT_N_S_keymap_S_2, bindings, 9) \
	fn(DT_N_S_keymap_S_2, bindings, 10) \
	fn(DT_N_S_keymap_S_2, bindings, 11) \
	fn(DT_N_S_keymap_S_2, bindings, 12) \
	fn(DT_N_S_keymap_S_2, bindings, 13) \
	fn(DT_N_S_keymap_S_2, bindings, 14) \
	fn(DT_N_S_keymap_S_2, bindings, 15) \
	fn(DT_N_S_keymap_S_2, bindings, 16) \
	fn(DT_N_S_keymap_S_2, bindings, 17) \
	fn(DT_N_S_keymap_S_2, bindings, 18) \
	fn(DT_N_S_keymap_S_2, bindings, 19) \
	fn(DT_N_S_keymap_S_2, bindings, 20) \
	fn(DT_N_S_keymap_S_2, bindings, 21) \
	fn(DT_N_S_keymap_S_2, bindings, 22) \
	fn(DT_N_S_keymap_S_2, bindings, 23) \
	fn(DT_N_S_keymap_S_2, bindings, 24) \
	fn(DT_N_S_keymap_S_2, bindings, 25) \
	fn(DT_N_S_keymap_S_2, bindings, 26) \
	fn(DT_N_S_keymap_S_2, bindings, 27) \
	fn(DT_N_S_keymap_S_2, bindings, 28) \
	fn(DT_N_S_keymap_S_2, bindings, 29) \
	fn(DT_N_S_keymap_S_2, bindings, 30) \
	fn(DT_N_S_keymap_S_2, bindings, 31) \
	fn(DT_N_S_keymap_S_2, bindings, 32) \
	fn(DT_N_S_keymap_S_2, bindings, 33) \
	fn(DT_N_S_keymap_S_2, bindings, 34) \
	fn(DT_N_S_keymap_S_2, bindings, 35) \
	fn(DT_N_S_keymap_S_2, bindings, 36) \
	fn(DT_N_S_keymap_S_2, bindings, 37) \
	fn(DT_N_S_keymap_S_2, bindings, 38) \
	fn(DT_N_S_keymap_S_2, bindings, 39) \
	fn(DT_N_S_keymap_S_2, bindings, 40) \
	fn(DT_N_S_keymap_S_2, bindings, 41) \
	fn(DT_N_S_keymap_S_2, bindings, 42) \
	fn(DT_N_S_keymap_S_2, bindings, 43) \
	fn(DT_N_S_keymap_S_2, bindings, 44) \
	fn(DT_N_S_keymap_S_2, bindings, 45) \
	fn(DT_N_S_keymap_S_2, bindings, 46) \
	fn(DT_N_S_keymap_S_2, bindings, 47) \
	fn(DT_N_S_keymap_S_2, bindings, 48) \
	fn(DT_N_S_keymap_S_2, bindings, 49) \
	fn(DT_N_S_keymap_S_2, bindings, 50) \
	fn(DT_N_S_keymap_S_2, bindings, 51) \
	fn(DT_N_S_keymap_S_2, bindings, 52) \
	fn(DT_N_S_keymap_S_2, bindings, 53) \
	fn(DT_N_S_keymap_S_2, bindings, 54) \
	fn(DT_N_S_keymap_S_2, bindings, 55) \
	fn(DT_N_S_keymap_S_2, bindings, 56) \
	fn(DT_N_S_keymap_S_2, bindings, 57)
#define DT_N_S_keymap_S_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_2, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 37, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 38, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 39, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 40, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 41, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 42, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 43, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 44, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 45, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 46, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 47, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 48, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 49, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 50, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 51, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 52, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 53, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 54, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 55, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 56, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_2, bindings, 57, __VA_ARGS__)
#define DT_N_S_keymap_S_2_P_bindings_LEN 58
#define DT_N_S_keymap_S_2_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_2_P_sensor_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_2_P_sensor_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_S_keymap_S_2_P_sensor_bindings_IDX_0_VAL_param1 458832
#define DT_N_S_keymap_S_2_P_sensor_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_2_P_sensor_bindings_IDX_0_VAL_param2 458831
#define DT_N_S_keymap_S_2_P_sensor_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_2_P_sensor_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_2, sensor_bindings, 0)
#define DT_N_S_keymap_S_2_P_sensor_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_2, sensor_bindings, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_2_P_sensor_bindings_LEN 1
#define DT_N_S_keymap_S_2_P_sensor_bindings_EXISTS 1

/*
 * Devicetree node: /macros/u_macro_btn1
 *
 * Node identifier: DT_N_S_macros_S_u_macro_btn1
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_u_macro_btn1_PATH "/macros/u_macro_btn1"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_u_macro_btn1_FULL_NAME "u_macro_btn1"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_u_macro_btn1_PARENT DT_N_S_macros
#define DT_N_S_macros_S_u_macro_btn1_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_u_macro_btn1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_u_macro_btn1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_u_macro_btn1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_u_macro_btn1_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_u_macro_btn1_REQUIRES_ORDS \
	28, /* /macros */ \
	34, /* /behaviors/behavior_key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_u_macro_btn1_SUPPORTS_ORDS \
	46, /* /keymap/3 */ \
	52, /* /keymap/5 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_u_macro_btn1_EXISTS 1
#define DT_N_INST_5_zmk_behavior_macro DT_N_S_macros_S_u_macro_btn1
#define DT_N_NODELABEL_u_macro_btn1    DT_N_S_macros_S_u_macro_btn1

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_u_macro_btn1_REG_NUM 0
#define DT_N_S_macros_S_u_macro_btn1_RANGES_NUM 0
#define DT_N_S_macros_S_u_macro_btn1_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_u_macro_btn1_IRQ_NUM 0
#define DT_N_S_macros_S_u_macro_btn1_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_u_macro_btn1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_u_macro_btn1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_IDX_0_VAL_param1 458836
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_IDX_1_VAL_param1 458845
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_btn1, bindings, 0) \
	fn(DT_N_S_macros_S_u_macro_btn1, bindings, 1)
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_btn1, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, bindings, 1, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_LEN 2
#define DT_N_S_macros_S_u_macro_btn1_P_bindings_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn1_P_wait_ms 0
#define DT_N_S_macros_S_u_macro_btn1_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn1_P_tap_ms 100
#define DT_N_S_macros_S_u_macro_btn1_P_tap_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn1_P_label "ZM_u_macro_btn1"
#define DT_N_S_macros_S_u_macro_btn1_P_label_STRING_TOKEN ZM_u_macro_btn1
#define DT_N_S_macros_S_u_macro_btn1_P_label_STRING_UPPER_TOKEN ZM_U_MACRO_BTN1
#define DT_N_S_macros_S_u_macro_btn1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_btn1, label, 0) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 1) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 2) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 3) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 4) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 5) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 6) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 7) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 8) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 9) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 10) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 11) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 12) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 13) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 14)
#define DT_N_S_macros_S_u_macro_btn1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_btn1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 10, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 11, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 12, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 13, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn1, label, 14, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_btn1_P_label_EXISTS 1

/*
 * Devicetree node: /macros/u_macro_btn2
 *
 * Node identifier: DT_N_S_macros_S_u_macro_btn2
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_u_macro_btn2_PATH "/macros/u_macro_btn2"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_u_macro_btn2_FULL_NAME "u_macro_btn2"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_u_macro_btn2_PARENT DT_N_S_macros
#define DT_N_S_macros_S_u_macro_btn2_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_u_macro_btn2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_u_macro_btn2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_u_macro_btn2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_u_macro_btn2_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_u_macro_btn2_REQUIRES_ORDS \
	28, /* /macros */ \
	34, /* /behaviors/behavior_key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_u_macro_btn2_SUPPORTS_ORDS \
	46, /* /keymap/3 */ \
	52, /* /keymap/5 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_u_macro_btn2_EXISTS 1
#define DT_N_INST_6_zmk_behavior_macro DT_N_S_macros_S_u_macro_btn2
#define DT_N_NODELABEL_u_macro_btn2    DT_N_S_macros_S_u_macro_btn2

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_u_macro_btn2_REG_NUM 0
#define DT_N_S_macros_S_u_macro_btn2_RANGES_NUM 0
#define DT_N_S_macros_S_u_macro_btn2_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_u_macro_btn2_IRQ_NUM 0
#define DT_N_S_macros_S_u_macro_btn2_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_u_macro_btn2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_u_macro_btn2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_IDX_0_VAL_param1 458838
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_IDX_1_VAL_param1 458845
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_btn2, bindings, 0) \
	fn(DT_N_S_macros_S_u_macro_btn2, bindings, 1)
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_btn2, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, bindings, 1, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_LEN 2
#define DT_N_S_macros_S_u_macro_btn2_P_bindings_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn2_P_wait_ms 0
#define DT_N_S_macros_S_u_macro_btn2_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn2_P_tap_ms 100
#define DT_N_S_macros_S_u_macro_btn2_P_tap_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn2_P_label "ZM_u_macro_btn2"
#define DT_N_S_macros_S_u_macro_btn2_P_label_STRING_TOKEN ZM_u_macro_btn2
#define DT_N_S_macros_S_u_macro_btn2_P_label_STRING_UPPER_TOKEN ZM_U_MACRO_BTN2
#define DT_N_S_macros_S_u_macro_btn2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_btn2, label, 0) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 1) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 2) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 3) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 4) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 5) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 6) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 7) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 8) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 9) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 10) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 11) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 12) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 13) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 14)
#define DT_N_S_macros_S_u_macro_btn2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_btn2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 10, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 11, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 12, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 13, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn2, label, 14, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_btn2_P_label_EXISTS 1

/*
 * Devicetree node: /macros/u_macro_btn3
 *
 * Node identifier: DT_N_S_macros_S_u_macro_btn3
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_u_macro_btn3_PATH "/macros/u_macro_btn3"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_u_macro_btn3_FULL_NAME "u_macro_btn3"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_u_macro_btn3_PARENT DT_N_S_macros
#define DT_N_S_macros_S_u_macro_btn3_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_u_macro_btn3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_u_macro_btn3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_u_macro_btn3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_u_macro_btn3_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_u_macro_btn3_REQUIRES_ORDS \
	28, /* /macros */ \
	34, /* /behaviors/behavior_key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_u_macro_btn3_SUPPORTS_ORDS \
	46, /* /keymap/3 */ \
	52, /* /keymap/5 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_u_macro_btn3_EXISTS 1
#define DT_N_INST_7_zmk_behavior_macro DT_N_S_macros_S_u_macro_btn3
#define DT_N_NODELABEL_u_macro_btn3    DT_N_S_macros_S_u_macro_btn3

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_u_macro_btn3_REG_NUM 0
#define DT_N_S_macros_S_u_macro_btn3_RANGES_NUM 0
#define DT_N_S_macros_S_u_macro_btn3_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_u_macro_btn3_IRQ_NUM 0
#define DT_N_S_macros_S_u_macro_btn3_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_u_macro_btn3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_u_macro_btn3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_IDX_0_VAL_param1 458837
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_IDX_1_VAL_param1 458845
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_btn3, bindings, 0) \
	fn(DT_N_S_macros_S_u_macro_btn3, bindings, 1)
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_btn3, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, bindings, 1, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_LEN 2
#define DT_N_S_macros_S_u_macro_btn3_P_bindings_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn3_P_wait_ms 0
#define DT_N_S_macros_S_u_macro_btn3_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn3_P_tap_ms 100
#define DT_N_S_macros_S_u_macro_btn3_P_tap_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_btn3_P_label "ZM_u_macro_btn3"
#define DT_N_S_macros_S_u_macro_btn3_P_label_STRING_TOKEN ZM_u_macro_btn3
#define DT_N_S_macros_S_u_macro_btn3_P_label_STRING_UPPER_TOKEN ZM_U_MACRO_BTN3
#define DT_N_S_macros_S_u_macro_btn3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_btn3, label, 0) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 1) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 2) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 3) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 4) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 5) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 6) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 7) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 8) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 9) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 10) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 11) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 12) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 13) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 14)
#define DT_N_S_macros_S_u_macro_btn3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_btn3, label, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 10, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 11, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 12, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 13, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_btn3, label, 14, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_btn3_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/3
 *
 * Node identifier: DT_N_S_keymap_S_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_3_PATH "/keymap/3"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_3_FULL_NAME "3"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_3_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_3_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_3_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_3_REQUIRES_ORDS \
	33, /* /keymap */ \
	34, /* /behaviors/behavior_key_press */ \
	37, /* /behaviors/behavior_none */ \
	38, /* /behaviors/behavior_sensor_rotate_key_press */ \
	43, /* /macros/u_macro_btn1 */ \
	44, /* /macros/u_macro_btn2 */ \
	45, /* /macros/u_macro_btn3 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_3_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_3_REG_NUM 0
#define DT_N_S_keymap_S_3_RANGES_NUM 0
#define DT_N_S_keymap_S_3_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_3_IRQ_NUM 0
#define DT_N_S_keymap_S_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_3_P_label "Button"
#define DT_N_S_keymap_S_3_P_label_STRING_TOKEN Button
#define DT_N_S_keymap_S_3_P_label_STRING_UPPER_TOKEN BUTTON
#define DT_N_S_keymap_S_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_3, label, 0) \
	fn(DT_N_S_keymap_S_3, label, 1) \
	fn(DT_N_S_keymap_S_3, label, 2) \
	fn(DT_N_S_keymap_S_3, label, 3) \
	fn(DT_N_S_keymap_S_3, label, 4) \
	fn(DT_N_S_keymap_S_3, label, 5)
#define DT_N_S_keymap_S_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_3, label, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, label, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, label, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, label, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, label, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, label, 5, __VA_ARGS__)
#define DT_N_S_keymap_S_3_P_label_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_13_VAL_param1 134676509
#define DT_N_S_keymap_S_3_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_14_VAL_param1 134676507
#define DT_N_S_keymap_S_3_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_15_VAL_param1 134676486
#define DT_N_S_keymap_S_3_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_16_VAL_param1 134676505
#define DT_N_S_keymap_S_3_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_17_VAL_param1 168230941
#define DT_N_S_keymap_S_3_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_18_VAL_param1 168230941
#define DT_N_S_keymap_S_3_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_19_VAL_param1 134676505
#define DT_N_S_keymap_S_3_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_20_VAL_param1 134676486
#define DT_N_S_keymap_S_3_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_21_VAL_param1 134676507
#define DT_N_S_keymap_S_3_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_22_VAL_param1 134676509
#define DT_N_S_keymap_S_3_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_25_VAL_param1 458979
#define DT_N_S_keymap_S_3_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_26_VAL_param1 458978
#define DT_N_S_keymap_S_3_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_27_VAL_param1 458976
#define DT_N_S_keymap_S_3_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_28_VAL_param1 458977
#define DT_N_S_keymap_S_3_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_31_VAL_param1 458977
#define DT_N_S_keymap_S_3_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_32_VAL_param1 458976
#define DT_N_S_keymap_S_3_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_33_VAL_param1 458978
#define DT_N_S_keymap_S_3_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_3_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_37_VAL_param1 134676509
#define DT_N_S_keymap_S_3_P_bindings_IDX_37_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_38_VAL_param1 134676507
#define DT_N_S_keymap_S_3_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_39_VAL_param1 134676486
#define DT_N_S_keymap_S_3_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_40_VAL_param1 134676505
#define DT_N_S_keymap_S_3_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_41_VAL_param1 168230941
#define DT_N_S_keymap_S_3_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_42_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_42_VAL_param1 168230941
#define DT_N_S_keymap_S_3_P_bindings_IDX_42_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_43_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_43_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_43_VAL_param1 134676505
#define DT_N_S_keymap_S_3_P_bindings_IDX_43_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_44_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_44_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_44_VAL_param1 134676486
#define DT_N_S_keymap_S_3_P_bindings_IDX_44_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_45_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_45_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_45_VAL_param1 134676507
#define DT_N_S_keymap_S_3_P_bindings_IDX_45_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_46_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_46_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_3_P_bindings_IDX_46_VAL_param1 134676509
#define DT_N_S_keymap_S_3_P_bindings_IDX_46_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_47_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_47_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_48_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_48_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_49_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_49_PH DT_N_S_macros_S_u_macro_btn3
#define DT_N_S_keymap_S_3_P_bindings_IDX_50_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_50_PH DT_N_S_macros_S_u_macro_btn1
#define DT_N_S_keymap_S_3_P_bindings_IDX_51_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_51_PH DT_N_S_macros_S_u_macro_btn2
#define DT_N_S_keymap_S_3_P_bindings_IDX_52_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_52_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_53_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_53_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_IDX_54_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_54_PH DT_N_S_macros_S_u_macro_btn2
#define DT_N_S_keymap_S_3_P_bindings_IDX_55_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_55_PH DT_N_S_macros_S_u_macro_btn1
#define DT_N_S_keymap_S_3_P_bindings_IDX_56_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_56_PH DT_N_S_macros_S_u_macro_btn3
#define DT_N_S_keymap_S_3_P_bindings_IDX_57_EXISTS 1
#define DT_N_S_keymap_S_3_P_bindings_IDX_57_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_3, bindings, 0) \
	fn(DT_N_S_keymap_S_3, bindings, 1) \
	fn(DT_N_S_keymap_S_3, bindings, 2) \
	fn(DT_N_S_keymap_S_3, bindings, 3) \
	fn(DT_N_S_keymap_S_3, bindings, 4) \
	fn(DT_N_S_keymap_S_3, bindings, 5) \
	fn(DT_N_S_keymap_S_3, bindings, 6) \
	fn(DT_N_S_keymap_S_3, bindings, 7) \
	fn(DT_N_S_keymap_S_3, bindings, 8) \
	fn(DT_N_S_keymap_S_3, bindings, 9) \
	fn(DT_N_S_keymap_S_3, bindings, 10) \
	fn(DT_N_S_keymap_S_3, bindings, 11) \
	fn(DT_N_S_keymap_S_3, bindings, 12) \
	fn(DT_N_S_keymap_S_3, bindings, 13) \
	fn(DT_N_S_keymap_S_3, bindings, 14) \
	fn(DT_N_S_keymap_S_3, bindings, 15) \
	fn(DT_N_S_keymap_S_3, bindings, 16) \
	fn(DT_N_S_keymap_S_3, bindings, 17) \
	fn(DT_N_S_keymap_S_3, bindings, 18) \
	fn(DT_N_S_keymap_S_3, bindings, 19) \
	fn(DT_N_S_keymap_S_3, bindings, 20) \
	fn(DT_N_S_keymap_S_3, bindings, 21) \
	fn(DT_N_S_keymap_S_3, bindings, 22) \
	fn(DT_N_S_keymap_S_3, bindings, 23) \
	fn(DT_N_S_keymap_S_3, bindings, 24) \
	fn(DT_N_S_keymap_S_3, bindings, 25) \
	fn(DT_N_S_keymap_S_3, bindings, 26) \
	fn(DT_N_S_keymap_S_3, bindings, 27) \
	fn(DT_N_S_keymap_S_3, bindings, 28) \
	fn(DT_N_S_keymap_S_3, bindings, 29) \
	fn(DT_N_S_keymap_S_3, bindings, 30) \
	fn(DT_N_S_keymap_S_3, bindings, 31) \
	fn(DT_N_S_keymap_S_3, bindings, 32) \
	fn(DT_N_S_keymap_S_3, bindings, 33) \
	fn(DT_N_S_keymap_S_3, bindings, 34) \
	fn(DT_N_S_keymap_S_3, bindings, 35) \
	fn(DT_N_S_keymap_S_3, bindings, 36) \
	fn(DT_N_S_keymap_S_3, bindings, 37) \
	fn(DT_N_S_keymap_S_3, bindings, 38) \
	fn(DT_N_S_keymap_S_3, bindings, 39) \
	fn(DT_N_S_keymap_S_3, bindings, 40) \
	fn(DT_N_S_keymap_S_3, bindings, 41) \
	fn(DT_N_S_keymap_S_3, bindings, 42) \
	fn(DT_N_S_keymap_S_3, bindings, 43) \
	fn(DT_N_S_keymap_S_3, bindings, 44) \
	fn(DT_N_S_keymap_S_3, bindings, 45) \
	fn(DT_N_S_keymap_S_3, bindings, 46) \
	fn(DT_N_S_keymap_S_3, bindings, 47) \
	fn(DT_N_S_keymap_S_3, bindings, 48) \
	fn(DT_N_S_keymap_S_3, bindings, 49) \
	fn(DT_N_S_keymap_S_3, bindings, 50) \
	fn(DT_N_S_keymap_S_3, bindings, 51) \
	fn(DT_N_S_keymap_S_3, bindings, 52) \
	fn(DT_N_S_keymap_S_3, bindings, 53) \
	fn(DT_N_S_keymap_S_3, bindings, 54) \
	fn(DT_N_S_keymap_S_3, bindings, 55) \
	fn(DT_N_S_keymap_S_3, bindings, 56) \
	fn(DT_N_S_keymap_S_3, bindings, 57)
#define DT_N_S_keymap_S_3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_3, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 37, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 38, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 39, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 40, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 41, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 42, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 43, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 44, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 45, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 46, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 47, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 48, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 49, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 50, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 51, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 52, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 53, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 54, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 55, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 56, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_3, bindings, 57, __VA_ARGS__)
#define DT_N_S_keymap_S_3_P_bindings_LEN 58
#define DT_N_S_keymap_S_3_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_3_P_sensor_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_3_P_sensor_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_S_keymap_S_3_P_sensor_bindings_IDX_0_VAL_param1 458832
#define DT_N_S_keymap_S_3_P_sensor_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_3_P_sensor_bindings_IDX_0_VAL_param2 458831
#define DT_N_S_keymap_S_3_P_sensor_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_3_P_sensor_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_3, sensor_bindings, 0)
#define DT_N_S_keymap_S_3_P_sensor_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_3, sensor_bindings, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_3_P_sensor_bindings_LEN 1
#define DT_N_S_keymap_S_3_P_sensor_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_reset_dfu
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_reset_dfu
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_PATH "/behaviors/behavior_reset_dfu"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_FULL_NAME "behavior_reset_dfu"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_reset_dfu_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_reset_dfu_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_reset_dfu_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_reset_dfu_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_SUPPORTS_ORDS \
	51, /* /keymap/4 */ \
	52, /* /keymap/5 */ \
	70, /* /keymap/6 */ \
	71, /* /keymap/7 */ \
	72, /* /keymap/8 */ \
	73, /* /keymap/9 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_EXISTS 1
#define DT_N_INST_1_zmk_behavior_reset DT_N_S_behaviors_S_behavior_reset_dfu
#define DT_N_NODELABEL_bootloader      DT_N_S_behaviors_S_behavior_reset_dfu

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_dfu_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_dfu_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_reset_dfu_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_dfu_COMPAT_MATCHES_zmk_behavior_reset 1
#define DT_N_S_behaviors_S_behavior_reset_dfu_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_type 87
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_type_EXISTS 1
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_label "BOOTLOAD"
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_label_STRING_TOKEN BOOTLOAD
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_label_STRING_UPPER_TOKEN BOOTLOAD
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 3) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 4) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 5) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 6) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 7)
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_reset_dfu, label, 7, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_to_layer
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_to_layer
 *
 * Binding (compatible = zmk,behavior-to-layer):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-to-layer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_to_layer_PATH "/behaviors/behavior_to_layer"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_to_layer_FULL_NAME "behavior_to_layer"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_to_layer_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_to_layer_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_to_layer_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_to_layer_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_to_layer_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_to_layer_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_to_layer_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_to_layer_SUPPORTS_ORDS \
	51, /* /keymap/4 */ \
	52, /* /keymap/5 */ \
	70, /* /keymap/6 */ \
	71, /* /keymap/7 */ \
	72, /* /keymap/8 */ \
	73, /* /keymap/9 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_to_layer_EXISTS 1
#define DT_N_INST_0_zmk_behavior_to_layer DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_NODELABEL_to                 DT_N_S_behaviors_S_behavior_to_layer

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_to_layer_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_to_layer_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_to_layer_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_to_layer_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_to_layer_COMPAT_MATCHES_zmk_behavior_to_layer 1
#define DT_N_S_behaviors_S_behavior_to_layer_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_to_layer_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_to_layer_P_label "TO_LAYER"
#define DT_N_S_behaviors_S_behavior_to_layer_P_label_STRING_TOKEN TO_LAYER
#define DT_N_S_behaviors_S_behavior_to_layer_P_label_STRING_UPPER_TOKEN TO_LAYER
#define DT_N_S_behaviors_S_behavior_to_layer_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_to_layer, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 3) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 4) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 5) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 6) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 7)
#define DT_N_S_behaviors_S_behavior_to_layer_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_to_layer, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_to_layer, label, 7, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_to_layer_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_caps_word
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_caps_word
 *
 * Binding (compatible = zmk,behavior-caps-word):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-caps-word.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_caps_word_PATH "/behaviors/behavior_caps_word"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_caps_word_FULL_NAME "behavior_caps_word"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_caps_word_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_caps_word_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_caps_word_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_caps_word_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_caps_word_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_caps_word_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_caps_word_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_caps_word_SUPPORTS_ORDS \
	50, /* /behaviors/u_caps_word */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_caps_word_EXISTS 1
#define DT_N_INST_0_zmk_behavior_caps_word DT_N_S_behaviors_S_behavior_caps_word
#define DT_N_NODELABEL_caps_word           DT_N_S_behaviors_S_behavior_caps_word

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_caps_word_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_caps_word_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_caps_word_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_caps_word_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_caps_word_COMPAT_MATCHES_zmk_behavior_caps_word 1
#define DT_N_S_behaviors_S_behavior_caps_word_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_caps_word_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_caps_word_P_continue_list {34013229 /* 0x207002d */, 458794 /* 0x7002a */, 458828 /* 0x7004c */}
#define DT_N_S_behaviors_S_behavior_caps_word_P_continue_list_IDX_0 34013229
#define DT_N_S_behaviors_S_behavior_caps_word_P_continue_list_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_behavior_caps_word_P_continue_list_IDX_1 458794
#define DT_N_S_behaviors_S_behavior_caps_word_P_continue_list_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_behavior_caps_word_P_continue_list_IDX_2 458828
#define DT_N_S_behaviors_S_behavior_caps_word_P_continue_list_IDX_2_EXISTS 1
#define DT_N_S_behaviors_S_behavior_caps_word_P_continue_list_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_caps_word, continue_list, 0) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, continue_list, 1) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, continue_list, 2)
#define DT_N_S_behaviors_S_behavior_caps_word_P_continue_list_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_caps_word, continue_list, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, continue_list, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, continue_list, 2, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_caps_word_P_continue_list_LEN 3
#define DT_N_S_behaviors_S_behavior_caps_word_P_continue_list_EXISTS 1
#define DT_N_S_behaviors_S_behavior_caps_word_P_label "CAPS_WORD"
#define DT_N_S_behaviors_S_behavior_caps_word_P_label_STRING_TOKEN CAPS_WORD
#define DT_N_S_behaviors_S_behavior_caps_word_P_label_STRING_UPPER_TOKEN CAPS_WORD
#define DT_N_S_behaviors_S_behavior_caps_word_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_caps_word, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 3) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 4) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 5) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 6) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 7) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 8)
#define DT_N_S_behaviors_S_behavior_caps_word_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_caps_word, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_caps_word, label, 8, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_caps_word_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_caps_word
 *
 * Node identifier: DT_N_S_behaviors_S_u_caps_word
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_caps_word_PATH "/behaviors/u_caps_word"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_caps_word_FULL_NAME "u_caps_word"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_caps_word_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_caps_word_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_caps_word_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_caps_word_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_caps_word_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_caps_word_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_caps_word_REQUIRES_ORDS \
	19, /* /behaviors */ \
	34, /* /behaviors/behavior_key_press */ \
	49, /* /behaviors/behavior_caps_word */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_caps_word_SUPPORTS_ORDS \
	51, /* /keymap/4 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_caps_word_EXISTS 1
#define DT_N_INST_11_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_caps_word
#define DT_N_NODELABEL_u_caps_word          DT_N_S_behaviors_S_u_caps_word

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_caps_word_REG_NUM 0
#define DT_N_S_behaviors_S_u_caps_word_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_caps_word_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_caps_word_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_caps_word_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_caps_word_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_caps_word_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_caps_word_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_caps_word_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_caps_word
#define DT_N_S_behaviors_S_u_caps_word_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_caps_word_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_behaviors_S_u_caps_word_P_bindings_IDX_1_VAL_param1 458809
#define DT_N_S_behaviors_S_u_caps_word_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_caps_word_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_caps_word, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_caps_word, bindings, 1)
#define DT_N_S_behaviors_S_u_caps_word_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_caps_word, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_caps_word, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_caps_word_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_caps_word_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_caps_word_P_mods 34
#define DT_N_S_behaviors_S_u_caps_word_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_caps_word_P_label "u_caps_word"
#define DT_N_S_behaviors_S_u_caps_word_P_label_STRING_TOKEN u_caps_word
#define DT_N_S_behaviors_S_u_caps_word_P_label_STRING_UPPER_TOKEN U_CAPS_WORD
#define DT_N_S_behaviors_S_u_caps_word_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_caps_word, label, 0) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 1) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 2) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 3) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 4) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 5) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 6) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 7) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 8) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 9) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 10)
#define DT_N_S_behaviors_S_u_caps_word_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_caps_word, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 9, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_caps_word, label, 10, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_caps_word_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/4
 *
 * Node identifier: DT_N_S_keymap_S_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_4_PATH "/keymap/4"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_4_FULL_NAME "4"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_4_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_4_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_4_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_4_REQUIRES_ORDS \
	33, /* /keymap */ \
	34, /* /behaviors/behavior_key_press */ \
	37, /* /behaviors/behavior_none */ \
	38, /* /behaviors/behavior_sensor_rotate_key_press */ \
	47, /* /behaviors/behavior_reset_dfu */ \
	48, /* /behaviors/behavior_to_layer */ \
	50, /* /behaviors/u_caps_word */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_4_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_4_REG_NUM 0
#define DT_N_S_keymap_S_4_RANGES_NUM 0
#define DT_N_S_keymap_S_4_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_4_IRQ_NUM 0
#define DT_N_S_keymap_S_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_4_P_label "Nav"
#define DT_N_S_keymap_S_4_P_label_STRING_TOKEN Nav
#define DT_N_S_keymap_S_4_P_label_STRING_UPPER_TOKEN NAV
#define DT_N_S_keymap_S_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_4, label, 0) \
	fn(DT_N_S_keymap_S_4, label, 1) \
	fn(DT_N_S_keymap_S_4, label, 2)
#define DT_N_S_keymap_S_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_4, label, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, label, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, label, 2, __VA_ARGS__)
#define DT_N_S_keymap_S_4_P_label_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_reset_dfu
#define DT_N_S_keymap_S_4_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_4_P_bindings_IDX_14_VAL_param1 2
#define DT_N_S_keymap_S_4_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_4_P_bindings_IDX_15_VAL_param1 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_4_P_bindings_IDX_16_VAL_param1 0
#define DT_N_S_keymap_S_4_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_18_VAL_param1 168230941
#define DT_N_S_keymap_S_4_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_19_VAL_param1 134676505
#define DT_N_S_keymap_S_4_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_20_VAL_param1 134676486
#define DT_N_S_keymap_S_4_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_21_VAL_param1 134676507
#define DT_N_S_keymap_S_4_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_22_VAL_param1 134676509
#define DT_N_S_keymap_S_4_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_25_VAL_param1 458979
#define DT_N_S_keymap_S_4_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_26_VAL_param1 458978
#define DT_N_S_keymap_S_4_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_27_VAL_param1 458976
#define DT_N_S_keymap_S_4_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_28_VAL_param1 458977
#define DT_N_S_keymap_S_4_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_30_PH DT_N_S_behaviors_S_u_caps_word
#define DT_N_S_keymap_S_4_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_31_VAL_param1 458832
#define DT_N_S_keymap_S_4_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_32_VAL_param1 458833
#define DT_N_S_keymap_S_4_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_33_VAL_param1 458834
#define DT_N_S_keymap_S_4_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_34_VAL_param1 458831
#define DT_N_S_keymap_S_4_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_38_VAL_param1 458982
#define DT_N_S_keymap_S_4_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_4_P_bindings_IDX_39_VAL_param1 7
#define DT_N_S_keymap_S_4_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_4_P_bindings_IDX_40_VAL_param1 4
#define DT_N_S_keymap_S_4_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_42_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_42_VAL_param1 458825
#define DT_N_S_keymap_S_4_P_bindings_IDX_42_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_43_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_43_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_43_VAL_param1 458826
#define DT_N_S_keymap_S_4_P_bindings_IDX_43_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_44_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_44_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_44_VAL_param1 458830
#define DT_N_S_keymap_S_4_P_bindings_IDX_44_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_45_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_45_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_45_VAL_param1 458827
#define DT_N_S_keymap_S_4_P_bindings_IDX_45_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_46_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_46_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_46_VAL_param1 458829
#define DT_N_S_keymap_S_4_P_bindings_IDX_46_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_47_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_47_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_48_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_48_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_49_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_49_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_50_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_50_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_51_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_51_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_52_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_52_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_53_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_53_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_IDX_54_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_54_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_54_VAL_param1 458792
#define DT_N_S_keymap_S_4_P_bindings_IDX_54_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_55_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_55_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_55_VAL_param1 458794
#define DT_N_S_keymap_S_4_P_bindings_IDX_55_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_56_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_56_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_4_P_bindings_IDX_56_VAL_param1 458828
#define DT_N_S_keymap_S_4_P_bindings_IDX_56_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_57_EXISTS 1
#define DT_N_S_keymap_S_4_P_bindings_IDX_57_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_4_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_4, bindings, 0) \
	fn(DT_N_S_keymap_S_4, bindings, 1) \
	fn(DT_N_S_keymap_S_4, bindings, 2) \
	fn(DT_N_S_keymap_S_4, bindings, 3) \
	fn(DT_N_S_keymap_S_4, bindings, 4) \
	fn(DT_N_S_keymap_S_4, bindings, 5) \
	fn(DT_N_S_keymap_S_4, bindings, 6) \
	fn(DT_N_S_keymap_S_4, bindings, 7) \
	fn(DT_N_S_keymap_S_4, bindings, 8) \
	fn(DT_N_S_keymap_S_4, bindings, 9) \
	fn(DT_N_S_keymap_S_4, bindings, 10) \
	fn(DT_N_S_keymap_S_4, bindings, 11) \
	fn(DT_N_S_keymap_S_4, bindings, 12) \
	fn(DT_N_S_keymap_S_4, bindings, 13) \
	fn(DT_N_S_keymap_S_4, bindings, 14) \
	fn(DT_N_S_keymap_S_4, bindings, 15) \
	fn(DT_N_S_keymap_S_4, bindings, 16) \
	fn(DT_N_S_keymap_S_4, bindings, 17) \
	fn(DT_N_S_keymap_S_4, bindings, 18) \
	fn(DT_N_S_keymap_S_4, bindings, 19) \
	fn(DT_N_S_keymap_S_4, bindings, 20) \
	fn(DT_N_S_keymap_S_4, bindings, 21) \
	fn(DT_N_S_keymap_S_4, bindings, 22) \
	fn(DT_N_S_keymap_S_4, bindings, 23) \
	fn(DT_N_S_keymap_S_4, bindings, 24) \
	fn(DT_N_S_keymap_S_4, bindings, 25) \
	fn(DT_N_S_keymap_S_4, bindings, 26) \
	fn(DT_N_S_keymap_S_4, bindings, 27) \
	fn(DT_N_S_keymap_S_4, bindings, 28) \
	fn(DT_N_S_keymap_S_4, bindings, 29) \
	fn(DT_N_S_keymap_S_4, bindings, 30) \
	fn(DT_N_S_keymap_S_4, bindings, 31) \
	fn(DT_N_S_keymap_S_4, bindings, 32) \
	fn(DT_N_S_keymap_S_4, bindings, 33) \
	fn(DT_N_S_keymap_S_4, bindings, 34) \
	fn(DT_N_S_keymap_S_4, bindings, 35) \
	fn(DT_N_S_keymap_S_4, bindings, 36) \
	fn(DT_N_S_keymap_S_4, bindings, 37) \
	fn(DT_N_S_keymap_S_4, bindings, 38) \
	fn(DT_N_S_keymap_S_4, bindings, 39) \
	fn(DT_N_S_keymap_S_4, bindings, 40) \
	fn(DT_N_S_keymap_S_4, bindings, 41) \
	fn(DT_N_S_keymap_S_4, bindings, 42) \
	fn(DT_N_S_keymap_S_4, bindings, 43) \
	fn(DT_N_S_keymap_S_4, bindings, 44) \
	fn(DT_N_S_keymap_S_4, bindings, 45) \
	fn(DT_N_S_keymap_S_4, bindings, 46) \
	fn(DT_N_S_keymap_S_4, bindings, 47) \
	fn(DT_N_S_keymap_S_4, bindings, 48) \
	fn(DT_N_S_keymap_S_4, bindings, 49) \
	fn(DT_N_S_keymap_S_4, bindings, 50) \
	fn(DT_N_S_keymap_S_4, bindings, 51) \
	fn(DT_N_S_keymap_S_4, bindings, 52) \
	fn(DT_N_S_keymap_S_4, bindings, 53) \
	fn(DT_N_S_keymap_S_4, bindings, 54) \
	fn(DT_N_S_keymap_S_4, bindings, 55) \
	fn(DT_N_S_keymap_S_4, bindings, 56) \
	fn(DT_N_S_keymap_S_4, bindings, 57)
#define DT_N_S_keymap_S_4_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_4, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 37, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 38, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 39, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 40, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 41, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 42, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 43, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 44, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 45, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 46, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 47, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 48, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 49, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 50, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 51, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 52, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 53, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 54, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 55, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 56, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_4, bindings, 57, __VA_ARGS__)
#define DT_N_S_keymap_S_4_P_bindings_LEN 58
#define DT_N_S_keymap_S_4_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_4_P_sensor_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_4_P_sensor_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_S_keymap_S_4_P_sensor_bindings_IDX_0_VAL_param1 458832
#define DT_N_S_keymap_S_4_P_sensor_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_4_P_sensor_bindings_IDX_0_VAL_param2 458831
#define DT_N_S_keymap_S_4_P_sensor_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_4_P_sensor_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_4, sensor_bindings, 0)
#define DT_N_S_keymap_S_4_P_sensor_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_4, sensor_bindings, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_4_P_sensor_bindings_LEN 1
#define DT_N_S_keymap_S_4_P_sensor_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/5
 *
 * Node identifier: DT_N_S_keymap_S_5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_5_PATH "/keymap/5"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_5_FULL_NAME "5"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_5_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_5_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_5_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_5_REQUIRES_ORDS \
	33, /* /keymap */ \
	34, /* /behaviors/behavior_key_press */ \
	37, /* /behaviors/behavior_none */ \
	38, /* /behaviors/behavior_sensor_rotate_key_press */ \
	43, /* /macros/u_macro_btn1 */ \
	44, /* /macros/u_macro_btn2 */ \
	45, /* /macros/u_macro_btn3 */ \
	47, /* /behaviors/behavior_reset_dfu */ \
	48, /* /behaviors/behavior_to_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_5_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_5_REG_NUM 0
#define DT_N_S_keymap_S_5_RANGES_NUM 0
#define DT_N_S_keymap_S_5_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_5_IRQ_NUM 0
#define DT_N_S_keymap_S_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_5_P_label "Mouse"
#define DT_N_S_keymap_S_5_P_label_STRING_TOKEN Mouse
#define DT_N_S_keymap_S_5_P_label_STRING_UPPER_TOKEN MOUSE
#define DT_N_S_keymap_S_5_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_5, label, 0) \
	fn(DT_N_S_keymap_S_5, label, 1) \
	fn(DT_N_S_keymap_S_5, label, 2) \
	fn(DT_N_S_keymap_S_5, label, 3) \
	fn(DT_N_S_keymap_S_5, label, 4)
#define DT_N_S_keymap_S_5_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_5, label, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, label, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, label, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, label, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, label, 4, __VA_ARGS__)
#define DT_N_S_keymap_S_5_P_label_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_reset_dfu
#define DT_N_S_keymap_S_5_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_5_P_bindings_IDX_14_VAL_param1 2
#define DT_N_S_keymap_S_5_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_5_P_bindings_IDX_15_VAL_param1 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_5_P_bindings_IDX_16_VAL_param1 0
#define DT_N_S_keymap_S_5_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_18_VAL_param1 168230941
#define DT_N_S_keymap_S_5_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_19_VAL_param1 134676505
#define DT_N_S_keymap_S_5_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_20_VAL_param1 134676486
#define DT_N_S_keymap_S_5_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_21_VAL_param1 134676507
#define DT_N_S_keymap_S_5_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_22_VAL_param1 134676509
#define DT_N_S_keymap_S_5_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_25_VAL_param1 458979
#define DT_N_S_keymap_S_5_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_26_VAL_param1 458978
#define DT_N_S_keymap_S_5_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_27_VAL_param1 458976
#define DT_N_S_keymap_S_5_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_28_VAL_param1 458977
#define DT_N_S_keymap_S_5_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_31_VAL_param1 458844
#define DT_N_S_keymap_S_5_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_32_VAL_param1 458842
#define DT_N_S_keymap_S_5_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_33_VAL_param1 458848
#define DT_N_S_keymap_S_5_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_34_VAL_param1 458846
#define DT_N_S_keymap_S_5_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_5_P_bindings_IDX_38_VAL_param1 458982
#define DT_N_S_keymap_S_5_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_5_P_bindings_IDX_39_VAL_param1 8
#define DT_N_S_keymap_S_5_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_5_P_bindings_IDX_40_VAL_param1 5
#define DT_N_S_keymap_S_5_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_42_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_43_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_43_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_44_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_44_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_45_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_45_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_46_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_46_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_47_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_47_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_48_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_48_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_49_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_49_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_50_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_50_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_51_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_51_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_52_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_52_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_53_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_53_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_IDX_54_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_54_PH DT_N_S_macros_S_u_macro_btn2
#define DT_N_S_keymap_S_5_P_bindings_IDX_55_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_55_PH DT_N_S_macros_S_u_macro_btn1
#define DT_N_S_keymap_S_5_P_bindings_IDX_56_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_56_PH DT_N_S_macros_S_u_macro_btn3
#define DT_N_S_keymap_S_5_P_bindings_IDX_57_EXISTS 1
#define DT_N_S_keymap_S_5_P_bindings_IDX_57_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_5_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_5, bindings, 0) \
	fn(DT_N_S_keymap_S_5, bindings, 1) \
	fn(DT_N_S_keymap_S_5, bindings, 2) \
	fn(DT_N_S_keymap_S_5, bindings, 3) \
	fn(DT_N_S_keymap_S_5, bindings, 4) \
	fn(DT_N_S_keymap_S_5, bindings, 5) \
	fn(DT_N_S_keymap_S_5, bindings, 6) \
	fn(DT_N_S_keymap_S_5, bindings, 7) \
	fn(DT_N_S_keymap_S_5, bindings, 8) \
	fn(DT_N_S_keymap_S_5, bindings, 9) \
	fn(DT_N_S_keymap_S_5, bindings, 10) \
	fn(DT_N_S_keymap_S_5, bindings, 11) \
	fn(DT_N_S_keymap_S_5, bindings, 12) \
	fn(DT_N_S_keymap_S_5, bindings, 13) \
	fn(DT_N_S_keymap_S_5, bindings, 14) \
	fn(DT_N_S_keymap_S_5, bindings, 15) \
	fn(DT_N_S_keymap_S_5, bindings, 16) \
	fn(DT_N_S_keymap_S_5, bindings, 17) \
	fn(DT_N_S_keymap_S_5, bindings, 18) \
	fn(DT_N_S_keymap_S_5, bindings, 19) \
	fn(DT_N_S_keymap_S_5, bindings, 20) \
	fn(DT_N_S_keymap_S_5, bindings, 21) \
	fn(DT_N_S_keymap_S_5, bindings, 22) \
	fn(DT_N_S_keymap_S_5, bindings, 23) \
	fn(DT_N_S_keymap_S_5, bindings, 24) \
	fn(DT_N_S_keymap_S_5, bindings, 25) \
	fn(DT_N_S_keymap_S_5, bindings, 26) \
	fn(DT_N_S_keymap_S_5, bindings, 27) \
	fn(DT_N_S_keymap_S_5, bindings, 28) \
	fn(DT_N_S_keymap_S_5, bindings, 29) \
	fn(DT_N_S_keymap_S_5, bindings, 30) \
	fn(DT_N_S_keymap_S_5, bindings, 31) \
	fn(DT_N_S_keymap_S_5, bindings, 32) \
	fn(DT_N_S_keymap_S_5, bindings, 33) \
	fn(DT_N_S_keymap_S_5, bindings, 34) \
	fn(DT_N_S_keymap_S_5, bindings, 35) \
	fn(DT_N_S_keymap_S_5, bindings, 36) \
	fn(DT_N_S_keymap_S_5, bindings, 37) \
	fn(DT_N_S_keymap_S_5, bindings, 38) \
	fn(DT_N_S_keymap_S_5, bindings, 39) \
	fn(DT_N_S_keymap_S_5, bindings, 40) \
	fn(DT_N_S_keymap_S_5, bindings, 41) \
	fn(DT_N_S_keymap_S_5, bindings, 42) \
	fn(DT_N_S_keymap_S_5, bindings, 43) \
	fn(DT_N_S_keymap_S_5, bindings, 44) \
	fn(DT_N_S_keymap_S_5, bindings, 45) \
	fn(DT_N_S_keymap_S_5, bindings, 46) \
	fn(DT_N_S_keymap_S_5, bindings, 47) \
	fn(DT_N_S_keymap_S_5, bindings, 48) \
	fn(DT_N_S_keymap_S_5, bindings, 49) \
	fn(DT_N_S_keymap_S_5, bindings, 50) \
	fn(DT_N_S_keymap_S_5, bindings, 51) \
	fn(DT_N_S_keymap_S_5, bindings, 52) \
	fn(DT_N_S_keymap_S_5, bindings, 53) \
	fn(DT_N_S_keymap_S_5, bindings, 54) \
	fn(DT_N_S_keymap_S_5, bindings, 55) \
	fn(DT_N_S_keymap_S_5, bindings, 56) \
	fn(DT_N_S_keymap_S_5, bindings, 57)
#define DT_N_S_keymap_S_5_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_5, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 37, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 38, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 39, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 40, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 41, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 42, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 43, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 44, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 45, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 46, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 47, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 48, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 49, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 50, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 51, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 52, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 53, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 54, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 55, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 56, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_5, bindings, 57, __VA_ARGS__)
#define DT_N_S_keymap_S_5_P_bindings_LEN 58
#define DT_N_S_keymap_S_5_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_5_P_sensor_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_5_P_sensor_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_S_keymap_S_5_P_sensor_bindings_IDX_0_VAL_param1 458832
#define DT_N_S_keymap_S_5_P_sensor_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_5_P_sensor_bindings_IDX_0_VAL_param2 458831
#define DT_N_S_keymap_S_5_P_sensor_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_5_P_sensor_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_5, sensor_bindings, 0)
#define DT_N_S_keymap_S_5_P_sensor_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_5, sensor_bindings, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_5_P_sensor_bindings_LEN 1
#define DT_N_S_keymap_S_5_P_sensor_bindings_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_rgb_underglow
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_rgb_underglow
 *
 * Binding (compatible = zmk,behavior-rgb-underglow):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-rgb-underglow.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_PATH "/behaviors/behavior_rgb_underglow"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_FULL_NAME "behavior_rgb_underglow"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_rgb_underglow_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_rgb_underglow_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_rgb_underglow_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_rgb_underglow_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_SUPPORTS_ORDS \
	66, /* /behaviors/u_rgb_bri */ \
	67, /* /behaviors/u_rgb_eff */ \
	68, /* /behaviors/u_rgb_hui */ \
	69, /* /behaviors/u_rgb_sai */ \
	70, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_EXISTS 1
#define DT_N_INST_0_zmk_behavior_rgb_underglow DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_NODELABEL_rgb_ug                  DT_N_S_behaviors_S_behavior_rgb_underglow

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_rgb_underglow_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_rgb_underglow_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_rgb_underglow_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_rgb_underglow_COMPAT_MATCHES_zmk_behavior_rgb_underglow 1
#define DT_N_S_behaviors_S_behavior_rgb_underglow_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_P_label "RGB_UG"
#define DT_N_S_behaviors_S_behavior_rgb_underglow_P_label_STRING_TOKEN RGB_UG
#define DT_N_S_behaviors_S_behavior_rgb_underglow_P_label_STRING_UPPER_TOKEN RGB_UG
#define DT_N_S_behaviors_S_behavior_rgb_underglow_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 3) \
	fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 4) \
	fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 5)
#define DT_N_S_behaviors_S_behavior_rgb_underglow_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_rgb_underglow, label, 5, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_rgb_underglow_P_label_EXISTS 1

/*
 * Devicetree node: /macros/u_macro_u_bt_sel_0
 *
 * Node identifier: DT_N_S_macros_S_u_macro_u_bt_sel_0
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_PATH "/macros/u_macro_u_bt_sel_0"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_FULL_NAME "u_macro_u_bt_sel_0"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_PARENT DT_N_S_macros
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_REQUIRES_ORDS \
	27, /* /behaviors/behavior_bluetooth */ \
	28, /* /macros */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_SUPPORTS_ORDS \
	55, /* /behaviors/u_bt_sel_0 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_EXISTS 1
#define DT_N_INST_0_zmk_behavior_macro    DT_N_S_macros_S_u_macro_u_bt_sel_0
#define DT_N_NODELABEL_u_macro_u_bt_sel_0 DT_N_S_macros_S_u_macro_u_bt_sel_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_REG_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_RANGES_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_IRQ_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_0_VAL_param1 3
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_0_VAL_param2 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_1_VAL_param1 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, bindings, 0) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, bindings, 1)
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, bindings, 1, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_LEN 2
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_bindings_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_wait_ms 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_tap_ms 100
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_tap_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_label "ZM_u_macro_u_bt_sel_0"
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_label_STRING_TOKEN ZM_u_macro_u_bt_sel_0
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_label_STRING_UPPER_TOKEN ZM_U_MACRO_U_BT_SEL_0
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 0) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 1) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 2) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 3) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 4) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 5) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 6) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 7) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 8) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 9) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 10) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 11) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 12) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 13) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 14) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 15) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 16) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 17) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 18) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 19) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 20)
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 10, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 11, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 12, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 13, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 14, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 15, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 16, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 17, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 18, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 19, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, label, 20, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_u_bt_sel_0_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_bt_sel_0
 *
 * Node identifier: DT_N_S_behaviors_S_u_bt_sel_0
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_bt_sel_0_PATH "/behaviors/u_bt_sel_0"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_bt_sel_0_FULL_NAME "u_bt_sel_0"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_bt_sel_0_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_bt_sel_0_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_bt_sel_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_bt_sel_0_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_bt_sel_0_REQUIRES_ORDS \
	19, /* /behaviors */ \
	27, /* /behaviors/behavior_bluetooth */ \
	54, /* /macros/u_macro_u_bt_sel_0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_bt_sel_0_SUPPORTS_ORDS \
	70, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_bt_sel_0_EXISTS 1
#define DT_N_INST_0_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_bt_sel_0
#define DT_N_NODELABEL_u_bt_sel_0          DT_N_S_behaviors_S_u_bt_sel_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_bt_sel_0_REG_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_0_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_0_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_0_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_0_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_bt_sel_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_bt_sel_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_IDX_0_VAL_param1 3
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_IDX_0_VAL_param2 0
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_IDX_1_PH DT_N_S_macros_S_u_macro_u_bt_sel_0
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_bt_sel_0, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, bindings, 1)
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_bt_sel_0, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_bt_sel_0_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_0_P_mods 34
#define DT_N_S_behaviors_S_u_bt_sel_0_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_0_P_label "u_bt_sel_0"
#define DT_N_S_behaviors_S_u_bt_sel_0_P_label_STRING_TOKEN u_bt_sel_0
#define DT_N_S_behaviors_S_u_bt_sel_0_P_label_STRING_UPPER_TOKEN U_BT_SEL_0
#define DT_N_S_behaviors_S_u_bt_sel_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 0) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 1) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 2) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 3) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 4) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 5) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 6) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 7) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 8) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 9)
#define DT_N_S_behaviors_S_u_bt_sel_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_0, label, 9, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_bt_sel_0_P_label_EXISTS 1

/*
 * Devicetree node: /macros/u_macro_u_bt_sel_1
 *
 * Node identifier: DT_N_S_macros_S_u_macro_u_bt_sel_1
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_PATH "/macros/u_macro_u_bt_sel_1"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_FULL_NAME "u_macro_u_bt_sel_1"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_PARENT DT_N_S_macros
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_REQUIRES_ORDS \
	27, /* /behaviors/behavior_bluetooth */ \
	28, /* /macros */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_SUPPORTS_ORDS \
	57, /* /behaviors/u_bt_sel_1 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_EXISTS 1
#define DT_N_INST_1_zmk_behavior_macro    DT_N_S_macros_S_u_macro_u_bt_sel_1
#define DT_N_NODELABEL_u_macro_u_bt_sel_1 DT_N_S_macros_S_u_macro_u_bt_sel_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_REG_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_RANGES_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_IRQ_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_0_VAL_param1 3
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_0_VAL_param2 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_1_VAL_param1 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, bindings, 0) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, bindings, 1)
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, bindings, 1, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_LEN 2
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_bindings_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_wait_ms 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_tap_ms 100
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_tap_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_label "ZM_u_macro_u_bt_sel_1"
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_label_STRING_TOKEN ZM_u_macro_u_bt_sel_1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_label_STRING_UPPER_TOKEN ZM_U_MACRO_U_BT_SEL_1
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 0) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 1) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 2) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 3) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 4) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 5) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 6) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 7) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 8) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 9) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 10) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 11) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 12) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 13) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 14) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 15) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 16) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 17) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 18) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 19) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 20)
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 10, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 11, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 12, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 13, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 14, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 15, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 16, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 17, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 18, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 19, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, label, 20, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_u_bt_sel_1_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_bt_sel_1
 *
 * Node identifier: DT_N_S_behaviors_S_u_bt_sel_1
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_bt_sel_1_PATH "/behaviors/u_bt_sel_1"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_bt_sel_1_FULL_NAME "u_bt_sel_1"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_bt_sel_1_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_bt_sel_1_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_bt_sel_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_bt_sel_1_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_bt_sel_1_REQUIRES_ORDS \
	19, /* /behaviors */ \
	27, /* /behaviors/behavior_bluetooth */ \
	56, /* /macros/u_macro_u_bt_sel_1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_bt_sel_1_SUPPORTS_ORDS \
	70, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_bt_sel_1_EXISTS 1
#define DT_N_INST_1_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_bt_sel_1
#define DT_N_NODELABEL_u_bt_sel_1          DT_N_S_behaviors_S_u_bt_sel_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_bt_sel_1_REG_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_1_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_1_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_1_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_1_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_bt_sel_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_bt_sel_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_IDX_0_VAL_param1 3
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_IDX_0_VAL_param2 1
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_IDX_1_PH DT_N_S_macros_S_u_macro_u_bt_sel_1
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_bt_sel_1, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, bindings, 1)
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_bt_sel_1, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_bt_sel_1_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_1_P_mods 34
#define DT_N_S_behaviors_S_u_bt_sel_1_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_1_P_label "u_bt_sel_1"
#define DT_N_S_behaviors_S_u_bt_sel_1_P_label_STRING_TOKEN u_bt_sel_1
#define DT_N_S_behaviors_S_u_bt_sel_1_P_label_STRING_UPPER_TOKEN U_BT_SEL_1
#define DT_N_S_behaviors_S_u_bt_sel_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 0) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 1) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 2) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 3) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 4) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 5) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 6) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 7) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 8) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 9)
#define DT_N_S_behaviors_S_u_bt_sel_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_1, label, 9, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_bt_sel_1_P_label_EXISTS 1

/*
 * Devicetree node: /macros/u_macro_u_bt_sel_2
 *
 * Node identifier: DT_N_S_macros_S_u_macro_u_bt_sel_2
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_PATH "/macros/u_macro_u_bt_sel_2"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_FULL_NAME "u_macro_u_bt_sel_2"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_PARENT DT_N_S_macros
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_REQUIRES_ORDS \
	27, /* /behaviors/behavior_bluetooth */ \
	28, /* /macros */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_SUPPORTS_ORDS \
	59, /* /behaviors/u_bt_sel_2 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_EXISTS 1
#define DT_N_INST_2_zmk_behavior_macro    DT_N_S_macros_S_u_macro_u_bt_sel_2
#define DT_N_NODELABEL_u_macro_u_bt_sel_2 DT_N_S_macros_S_u_macro_u_bt_sel_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_REG_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_RANGES_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_IRQ_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_0_VAL_param1 3
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_0_VAL_param2 2
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_1_VAL_param1 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, bindings, 0) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, bindings, 1)
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, bindings, 1, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_LEN 2
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_bindings_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_wait_ms 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_tap_ms 100
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_tap_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_label "ZM_u_macro_u_bt_sel_2"
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_label_STRING_TOKEN ZM_u_macro_u_bt_sel_2
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_label_STRING_UPPER_TOKEN ZM_U_MACRO_U_BT_SEL_2
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 0) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 1) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 2) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 3) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 4) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 5) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 6) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 7) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 8) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 9) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 10) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 11) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 12) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 13) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 14) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 15) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 16) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 17) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 18) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 19) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 20)
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 10, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 11, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 12, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 13, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 14, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 15, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 16, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 17, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 18, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 19, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, label, 20, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_u_bt_sel_2_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_bt_sel_2
 *
 * Node identifier: DT_N_S_behaviors_S_u_bt_sel_2
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_bt_sel_2_PATH "/behaviors/u_bt_sel_2"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_bt_sel_2_FULL_NAME "u_bt_sel_2"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_bt_sel_2_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_bt_sel_2_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_bt_sel_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_bt_sel_2_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_bt_sel_2_REQUIRES_ORDS \
	19, /* /behaviors */ \
	27, /* /behaviors/behavior_bluetooth */ \
	58, /* /macros/u_macro_u_bt_sel_2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_bt_sel_2_SUPPORTS_ORDS \
	70, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_bt_sel_2_EXISTS 1
#define DT_N_INST_2_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_bt_sel_2
#define DT_N_NODELABEL_u_bt_sel_2          DT_N_S_behaviors_S_u_bt_sel_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_bt_sel_2_REG_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_2_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_2_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_2_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_2_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_bt_sel_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_bt_sel_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_IDX_0_VAL_param1 3
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_IDX_0_VAL_param2 2
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_IDX_1_PH DT_N_S_macros_S_u_macro_u_bt_sel_2
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_bt_sel_2, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, bindings, 1)
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_bt_sel_2, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_bt_sel_2_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_2_P_mods 34
#define DT_N_S_behaviors_S_u_bt_sel_2_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_2_P_label "u_bt_sel_2"
#define DT_N_S_behaviors_S_u_bt_sel_2_P_label_STRING_TOKEN u_bt_sel_2
#define DT_N_S_behaviors_S_u_bt_sel_2_P_label_STRING_UPPER_TOKEN U_BT_SEL_2
#define DT_N_S_behaviors_S_u_bt_sel_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 0) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 1) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 2) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 3) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 4) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 5) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 6) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 7) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 8) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 9)
#define DT_N_S_behaviors_S_u_bt_sel_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_2, label, 9, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_bt_sel_2_P_label_EXISTS 1

/*
 * Devicetree node: /macros/u_macro_u_bt_sel_3
 *
 * Node identifier: DT_N_S_macros_S_u_macro_u_bt_sel_3
 *
 * Binding (compatible = zmk,behavior-macro):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-macro.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_PATH "/macros/u_macro_u_bt_sel_3"

/* Node's name with unit-address: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_FULL_NAME "u_macro_u_bt_sel_3"

/* Node parent (/macros) identifier: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_PARENT DT_N_S_macros
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_FOREACH_CHILD(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_REQUIRES_ORDS \
	27, /* /behaviors/behavior_bluetooth */ \
	28, /* /macros */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_SUPPORTS_ORDS \
	61, /* /behaviors/u_bt_sel_3 */

/* Existence and alternate IDs: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_EXISTS 1
#define DT_N_INST_3_zmk_behavior_macro    DT_N_S_macros_S_u_macro_u_bt_sel_3
#define DT_N_NODELABEL_u_macro_u_bt_sel_3 DT_N_S_macros_S_u_macro_u_bt_sel_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_REG_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_RANGES_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_FOREACH_RANGE(fn) 
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_IRQ_NUM 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_COMPAT_MATCHES_zmk_behavior_macro 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_0_VAL_param1 3
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_0_VAL_param2 3
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_1_VAL_param1 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, bindings, 0) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, bindings, 1)
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, bindings, 1, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_LEN 2
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_bindings_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_wait_ms 0
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_wait_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_tap_ms 100
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_tap_ms_EXISTS 1
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_label "ZM_u_macro_u_bt_sel_3"
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_label_STRING_TOKEN ZM_u_macro_u_bt_sel_3
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_label_STRING_UPPER_TOKEN ZM_U_MACRO_U_BT_SEL_3
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 0) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 1) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 2) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 3) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 4) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 5) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 6) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 7) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 8) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 9) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 10) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 11) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 12) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 13) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 14) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 15) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 16) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 17) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 18) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 19) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 20)
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 0, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 1, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 2, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 3, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 4, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 5, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 6, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 7, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 8, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 9, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 10, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 11, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 12, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 13, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 14, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 15, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 16, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 17, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 18, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 19, __VA_ARGS__) \
	fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, label, 20, __VA_ARGS__)
#define DT_N_S_macros_S_u_macro_u_bt_sel_3_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_bt_sel_3
 *
 * Node identifier: DT_N_S_behaviors_S_u_bt_sel_3
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_bt_sel_3_PATH "/behaviors/u_bt_sel_3"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_bt_sel_3_FULL_NAME "u_bt_sel_3"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_bt_sel_3_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_bt_sel_3_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_bt_sel_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_bt_sel_3_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_bt_sel_3_REQUIRES_ORDS \
	19, /* /behaviors */ \
	27, /* /behaviors/behavior_bluetooth */ \
	60, /* /macros/u_macro_u_bt_sel_3 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_bt_sel_3_SUPPORTS_ORDS \
	70, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_bt_sel_3_EXISTS 1
#define DT_N_INST_3_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_bt_sel_3
#define DT_N_NODELABEL_u_bt_sel_3          DT_N_S_behaviors_S_u_bt_sel_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_bt_sel_3_REG_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_3_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_3_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_bt_sel_3_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_bt_sel_3_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_bt_sel_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_bt_sel_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_bluetooth
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_IDX_0_VAL_param1 3
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_IDX_0_VAL_param2 3
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_IDX_1_PH DT_N_S_macros_S_u_macro_u_bt_sel_3
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_bt_sel_3, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, bindings, 1)
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_bt_sel_3, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_bt_sel_3_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_3_P_mods 34
#define DT_N_S_behaviors_S_u_bt_sel_3_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_bt_sel_3_P_label "u_bt_sel_3"
#define DT_N_S_behaviors_S_u_bt_sel_3_P_label_STRING_TOKEN u_bt_sel_3
#define DT_N_S_behaviors_S_u_bt_sel_3_P_label_STRING_UPPER_TOKEN U_BT_SEL_3
#define DT_N_S_behaviors_S_u_bt_sel_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 0) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 1) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 2) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 3) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 4) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 5) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 6) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 7) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 8) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 9)
#define DT_N_S_behaviors_S_u_bt_sel_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 8, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_bt_sel_3, label, 9, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_bt_sel_3_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_ext_power
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_ext_power
 *
 * Binding (compatible = zmk,behavior-ext-power):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-ext-power.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_ext_power_PATH "/behaviors/behavior_ext_power"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_ext_power_FULL_NAME "behavior_ext_power"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_ext_power_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_ext_power_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_ext_power_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_ext_power_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_ext_power_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_ext_power_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_ext_power_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_ext_power_SUPPORTS_ORDS \
	63, /* /behaviors/u_ep_tog */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_ext_power_EXISTS 1
#define DT_N_INST_0_zmk_behavior_ext_power DT_N_S_behaviors_S_behavior_ext_power
#define DT_N_NODELABEL_ext_power           DT_N_S_behaviors_S_behavior_ext_power

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_ext_power_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_ext_power_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_ext_power_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_ext_power_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_ext_power_COMPAT_MATCHES_zmk_behavior_ext_power 1
#define DT_N_S_behaviors_S_behavior_ext_power_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_ext_power_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_ext_power_P_label "EXTPOWER"
#define DT_N_S_behaviors_S_behavior_ext_power_P_label_STRING_TOKEN EXTPOWER
#define DT_N_S_behaviors_S_behavior_ext_power_P_label_STRING_UPPER_TOKEN EXTPOWER
#define DT_N_S_behaviors_S_behavior_ext_power_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_ext_power, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 3) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 4) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 5) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 6) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 7)
#define DT_N_S_behaviors_S_behavior_ext_power_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_ext_power, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_ext_power, label, 7, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_ext_power_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_ep_tog
 *
 * Node identifier: DT_N_S_behaviors_S_u_ep_tog
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_ep_tog_PATH "/behaviors/u_ep_tog"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_ep_tog_FULL_NAME "u_ep_tog"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_ep_tog_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_ep_tog_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_ep_tog_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_ep_tog_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_ep_tog_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_ep_tog_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_ep_tog_REQUIRES_ORDS \
	19, /* /behaviors */ \
	62, /* /behaviors/behavior_ext_power */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_ep_tog_SUPPORTS_ORDS \
	70, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_ep_tog_EXISTS 1
#define DT_N_INST_10_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_ep_tog
#define DT_N_NODELABEL_u_ep_tog             DT_N_S_behaviors_S_u_ep_tog

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_ep_tog_REG_NUM 0
#define DT_N_S_behaviors_S_u_ep_tog_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_ep_tog_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_ep_tog_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_ep_tog_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_ep_tog_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_ep_tog_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_ext_power
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_IDX_0_VAL_param1 2
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_ext_power
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_IDX_1_VAL_param1 0
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_ep_tog, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_ep_tog, bindings, 1)
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_ep_tog, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_ep_tog, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_ep_tog_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_ep_tog_P_mods 34
#define DT_N_S_behaviors_S_u_ep_tog_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_ep_tog_P_label "u_ep_tog"
#define DT_N_S_behaviors_S_u_ep_tog_P_label_STRING_TOKEN u_ep_tog
#define DT_N_S_behaviors_S_u_ep_tog_P_label_STRING_UPPER_TOKEN U_EP_TOG
#define DT_N_S_behaviors_S_u_ep_tog_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_ep_tog, label, 0) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 1) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 2) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 3) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 4) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 5) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 6) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 7)
#define DT_N_S_behaviors_S_u_ep_tog_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_ep_tog, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_ep_tog, label, 7, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_ep_tog_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_outputs
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_outputs
 *
 * Binding (compatible = zmk,behavior-outputs):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-outputs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_outputs_PATH "/behaviors/behavior_outputs"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_behavior_outputs_FULL_NAME "behavior_outputs"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_outputs_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_outputs_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_behavior_outputs_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_behavior_outputs_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_behavior_outputs_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_outputs_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_outputs_REQUIRES_ORDS \
	19, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_outputs_SUPPORTS_ORDS \
	65, /* /behaviors/u_out_tog */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_outputs_EXISTS 1
#define DT_N_INST_0_zmk_behavior_outputs DT_N_S_behaviors_S_behavior_outputs
#define DT_N_NODELABEL_out               DT_N_S_behaviors_S_behavior_outputs

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_behavior_outputs_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_outputs_RANGES_NUM 0
#define DT_N_S_behaviors_S_behavior_outputs_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_behavior_outputs_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_outputs_COMPAT_MATCHES_zmk_behavior_outputs 1
#define DT_N_S_behaviors_S_behavior_outputs_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_behavior_outputs_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_outputs_P_label "OUTPUTS"
#define DT_N_S_behaviors_S_behavior_outputs_P_label_STRING_TOKEN OUTPUTS
#define DT_N_S_behaviors_S_behavior_outputs_P_label_STRING_UPPER_TOKEN OUTPUTS
#define DT_N_S_behaviors_S_behavior_outputs_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_behavior_outputs, label, 0) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 1) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 2) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 3) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 4) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 5) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 6)
#define DT_N_S_behaviors_S_behavior_outputs_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_behavior_outputs, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_behavior_outputs, label, 6, __VA_ARGS__)
#define DT_N_S_behaviors_S_behavior_outputs_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_out_tog
 *
 * Node identifier: DT_N_S_behaviors_S_u_out_tog
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_out_tog_PATH "/behaviors/u_out_tog"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_out_tog_FULL_NAME "u_out_tog"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_out_tog_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_out_tog_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_out_tog_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_out_tog_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_out_tog_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_out_tog_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_out_tog_REQUIRES_ORDS \
	19, /* /behaviors */ \
	64, /* /behaviors/behavior_outputs */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_out_tog_SUPPORTS_ORDS \
	70, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_out_tog_EXISTS 1
#define DT_N_INST_5_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_out_tog
#define DT_N_NODELABEL_u_out_tog           DT_N_S_behaviors_S_u_out_tog

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_out_tog_REG_NUM 0
#define DT_N_S_behaviors_S_u_out_tog_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_out_tog_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_out_tog_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_out_tog_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_out_tog_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_out_tog_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_outputs
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_IDX_0_VAL_param1 0
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_outputs
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_IDX_1_VAL_param1 1
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_out_tog, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_out_tog, bindings, 1)
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_out_tog, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_out_tog, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_out_tog_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_out_tog_P_mods 34
#define DT_N_S_behaviors_S_u_out_tog_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_out_tog_P_label "u_out_tog"
#define DT_N_S_behaviors_S_u_out_tog_P_label_STRING_TOKEN u_out_tog
#define DT_N_S_behaviors_S_u_out_tog_P_label_STRING_UPPER_TOKEN U_OUT_TOG
#define DT_N_S_behaviors_S_u_out_tog_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_out_tog, label, 0) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 1) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 2) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 3) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 4) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 5) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 6) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 7) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 8)
#define DT_N_S_behaviors_S_u_out_tog_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_out_tog, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_out_tog, label, 8, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_out_tog_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_rgb_bri
 *
 * Node identifier: DT_N_S_behaviors_S_u_rgb_bri
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_rgb_bri_PATH "/behaviors/u_rgb_bri"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_rgb_bri_FULL_NAME "u_rgb_bri"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_rgb_bri_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_rgb_bri_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_rgb_bri_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_rgb_bri_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_rgb_bri_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_rgb_bri_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_rgb_bri_REQUIRES_ORDS \
	19, /* /behaviors */ \
	53, /* /behaviors/behavior_rgb_underglow */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_rgb_bri_SUPPORTS_ORDS \
	70, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_rgb_bri_EXISTS 1
#define DT_N_INST_9_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_rgb_bri
#define DT_N_NODELABEL_u_rgb_bri           DT_N_S_behaviors_S_u_rgb_bri

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_rgb_bri_REG_NUM 0
#define DT_N_S_behaviors_S_u_rgb_bri_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_rgb_bri_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_rgb_bri_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_rgb_bri_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_rgb_bri_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_rgb_bri_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_0_VAL_param1 7
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_0_VAL_param2 0
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_1_VAL_param1 8
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_rgb_bri, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, bindings, 1)
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_rgb_bri, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_rgb_bri_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_bri_P_mods 34
#define DT_N_S_behaviors_S_u_rgb_bri_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_bri_P_label "u_rgb_bri"
#define DT_N_S_behaviors_S_u_rgb_bri_P_label_STRING_TOKEN u_rgb_bri
#define DT_N_S_behaviors_S_u_rgb_bri_P_label_STRING_UPPER_TOKEN U_RGB_BRI
#define DT_N_S_behaviors_S_u_rgb_bri_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_rgb_bri, label, 0) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 1) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 2) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 3) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 4) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 5) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 6) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 7) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 8)
#define DT_N_S_behaviors_S_u_rgb_bri_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_rgb_bri, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_bri, label, 8, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_rgb_bri_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_rgb_eff
 *
 * Node identifier: DT_N_S_behaviors_S_u_rgb_eff
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_rgb_eff_PATH "/behaviors/u_rgb_eff"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_rgb_eff_FULL_NAME "u_rgb_eff"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_rgb_eff_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_rgb_eff_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_rgb_eff_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_rgb_eff_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_rgb_eff_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_rgb_eff_ORD 67

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_rgb_eff_REQUIRES_ORDS \
	19, /* /behaviors */ \
	53, /* /behaviors/behavior_rgb_underglow */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_rgb_eff_SUPPORTS_ORDS \
	70, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_rgb_eff_EXISTS 1
#define DT_N_INST_6_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_rgb_eff
#define DT_N_NODELABEL_u_rgb_eff           DT_N_S_behaviors_S_u_rgb_eff

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_rgb_eff_REG_NUM 0
#define DT_N_S_behaviors_S_u_rgb_eff_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_rgb_eff_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_rgb_eff_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_rgb_eff_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_rgb_eff_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_rgb_eff_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_0_VAL_param1 11
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_0_VAL_param2 0
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_1_VAL_param1 12
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_rgb_eff, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, bindings, 1)
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_rgb_eff, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_rgb_eff_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_eff_P_mods 34
#define DT_N_S_behaviors_S_u_rgb_eff_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_eff_P_label "u_rgb_eff"
#define DT_N_S_behaviors_S_u_rgb_eff_P_label_STRING_TOKEN u_rgb_eff
#define DT_N_S_behaviors_S_u_rgb_eff_P_label_STRING_UPPER_TOKEN U_RGB_EFF
#define DT_N_S_behaviors_S_u_rgb_eff_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_rgb_eff, label, 0) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 1) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 2) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 3) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 4) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 5) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 6) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 7) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 8)
#define DT_N_S_behaviors_S_u_rgb_eff_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_rgb_eff, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_eff, label, 8, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_rgb_eff_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_rgb_hui
 *
 * Node identifier: DT_N_S_behaviors_S_u_rgb_hui
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_rgb_hui_PATH "/behaviors/u_rgb_hui"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_rgb_hui_FULL_NAME "u_rgb_hui"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_rgb_hui_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_rgb_hui_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_rgb_hui_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_rgb_hui_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_rgb_hui_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_rgb_hui_ORD 68

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_rgb_hui_REQUIRES_ORDS \
	19, /* /behaviors */ \
	53, /* /behaviors/behavior_rgb_underglow */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_rgb_hui_SUPPORTS_ORDS \
	70, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_rgb_hui_EXISTS 1
#define DT_N_INST_7_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_rgb_hui
#define DT_N_NODELABEL_u_rgb_hui           DT_N_S_behaviors_S_u_rgb_hui

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_rgb_hui_REG_NUM 0
#define DT_N_S_behaviors_S_u_rgb_hui_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_rgb_hui_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_rgb_hui_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_rgb_hui_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_rgb_hui_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_rgb_hui_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_0_VAL_param1 3
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_0_VAL_param2 0
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_1_VAL_param1 4
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_rgb_hui, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, bindings, 1)
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_rgb_hui, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_rgb_hui_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_hui_P_mods 34
#define DT_N_S_behaviors_S_u_rgb_hui_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_hui_P_label "u_rgb_hui"
#define DT_N_S_behaviors_S_u_rgb_hui_P_label_STRING_TOKEN u_rgb_hui
#define DT_N_S_behaviors_S_u_rgb_hui_P_label_STRING_UPPER_TOKEN U_RGB_HUI
#define DT_N_S_behaviors_S_u_rgb_hui_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_rgb_hui, label, 0) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 1) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 2) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 3) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 4) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 5) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 6) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 7) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 8)
#define DT_N_S_behaviors_S_u_rgb_hui_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_rgb_hui, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_hui, label, 8, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_rgb_hui_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/u_rgb_sai
 *
 * Node identifier: DT_N_S_behaviors_S_u_rgb_sai
 *
 * Binding (compatible = zmk,behavior-mod-morph):
 *   /Users/qilewang/GithubRepos/Keyboards/zmk/app/dts/bindings/behaviors/zmk,behavior-mod-morph.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_u_rgb_sai_PATH "/behaviors/u_rgb_sai"

/* Node's name with unit-address: */
#define DT_N_S_behaviors_S_u_rgb_sai_FULL_NAME "u_rgb_sai"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_u_rgb_sai_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_u_rgb_sai_FOREACH_CHILD(fn) 
#define DT_N_S_behaviors_S_u_rgb_sai_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_behaviors_S_u_rgb_sai_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_behaviors_S_u_rgb_sai_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_u_rgb_sai_ORD 69

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_u_rgb_sai_REQUIRES_ORDS \
	19, /* /behaviors */ \
	53, /* /behaviors/behavior_rgb_underglow */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_u_rgb_sai_SUPPORTS_ORDS \
	70, /* /keymap/6 */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_u_rgb_sai_EXISTS 1
#define DT_N_INST_8_zmk_behavior_mod_morph DT_N_S_behaviors_S_u_rgb_sai
#define DT_N_NODELABEL_u_rgb_sai           DT_N_S_behaviors_S_u_rgb_sai

/* Macros for properties that are special in the specification: */
#define DT_N_S_behaviors_S_u_rgb_sai_REG_NUM 0
#define DT_N_S_behaviors_S_u_rgb_sai_RANGES_NUM 0
#define DT_N_S_behaviors_S_u_rgb_sai_FOREACH_RANGE(fn) 
#define DT_N_S_behaviors_S_u_rgb_sai_IRQ_NUM 0
#define DT_N_S_behaviors_S_u_rgb_sai_COMPAT_MATCHES_zmk_behavior_mod_morph 1
#define DT_N_S_behaviors_S_u_rgb_sai_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_behaviors_S_u_rgb_sai_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_0_VAL_param1 5
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_0_VAL_param2 0
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_1_VAL_param1 6
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_1_VAL_param2 0
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_IDX_1_VAL_param2_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_rgb_sai, bindings, 0) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, bindings, 1)
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_rgb_sai, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, bindings, 1, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_LEN 2
#define DT_N_S_behaviors_S_u_rgb_sai_P_bindings_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_sai_P_mods 34
#define DT_N_S_behaviors_S_u_rgb_sai_P_mods_EXISTS 1
#define DT_N_S_behaviors_S_u_rgb_sai_P_label "u_rgb_sai"
#define DT_N_S_behaviors_S_u_rgb_sai_P_label_STRING_TOKEN u_rgb_sai
#define DT_N_S_behaviors_S_u_rgb_sai_P_label_STRING_UPPER_TOKEN U_RGB_SAI
#define DT_N_S_behaviors_S_u_rgb_sai_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_behaviors_S_u_rgb_sai, label, 0) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 1) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 2) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 3) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 4) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 5) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 6) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 7) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 8)
#define DT_N_S_behaviors_S_u_rgb_sai_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_behaviors_S_u_rgb_sai, label, 0, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 1, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 2, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 3, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 4, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 5, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 6, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 7, __VA_ARGS__) \
	fn(DT_N_S_behaviors_S_u_rgb_sai, label, 8, __VA_ARGS__)
#define DT_N_S_behaviors_S_u_rgb_sai_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/6
 *
 * Node identifier: DT_N_S_keymap_S_6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_6_PATH "/keymap/6"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_6_FULL_NAME "6"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_6_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_6_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_6_ORD 70

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_6_REQUIRES_ORDS \
	33, /* /keymap */ \
	34, /* /behaviors/behavior_key_press */ \
	37, /* /behaviors/behavior_none */ \
	38, /* /behaviors/behavior_sensor_rotate_key_press */ \
	47, /* /behaviors/behavior_reset_dfu */ \
	48, /* /behaviors/behavior_to_layer */ \
	53, /* /behaviors/behavior_rgb_underglow */ \
	55, /* /behaviors/u_bt_sel_0 */ \
	57, /* /behaviors/u_bt_sel_1 */ \
	59, /* /behaviors/u_bt_sel_2 */ \
	61, /* /behaviors/u_bt_sel_3 */ \
	63, /* /behaviors/u_ep_tog */ \
	65, /* /behaviors/u_out_tog */ \
	66, /* /behaviors/u_rgb_bri */ \
	67, /* /behaviors/u_rgb_eff */ \
	68, /* /behaviors/u_rgb_hui */ \
	69, /* /behaviors/u_rgb_sai */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_6_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_6_REG_NUM 0
#define DT_N_S_keymap_S_6_RANGES_NUM 0
#define DT_N_S_keymap_S_6_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_6_IRQ_NUM 0
#define DT_N_S_keymap_S_6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_6_P_label "Media"
#define DT_N_S_keymap_S_6_P_label_STRING_TOKEN Media
#define DT_N_S_keymap_S_6_P_label_STRING_UPPER_TOKEN MEDIA
#define DT_N_S_keymap_S_6_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_6, label, 0) \
	fn(DT_N_S_keymap_S_6, label, 1) \
	fn(DT_N_S_keymap_S_6, label, 2) \
	fn(DT_N_S_keymap_S_6, label, 3) \
	fn(DT_N_S_keymap_S_6, label, 4)
#define DT_N_S_keymap_S_6_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_6, label, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, label, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, label, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, label, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, label, 4, __VA_ARGS__)
#define DT_N_S_keymap_S_6_P_label_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_reset_dfu
#define DT_N_S_keymap_S_6_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_6_P_bindings_IDX_14_VAL_param1 2
#define DT_N_S_keymap_S_6_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_6_P_bindings_IDX_15_VAL_param1 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_6_P_bindings_IDX_16_VAL_param1 0
#define DT_N_S_keymap_S_6_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_S_keymap_S_6_P_bindings_IDX_18_VAL_param1 0
#define DT_N_S_keymap_S_6_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_18_VAL_param2 0
#define DT_N_S_keymap_S_6_P_bindings_IDX_18_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_19_PH DT_N_S_behaviors_S_u_rgb_eff
#define DT_N_S_keymap_S_6_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_20_PH DT_N_S_behaviors_S_u_rgb_hui
#define DT_N_S_keymap_S_6_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_21_PH DT_N_S_behaviors_S_u_rgb_sai
#define DT_N_S_keymap_S_6_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_22_PH DT_N_S_behaviors_S_u_rgb_bri
#define DT_N_S_keymap_S_6_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_25_VAL_param1 458979
#define DT_N_S_keymap_S_6_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_26_VAL_param1 458978
#define DT_N_S_keymap_S_6_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_27_VAL_param1 458976
#define DT_N_S_keymap_S_6_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_28_VAL_param1 458977
#define DT_N_S_keymap_S_6_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_30_PH DT_N_S_behaviors_S_u_ep_tog
#define DT_N_S_keymap_S_6_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_31_VAL_param1 786614
#define DT_N_S_keymap_S_6_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_32_VAL_param1 786666
#define DT_N_S_keymap_S_6_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_33_VAL_param1 786665
#define DT_N_S_keymap_S_6_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_34_VAL_param1 786613
#define DT_N_S_keymap_S_6_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_38_VAL_param1 458982
#define DT_N_S_keymap_S_6_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_6_P_bindings_IDX_39_VAL_param1 9
#define DT_N_S_keymap_S_6_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_6_P_bindings_IDX_40_VAL_param1 6
#define DT_N_S_keymap_S_6_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_42_PH DT_N_S_behaviors_S_u_out_tog
#define DT_N_S_keymap_S_6_P_bindings_IDX_43_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_43_PH DT_N_S_behaviors_S_u_bt_sel_0
#define DT_N_S_keymap_S_6_P_bindings_IDX_44_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_44_PH DT_N_S_behaviors_S_u_bt_sel_1
#define DT_N_S_keymap_S_6_P_bindings_IDX_45_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_45_PH DT_N_S_behaviors_S_u_bt_sel_2
#define DT_N_S_keymap_S_6_P_bindings_IDX_46_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_46_PH DT_N_S_behaviors_S_u_bt_sel_3
#define DT_N_S_keymap_S_6_P_bindings_IDX_47_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_47_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_48_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_48_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_49_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_49_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_50_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_50_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_51_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_51_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_52_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_52_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_53_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_53_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_IDX_54_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_54_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_54_VAL_param1 786615
#define DT_N_S_keymap_S_6_P_bindings_IDX_54_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_55_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_55_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_55_VAL_param1 786637
#define DT_N_S_keymap_S_6_P_bindings_IDX_55_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_56_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_56_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_6_P_bindings_IDX_56_VAL_param1 786658
#define DT_N_S_keymap_S_6_P_bindings_IDX_56_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_57_EXISTS 1
#define DT_N_S_keymap_S_6_P_bindings_IDX_57_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_6_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_6, bindings, 0) \
	fn(DT_N_S_keymap_S_6, bindings, 1) \
	fn(DT_N_S_keymap_S_6, bindings, 2) \
	fn(DT_N_S_keymap_S_6, bindings, 3) \
	fn(DT_N_S_keymap_S_6, bindings, 4) \
	fn(DT_N_S_keymap_S_6, bindings, 5) \
	fn(DT_N_S_keymap_S_6, bindings, 6) \
	fn(DT_N_S_keymap_S_6, bindings, 7) \
	fn(DT_N_S_keymap_S_6, bindings, 8) \
	fn(DT_N_S_keymap_S_6, bindings, 9) \
	fn(DT_N_S_keymap_S_6, bindings, 10) \
	fn(DT_N_S_keymap_S_6, bindings, 11) \
	fn(DT_N_S_keymap_S_6, bindings, 12) \
	fn(DT_N_S_keymap_S_6, bindings, 13) \
	fn(DT_N_S_keymap_S_6, bindings, 14) \
	fn(DT_N_S_keymap_S_6, bindings, 15) \
	fn(DT_N_S_keymap_S_6, bindings, 16) \
	fn(DT_N_S_keymap_S_6, bindings, 17) \
	fn(DT_N_S_keymap_S_6, bindings, 18) \
	fn(DT_N_S_keymap_S_6, bindings, 19) \
	fn(DT_N_S_keymap_S_6, bindings, 20) \
	fn(DT_N_S_keymap_S_6, bindings, 21) \
	fn(DT_N_S_keymap_S_6, bindings, 22) \
	fn(DT_N_S_keymap_S_6, bindings, 23) \
	fn(DT_N_S_keymap_S_6, bindings, 24) \
	fn(DT_N_S_keymap_S_6, bindings, 25) \
	fn(DT_N_S_keymap_S_6, bindings, 26) \
	fn(DT_N_S_keymap_S_6, bindings, 27) \
	fn(DT_N_S_keymap_S_6, bindings, 28) \
	fn(DT_N_S_keymap_S_6, bindings, 29) \
	fn(DT_N_S_keymap_S_6, bindings, 30) \
	fn(DT_N_S_keymap_S_6, bindings, 31) \
	fn(DT_N_S_keymap_S_6, bindings, 32) \
	fn(DT_N_S_keymap_S_6, bindings, 33) \
	fn(DT_N_S_keymap_S_6, bindings, 34) \
	fn(DT_N_S_keymap_S_6, bindings, 35) \
	fn(DT_N_S_keymap_S_6, bindings, 36) \
	fn(DT_N_S_keymap_S_6, bindings, 37) \
	fn(DT_N_S_keymap_S_6, bindings, 38) \
	fn(DT_N_S_keymap_S_6, bindings, 39) \
	fn(DT_N_S_keymap_S_6, bindings, 40) \
	fn(DT_N_S_keymap_S_6, bindings, 41) \
	fn(DT_N_S_keymap_S_6, bindings, 42) \
	fn(DT_N_S_keymap_S_6, bindings, 43) \
	fn(DT_N_S_keymap_S_6, bindings, 44) \
	fn(DT_N_S_keymap_S_6, bindings, 45) \
	fn(DT_N_S_keymap_S_6, bindings, 46) \
	fn(DT_N_S_keymap_S_6, bindings, 47) \
	fn(DT_N_S_keymap_S_6, bindings, 48) \
	fn(DT_N_S_keymap_S_6, bindings, 49) \
	fn(DT_N_S_keymap_S_6, bindings, 50) \
	fn(DT_N_S_keymap_S_6, bindings, 51) \
	fn(DT_N_S_keymap_S_6, bindings, 52) \
	fn(DT_N_S_keymap_S_6, bindings, 53) \
	fn(DT_N_S_keymap_S_6, bindings, 54) \
	fn(DT_N_S_keymap_S_6, bindings, 55) \
	fn(DT_N_S_keymap_S_6, bindings, 56) \
	fn(DT_N_S_keymap_S_6, bindings, 57)
#define DT_N_S_keymap_S_6_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_6, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 37, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 38, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 39, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 40, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 41, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 42, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 43, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 44, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 45, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 46, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 47, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 48, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 49, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 50, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 51, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 52, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 53, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 54, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 55, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 56, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_6, bindings, 57, __VA_ARGS__)
#define DT_N_S_keymap_S_6_P_bindings_LEN 58
#define DT_N_S_keymap_S_6_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_6_P_sensor_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_6_P_sensor_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_S_keymap_S_6_P_sensor_bindings_IDX_0_VAL_param1 458832
#define DT_N_S_keymap_S_6_P_sensor_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_6_P_sensor_bindings_IDX_0_VAL_param2 458831
#define DT_N_S_keymap_S_6_P_sensor_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_6_P_sensor_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_6, sensor_bindings, 0)
#define DT_N_S_keymap_S_6_P_sensor_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_6, sensor_bindings, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_6_P_sensor_bindings_LEN 1
#define DT_N_S_keymap_S_6_P_sensor_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/7
 *
 * Node identifier: DT_N_S_keymap_S_7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_7_PATH "/keymap/7"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_7_FULL_NAME "7"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_7_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_7_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_7_ORD 71

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_7_REQUIRES_ORDS \
	33, /* /keymap */ \
	34, /* /behaviors/behavior_key_press */ \
	37, /* /behaviors/behavior_none */ \
	38, /* /behaviors/behavior_sensor_rotate_key_press */ \
	47, /* /behaviors/behavior_reset_dfu */ \
	48, /* /behaviors/behavior_to_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_7_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_7_REG_NUM 0
#define DT_N_S_keymap_S_7_RANGES_NUM 0
#define DT_N_S_keymap_S_7_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_7_IRQ_NUM 0
#define DT_N_S_keymap_S_7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_7_P_label "Num"
#define DT_N_S_keymap_S_7_P_label_STRING_TOKEN Num
#define DT_N_S_keymap_S_7_P_label_STRING_UPPER_TOKEN NUM
#define DT_N_S_keymap_S_7_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_7, label, 0) \
	fn(DT_N_S_keymap_S_7, label, 1) \
	fn(DT_N_S_keymap_S_7, label, 2)
#define DT_N_S_keymap_S_7_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_7, label, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, label, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, label, 2, __VA_ARGS__)
#define DT_N_S_keymap_S_7_P_label_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_13_VAL_param1 458799
#define DT_N_S_keymap_S_7_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_14_VAL_param1 458788
#define DT_N_S_keymap_S_7_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_15_VAL_param1 458789
#define DT_N_S_keymap_S_7_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_16_VAL_param1 458790
#define DT_N_S_keymap_S_7_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_17_VAL_param1 458800
#define DT_N_S_keymap_S_7_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_7_P_bindings_IDX_19_VAL_param1 0
#define DT_N_S_keymap_S_7_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_7_P_bindings_IDX_20_VAL_param1 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_7_P_bindings_IDX_21_VAL_param1 2
#define DT_N_S_keymap_S_7_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_reset_dfu
#define DT_N_S_keymap_S_7_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_25_VAL_param1 458803
#define DT_N_S_keymap_S_7_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_26_VAL_param1 458785
#define DT_N_S_keymap_S_7_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_27_VAL_param1 458786
#define DT_N_S_keymap_S_7_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_28_VAL_param1 458787
#define DT_N_S_keymap_S_7_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_29_VAL_param1 458798
#define DT_N_S_keymap_S_7_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_31_VAL_param1 458977
#define DT_N_S_keymap_S_7_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_32_VAL_param1 458976
#define DT_N_S_keymap_S_7_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_33_VAL_param1 458978
#define DT_N_S_keymap_S_7_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_7_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_37_VAL_param1 458805
#define DT_N_S_keymap_S_7_P_bindings_IDX_37_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_38_VAL_param1 458782
#define DT_N_S_keymap_S_7_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_39_VAL_param1 458783
#define DT_N_S_keymap_S_7_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_40_VAL_param1 458784
#define DT_N_S_keymap_S_7_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_41_VAL_param1 458801
#define DT_N_S_keymap_S_7_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_42_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_43_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_43_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_7_P_bindings_IDX_43_VAL_param1 7
#define DT_N_S_keymap_S_7_P_bindings_IDX_43_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_44_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_44_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_7_P_bindings_IDX_44_VAL_param1 4
#define DT_N_S_keymap_S_7_P_bindings_IDX_44_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_45_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_45_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_45_VAL_param1 458982
#define DT_N_S_keymap_S_7_P_bindings_IDX_45_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_46_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_46_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_47_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_47_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_48_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_48_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_49_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_49_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_49_VAL_param1 458807
#define DT_N_S_keymap_S_7_P_bindings_IDX_49_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_50_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_50_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_50_VAL_param1 458791
#define DT_N_S_keymap_S_7_P_bindings_IDX_50_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_51_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_51_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_7_P_bindings_IDX_51_VAL_param1 458797
#define DT_N_S_keymap_S_7_P_bindings_IDX_51_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_52_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_52_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_53_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_53_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_54_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_54_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_55_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_55_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_56_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_56_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_IDX_57_EXISTS 1
#define DT_N_S_keymap_S_7_P_bindings_IDX_57_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_7_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_7, bindings, 0) \
	fn(DT_N_S_keymap_S_7, bindings, 1) \
	fn(DT_N_S_keymap_S_7, bindings, 2) \
	fn(DT_N_S_keymap_S_7, bindings, 3) \
	fn(DT_N_S_keymap_S_7, bindings, 4) \
	fn(DT_N_S_keymap_S_7, bindings, 5) \
	fn(DT_N_S_keymap_S_7, bindings, 6) \
	fn(DT_N_S_keymap_S_7, bindings, 7) \
	fn(DT_N_S_keymap_S_7, bindings, 8) \
	fn(DT_N_S_keymap_S_7, bindings, 9) \
	fn(DT_N_S_keymap_S_7, bindings, 10) \
	fn(DT_N_S_keymap_S_7, bindings, 11) \
	fn(DT_N_S_keymap_S_7, bindings, 12) \
	fn(DT_N_S_keymap_S_7, bindings, 13) \
	fn(DT_N_S_keymap_S_7, bindings, 14) \
	fn(DT_N_S_keymap_S_7, bindings, 15) \
	fn(DT_N_S_keymap_S_7, bindings, 16) \
	fn(DT_N_S_keymap_S_7, bindings, 17) \
	fn(DT_N_S_keymap_S_7, bindings, 18) \
	fn(DT_N_S_keymap_S_7, bindings, 19) \
	fn(DT_N_S_keymap_S_7, bindings, 20) \
	fn(DT_N_S_keymap_S_7, bindings, 21) \
	fn(DT_N_S_keymap_S_7, bindings, 22) \
	fn(DT_N_S_keymap_S_7, bindings, 23) \
	fn(DT_N_S_keymap_S_7, bindings, 24) \
	fn(DT_N_S_keymap_S_7, bindings, 25) \
	fn(DT_N_S_keymap_S_7, bindings, 26) \
	fn(DT_N_S_keymap_S_7, bindings, 27) \
	fn(DT_N_S_keymap_S_7, bindings, 28) \
	fn(DT_N_S_keymap_S_7, bindings, 29) \
	fn(DT_N_S_keymap_S_7, bindings, 30) \
	fn(DT_N_S_keymap_S_7, bindings, 31) \
	fn(DT_N_S_keymap_S_7, bindings, 32) \
	fn(DT_N_S_keymap_S_7, bindings, 33) \
	fn(DT_N_S_keymap_S_7, bindings, 34) \
	fn(DT_N_S_keymap_S_7, bindings, 35) \
	fn(DT_N_S_keymap_S_7, bindings, 36) \
	fn(DT_N_S_keymap_S_7, bindings, 37) \
	fn(DT_N_S_keymap_S_7, bindings, 38) \
	fn(DT_N_S_keymap_S_7, bindings, 39) \
	fn(DT_N_S_keymap_S_7, bindings, 40) \
	fn(DT_N_S_keymap_S_7, bindings, 41) \
	fn(DT_N_S_keymap_S_7, bindings, 42) \
	fn(DT_N_S_keymap_S_7, bindings, 43) \
	fn(DT_N_S_keymap_S_7, bindings, 44) \
	fn(DT_N_S_keymap_S_7, bindings, 45) \
	fn(DT_N_S_keymap_S_7, bindings, 46) \
	fn(DT_N_S_keymap_S_7, bindings, 47) \
	fn(DT_N_S_keymap_S_7, bindings, 48) \
	fn(DT_N_S_keymap_S_7, bindings, 49) \
	fn(DT_N_S_keymap_S_7, bindings, 50) \
	fn(DT_N_S_keymap_S_7, bindings, 51) \
	fn(DT_N_S_keymap_S_7, bindings, 52) \
	fn(DT_N_S_keymap_S_7, bindings, 53) \
	fn(DT_N_S_keymap_S_7, bindings, 54) \
	fn(DT_N_S_keymap_S_7, bindings, 55) \
	fn(DT_N_S_keymap_S_7, bindings, 56) \
	fn(DT_N_S_keymap_S_7, bindings, 57)
#define DT_N_S_keymap_S_7_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_7, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 37, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 38, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 39, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 40, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 41, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 42, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 43, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 44, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 45, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 46, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 47, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 48, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 49, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 50, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 51, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 52, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 53, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 54, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 55, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 56, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_7, bindings, 57, __VA_ARGS__)
#define DT_N_S_keymap_S_7_P_bindings_LEN 58
#define DT_N_S_keymap_S_7_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_7_P_sensor_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_7_P_sensor_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_S_keymap_S_7_P_sensor_bindings_IDX_0_VAL_param1 458834
#define DT_N_S_keymap_S_7_P_sensor_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_7_P_sensor_bindings_IDX_0_VAL_param2 458833
#define DT_N_S_keymap_S_7_P_sensor_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_7_P_sensor_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_7, sensor_bindings, 0)
#define DT_N_S_keymap_S_7_P_sensor_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_7, sensor_bindings, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_7_P_sensor_bindings_LEN 1
#define DT_N_S_keymap_S_7_P_sensor_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/8
 *
 * Node identifier: DT_N_S_keymap_S_8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_8_PATH "/keymap/8"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_8_FULL_NAME "8"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_8_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_8_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_8_ORD 72

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_8_REQUIRES_ORDS \
	33, /* /keymap */ \
	34, /* /behaviors/behavior_key_press */ \
	37, /* /behaviors/behavior_none */ \
	38, /* /behaviors/behavior_sensor_rotate_key_press */ \
	47, /* /behaviors/behavior_reset_dfu */ \
	48, /* /behaviors/behavior_to_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_8_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_8_REG_NUM 0
#define DT_N_S_keymap_S_8_RANGES_NUM 0
#define DT_N_S_keymap_S_8_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_8_IRQ_NUM 0
#define DT_N_S_keymap_S_8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_8_P_label "Sym"
#define DT_N_S_keymap_S_8_P_label_STRING_TOKEN Sym
#define DT_N_S_keymap_S_8_P_label_STRING_UPPER_TOKEN SYM
#define DT_N_S_keymap_S_8_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_8, label, 0) \
	fn(DT_N_S_keymap_S_8, label, 1) \
	fn(DT_N_S_keymap_S_8, label, 2)
#define DT_N_S_keymap_S_8_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_8, label, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, label, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, label, 2, __VA_ARGS__)
#define DT_N_S_keymap_S_8_P_label_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_13_VAL_param1 34013231
#define DT_N_S_keymap_S_8_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_14_VAL_param1 34013220
#define DT_N_S_keymap_S_8_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_15_VAL_param1 34013221
#define DT_N_S_keymap_S_8_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_16_VAL_param1 34013222
#define DT_N_S_keymap_S_8_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_17_VAL_param1 34013232
#define DT_N_S_keymap_S_8_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_8_P_bindings_IDX_19_VAL_param1 0
#define DT_N_S_keymap_S_8_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_8_P_bindings_IDX_20_VAL_param1 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_8_P_bindings_IDX_21_VAL_param1 2
#define DT_N_S_keymap_S_8_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_reset_dfu
#define DT_N_S_keymap_S_8_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_25_VAL_param1 34013235
#define DT_N_S_keymap_S_8_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_26_VAL_param1 34013217
#define DT_N_S_keymap_S_8_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_27_VAL_param1 34013218
#define DT_N_S_keymap_S_8_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_28_VAL_param1 34013219
#define DT_N_S_keymap_S_8_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_29_VAL_param1 34013230
#define DT_N_S_keymap_S_8_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_31_VAL_param1 458977
#define DT_N_S_keymap_S_8_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_32_VAL_param1 458976
#define DT_N_S_keymap_S_8_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_33_VAL_param1 458978
#define DT_N_S_keymap_S_8_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_8_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_37_VAL_param1 34013237
#define DT_N_S_keymap_S_8_P_bindings_IDX_37_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_38_VAL_param1 34013214
#define DT_N_S_keymap_S_8_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_39_VAL_param1 34013215
#define DT_N_S_keymap_S_8_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_40_VAL_param1 34013216
#define DT_N_S_keymap_S_8_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_41_VAL_param1 34013233
#define DT_N_S_keymap_S_8_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_42_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_43_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_43_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_8_P_bindings_IDX_43_VAL_param1 8
#define DT_N_S_keymap_S_8_P_bindings_IDX_43_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_44_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_44_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_8_P_bindings_IDX_44_VAL_param1 5
#define DT_N_S_keymap_S_8_P_bindings_IDX_44_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_45_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_45_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_45_VAL_param1 458982
#define DT_N_S_keymap_S_8_P_bindings_IDX_45_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_46_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_46_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_47_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_47_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_48_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_48_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_49_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_49_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_49_VAL_param1 34013222
#define DT_N_S_keymap_S_8_P_bindings_IDX_49_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_50_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_50_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_50_VAL_param1 34013223
#define DT_N_S_keymap_S_8_P_bindings_IDX_50_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_51_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_51_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_8_P_bindings_IDX_51_VAL_param1 34013229
#define DT_N_S_keymap_S_8_P_bindings_IDX_51_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_52_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_52_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_53_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_53_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_54_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_54_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_55_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_55_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_56_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_56_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_IDX_57_EXISTS 1
#define DT_N_S_keymap_S_8_P_bindings_IDX_57_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_8_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_8, bindings, 0) \
	fn(DT_N_S_keymap_S_8, bindings, 1) \
	fn(DT_N_S_keymap_S_8, bindings, 2) \
	fn(DT_N_S_keymap_S_8, bindings, 3) \
	fn(DT_N_S_keymap_S_8, bindings, 4) \
	fn(DT_N_S_keymap_S_8, bindings, 5) \
	fn(DT_N_S_keymap_S_8, bindings, 6) \
	fn(DT_N_S_keymap_S_8, bindings, 7) \
	fn(DT_N_S_keymap_S_8, bindings, 8) \
	fn(DT_N_S_keymap_S_8, bindings, 9) \
	fn(DT_N_S_keymap_S_8, bindings, 10) \
	fn(DT_N_S_keymap_S_8, bindings, 11) \
	fn(DT_N_S_keymap_S_8, bindings, 12) \
	fn(DT_N_S_keymap_S_8, bindings, 13) \
	fn(DT_N_S_keymap_S_8, bindings, 14) \
	fn(DT_N_S_keymap_S_8, bindings, 15) \
	fn(DT_N_S_keymap_S_8, bindings, 16) \
	fn(DT_N_S_keymap_S_8, bindings, 17) \
	fn(DT_N_S_keymap_S_8, bindings, 18) \
	fn(DT_N_S_keymap_S_8, bindings, 19) \
	fn(DT_N_S_keymap_S_8, bindings, 20) \
	fn(DT_N_S_keymap_S_8, bindings, 21) \
	fn(DT_N_S_keymap_S_8, bindings, 22) \
	fn(DT_N_S_keymap_S_8, bindings, 23) \
	fn(DT_N_S_keymap_S_8, bindings, 24) \
	fn(DT_N_S_keymap_S_8, bindings, 25) \
	fn(DT_N_S_keymap_S_8, bindings, 26) \
	fn(DT_N_S_keymap_S_8, bindings, 27) \
	fn(DT_N_S_keymap_S_8, bindings, 28) \
	fn(DT_N_S_keymap_S_8, bindings, 29) \
	fn(DT_N_S_keymap_S_8, bindings, 30) \
	fn(DT_N_S_keymap_S_8, bindings, 31) \
	fn(DT_N_S_keymap_S_8, bindings, 32) \
	fn(DT_N_S_keymap_S_8, bindings, 33) \
	fn(DT_N_S_keymap_S_8, bindings, 34) \
	fn(DT_N_S_keymap_S_8, bindings, 35) \
	fn(DT_N_S_keymap_S_8, bindings, 36) \
	fn(DT_N_S_keymap_S_8, bindings, 37) \
	fn(DT_N_S_keymap_S_8, bindings, 38) \
	fn(DT_N_S_keymap_S_8, bindings, 39) \
	fn(DT_N_S_keymap_S_8, bindings, 40) \
	fn(DT_N_S_keymap_S_8, bindings, 41) \
	fn(DT_N_S_keymap_S_8, bindings, 42) \
	fn(DT_N_S_keymap_S_8, bindings, 43) \
	fn(DT_N_S_keymap_S_8, bindings, 44) \
	fn(DT_N_S_keymap_S_8, bindings, 45) \
	fn(DT_N_S_keymap_S_8, bindings, 46) \
	fn(DT_N_S_keymap_S_8, bindings, 47) \
	fn(DT_N_S_keymap_S_8, bindings, 48) \
	fn(DT_N_S_keymap_S_8, bindings, 49) \
	fn(DT_N_S_keymap_S_8, bindings, 50) \
	fn(DT_N_S_keymap_S_8, bindings, 51) \
	fn(DT_N_S_keymap_S_8, bindings, 52) \
	fn(DT_N_S_keymap_S_8, bindings, 53) \
	fn(DT_N_S_keymap_S_8, bindings, 54) \
	fn(DT_N_S_keymap_S_8, bindings, 55) \
	fn(DT_N_S_keymap_S_8, bindings, 56) \
	fn(DT_N_S_keymap_S_8, bindings, 57)
#define DT_N_S_keymap_S_8_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_8, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 37, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 38, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 39, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 40, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 41, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 42, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 43, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 44, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 45, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 46, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 47, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 48, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 49, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 50, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 51, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 52, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 53, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 54, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 55, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 56, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_8, bindings, 57, __VA_ARGS__)
#define DT_N_S_keymap_S_8_P_bindings_LEN 58
#define DT_N_S_keymap_S_8_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_8_P_sensor_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_8_P_sensor_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_S_keymap_S_8_P_sensor_bindings_IDX_0_VAL_param1 458834
#define DT_N_S_keymap_S_8_P_sensor_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_8_P_sensor_bindings_IDX_0_VAL_param2 458833
#define DT_N_S_keymap_S_8_P_sensor_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_8_P_sensor_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_8, sensor_bindings, 0)
#define DT_N_S_keymap_S_8_P_sensor_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_8, sensor_bindings, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_8_P_sensor_bindings_LEN 1
#define DT_N_S_keymap_S_8_P_sensor_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/9
 *
 * Node identifier: DT_N_S_keymap_S_9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_9_PATH "/keymap/9"

/* Node's name with unit-address: */
#define DT_N_S_keymap_S_9_FULL_NAME "9"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_9_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_9_FOREACH_CHILD(fn) 
#define DT_N_S_keymap_S_9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_keymap_S_9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_keymap_S_9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_9_ORD 73

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_9_REQUIRES_ORDS \
	33, /* /keymap */ \
	34, /* /behaviors/behavior_key_press */ \
	37, /* /behaviors/behavior_none */ \
	38, /* /behaviors/behavior_sensor_rotate_key_press */ \
	47, /* /behaviors/behavior_reset_dfu */ \
	48, /* /behaviors/behavior_to_layer */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_9_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_keymap_S_9_REG_NUM 0
#define DT_N_S_keymap_S_9_RANGES_NUM 0
#define DT_N_S_keymap_S_9_FOREACH_RANGE(fn) 
#define DT_N_S_keymap_S_9_IRQ_NUM 0
#define DT_N_S_keymap_S_9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_keymap_S_9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_keymap_S_9_P_label "Fun"
#define DT_N_S_keymap_S_9_P_label_STRING_TOKEN Fun
#define DT_N_S_keymap_S_9_P_label_STRING_UPPER_TOKEN FUN
#define DT_N_S_keymap_S_9_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_9, label, 0) \
	fn(DT_N_S_keymap_S_9, label, 1) \
	fn(DT_N_S_keymap_S_9, label, 2)
#define DT_N_S_keymap_S_9_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_9, label, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, label, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, label, 2, __VA_ARGS__)
#define DT_N_S_keymap_S_9_P_label_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_13_VAL_param1 458821
#define DT_N_S_keymap_S_9_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_14_VAL_param1 458816
#define DT_N_S_keymap_S_9_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_15_VAL_param1 458817
#define DT_N_S_keymap_S_9_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_16_VAL_param1 458818
#define DT_N_S_keymap_S_9_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_17_VAL_param1 458822
#define DT_N_S_keymap_S_9_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_9_P_bindings_IDX_19_VAL_param1 0
#define DT_N_S_keymap_S_9_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_9_P_bindings_IDX_20_VAL_param1 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_9_P_bindings_IDX_21_VAL_param1 2
#define DT_N_S_keymap_S_9_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_reset_dfu
#define DT_N_S_keymap_S_9_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_25_VAL_param1 458820
#define DT_N_S_keymap_S_9_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_26_VAL_param1 458813
#define DT_N_S_keymap_S_9_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_27_VAL_param1 458814
#define DT_N_S_keymap_S_9_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_28_VAL_param1 458815
#define DT_N_S_keymap_S_9_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_29_VAL_param1 458823
#define DT_N_S_keymap_S_9_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_31_VAL_param1 458977
#define DT_N_S_keymap_S_9_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_32_VAL_param1 458976
#define DT_N_S_keymap_S_9_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_33_VAL_param1 458978
#define DT_N_S_keymap_S_9_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_34_VAL_param1 458979
#define DT_N_S_keymap_S_9_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_37_VAL_param1 458819
#define DT_N_S_keymap_S_9_P_bindings_IDX_37_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_38_VAL_param1 458810
#define DT_N_S_keymap_S_9_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_39_VAL_param1 458811
#define DT_N_S_keymap_S_9_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_40_VAL_param1 458812
#define DT_N_S_keymap_S_9_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_41_VAL_param1 458824
#define DT_N_S_keymap_S_9_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_42_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_43_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_43_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_9_P_bindings_IDX_43_VAL_param1 9
#define DT_N_S_keymap_S_9_P_bindings_IDX_43_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_44_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_44_PH DT_N_S_behaviors_S_behavior_to_layer
#define DT_N_S_keymap_S_9_P_bindings_IDX_44_VAL_param1 6
#define DT_N_S_keymap_S_9_P_bindings_IDX_44_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_45_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_45_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_45_VAL_param1 458982
#define DT_N_S_keymap_S_9_P_bindings_IDX_45_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_46_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_46_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_47_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_47_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_48_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_48_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_49_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_49_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_49_VAL_param1 458853
#define DT_N_S_keymap_S_9_P_bindings_IDX_49_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_50_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_50_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_50_VAL_param1 458796
#define DT_N_S_keymap_S_9_P_bindings_IDX_50_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_51_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_51_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_9_P_bindings_IDX_51_VAL_param1 458795
#define DT_N_S_keymap_S_9_P_bindings_IDX_51_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_52_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_52_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_53_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_53_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_54_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_54_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_55_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_55_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_56_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_56_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_IDX_57_EXISTS 1
#define DT_N_S_keymap_S_9_P_bindings_IDX_57_PH DT_N_S_behaviors_S_behavior_none
#define DT_N_S_keymap_S_9_P_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_9, bindings, 0) \
	fn(DT_N_S_keymap_S_9, bindings, 1) \
	fn(DT_N_S_keymap_S_9, bindings, 2) \
	fn(DT_N_S_keymap_S_9, bindings, 3) \
	fn(DT_N_S_keymap_S_9, bindings, 4) \
	fn(DT_N_S_keymap_S_9, bindings, 5) \
	fn(DT_N_S_keymap_S_9, bindings, 6) \
	fn(DT_N_S_keymap_S_9, bindings, 7) \
	fn(DT_N_S_keymap_S_9, bindings, 8) \
	fn(DT_N_S_keymap_S_9, bindings, 9) \
	fn(DT_N_S_keymap_S_9, bindings, 10) \
	fn(DT_N_S_keymap_S_9, bindings, 11) \
	fn(DT_N_S_keymap_S_9, bindings, 12) \
	fn(DT_N_S_keymap_S_9, bindings, 13) \
	fn(DT_N_S_keymap_S_9, bindings, 14) \
	fn(DT_N_S_keymap_S_9, bindings, 15) \
	fn(DT_N_S_keymap_S_9, bindings, 16) \
	fn(DT_N_S_keymap_S_9, bindings, 17) \
	fn(DT_N_S_keymap_S_9, bindings, 18) \
	fn(DT_N_S_keymap_S_9, bindings, 19) \
	fn(DT_N_S_keymap_S_9, bindings, 20) \
	fn(DT_N_S_keymap_S_9, bindings, 21) \
	fn(DT_N_S_keymap_S_9, bindings, 22) \
	fn(DT_N_S_keymap_S_9, bindings, 23) \
	fn(DT_N_S_keymap_S_9, bindings, 24) \
	fn(DT_N_S_keymap_S_9, bindings, 25) \
	fn(DT_N_S_keymap_S_9, bindings, 26) \
	fn(DT_N_S_keymap_S_9, bindings, 27) \
	fn(DT_N_S_keymap_S_9, bindings, 28) \
	fn(DT_N_S_keymap_S_9, bindings, 29) \
	fn(DT_N_S_keymap_S_9, bindings, 30) \
	fn(DT_N_S_keymap_S_9, bindings, 31) \
	fn(DT_N_S_keymap_S_9, bindings, 32) \
	fn(DT_N_S_keymap_S_9, bindings, 33) \
	fn(DT_N_S_keymap_S_9, bindings, 34) \
	fn(DT_N_S_keymap_S_9, bindings, 35) \
	fn(DT_N_S_keymap_S_9, bindings, 36) \
	fn(DT_N_S_keymap_S_9, bindings, 37) \
	fn(DT_N_S_keymap_S_9, bindings, 38) \
	fn(DT_N_S_keymap_S_9, bindings, 39) \
	fn(DT_N_S_keymap_S_9, bindings, 40) \
	fn(DT_N_S_keymap_S_9, bindings, 41) \
	fn(DT_N_S_keymap_S_9, bindings, 42) \
	fn(DT_N_S_keymap_S_9, bindings, 43) \
	fn(DT_N_S_keymap_S_9, bindings, 44) \
	fn(DT_N_S_keymap_S_9, bindings, 45) \
	fn(DT_N_S_keymap_S_9, bindings, 46) \
	fn(DT_N_S_keymap_S_9, bindings, 47) \
	fn(DT_N_S_keymap_S_9, bindings, 48) \
	fn(DT_N_S_keymap_S_9, bindings, 49) \
	fn(DT_N_S_keymap_S_9, bindings, 50) \
	fn(DT_N_S_keymap_S_9, bindings, 51) \
	fn(DT_N_S_keymap_S_9, bindings, 52) \
	fn(DT_N_S_keymap_S_9, bindings, 53) \
	fn(DT_N_S_keymap_S_9, bindings, 54) \
	fn(DT_N_S_keymap_S_9, bindings, 55) \
	fn(DT_N_S_keymap_S_9, bindings, 56) \
	fn(DT_N_S_keymap_S_9, bindings, 57)
#define DT_N_S_keymap_S_9_P_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_9, bindings, 0, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 1, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 2, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 3, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 4, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 5, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 6, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 7, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 8, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 9, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 10, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 11, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 12, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 13, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 14, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 15, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 16, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 17, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 18, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 19, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 20, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 21, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 22, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 23, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 24, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 25, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 26, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 27, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 28, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 29, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 30, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 31, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 32, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 33, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 34, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 35, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 36, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 37, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 38, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 39, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 40, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 41, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 42, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 43, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 44, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 45, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 46, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 47, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 48, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 49, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 50, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 51, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 52, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 53, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 54, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 55, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 56, __VA_ARGS__) \
	fn(DT_N_S_keymap_S_9, bindings, 57, __VA_ARGS__)
#define DT_N_S_keymap_S_9_P_bindings_LEN 58
#define DT_N_S_keymap_S_9_P_bindings_EXISTS 1
#define DT_N_S_keymap_S_9_P_sensor_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_9_P_sensor_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_sensor_rotate_key_press
#define DT_N_S_keymap_S_9_P_sensor_bindings_IDX_0_VAL_param1 458834
#define DT_N_S_keymap_S_9_P_sensor_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_9_P_sensor_bindings_IDX_0_VAL_param2 458833
#define DT_N_S_keymap_S_9_P_sensor_bindings_IDX_0_VAL_param2_EXISTS 1
#define DT_N_S_keymap_S_9_P_sensor_bindings_FOREACH_PROP_ELEM(fn) fn(DT_N_S_keymap_S_9, sensor_bindings, 0)
#define DT_N_S_keymap_S_9_P_sensor_bindings_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_keymap_S_9, sensor_bindings, 0, __VA_ARGS__)
#define DT_N_S_keymap_S_9_P_sensor_bindings_LEN 1
#define DT_N_S_keymap_S_9_P_sensor_bindings_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0) 
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 74

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	75, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 75

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	6, /* /soc/gpio@50000000 */ \
	74, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_NODELABEL_blue_led DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 15
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "Blue LED"
#define DT_N_S_leds_S_led_0_P_label_STRING_TOKEN Blue_LED
#define DT_N_S_leds_S_led_0_P_label_STRING_UPPER_TOKEN BLUE_LED
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0) \
	fn(DT_N_S_leds_S_led_0, label, 1) \
	fn(DT_N_S_leds_S_led_0, label, 2) \
	fn(DT_N_S_leds_S_led_0, label, 3) \
	fn(DT_N_S_leds_S_led_0, label, 4) \
	fn(DT_N_S_leds_S_led_0, label, 5) \
	fn(DT_N_S_leds_S_led_0, label, 6) \
	fn(DT_N_S_leds_S_led_0, label, 7)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_0, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /soc/adc@40007000
 *
 * Node identifier: DT_N_S_soc_S_adc_40007000
 *
 * Binding (compatible = nordic,nrf-saadc):
 *   $ZEPHYR_BASE/dts/bindings/adc/nordic,nrf-saadc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40007000_PATH "/soc/adc@40007000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40007000_FULL_NAME "adc@40007000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40007000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40007000_ORD 76

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40007000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40007000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40007000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_saadc DT_N_S_soc_S_adc_40007000
#define DT_N_NODELABEL_adc           DT_N_S_soc_S_adc_40007000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40007000_REG_NUM 1
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_VAL_ADDRESS 1073770496 /* 0x40007000 */
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_adc_40007000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40007000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40007000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_irq 7
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_MATCHES_nordic_nrf_saadc 1
#define DT_N_S_soc_S_adc_40007000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40007000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40007000_P_reg {1073770496 /* 0x40007000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_0 1073770496
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007000, reg, 0) \
	fn(DT_N_S_soc_S_adc_40007000, reg, 1)
#define DT_N_S_soc_S_adc_40007000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts {7 /* 0x7 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_0 7
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007000, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_40007000, interrupts, 1)
#define DT_N_S_soc_S_adc_40007000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_label "ADC_0"
#define DT_N_S_soc_S_adc_40007000_P_label_STRING_TOKEN ADC_0
#define DT_N_S_soc_S_adc_40007000_P_label_STRING_UPPER_TOKEN ADC_0
#define DT_N_S_soc_S_adc_40007000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007000, label, 0) \
	fn(DT_N_S_soc_S_adc_40007000, label, 1) \
	fn(DT_N_S_soc_S_adc_40007000, label, 2) \
	fn(DT_N_S_soc_S_adc_40007000, label, 3) \
	fn(DT_N_S_soc_S_adc_40007000, label, 4)
#define DT_N_S_soc_S_adc_40007000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_label_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_status "okay"
#define DT_N_S_soc_S_adc_40007000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_40007000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007000, status, 0) \
	fn(DT_N_S_soc_S_adc_40007000, status, 1) \
	fn(DT_N_S_soc_S_adc_40007000, status, 2) \
	fn(DT_N_S_soc_S_adc_40007000, status, 3)
#define DT_N_S_soc_S_adc_40007000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40007000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_compatible {"nordic,nrf-saadc"}
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0 "nordic,nrf-saadc"
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40007000, compatible, 0)
#define DT_N_S_soc_S_adc_40007000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40007000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40007000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40007000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40007000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/clock@40000000
 *
 * Node identifier: DT_N_S_soc_S_clock_40000000
 *
 * Binding (compatible = nordic,nrf-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/nordic,nrf-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_clock_40000000_PATH "/soc/clock@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_clock_40000000_FULL_NAME "clock@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_40000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_40000000_ORD 77

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_40000000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_40000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_40000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_clock DT_N_S_soc_S_clock_40000000
#define DT_N_NODELABEL_clock         DT_N_S_soc_S_clock_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_clock_40000000_REG_NUM 1
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_clock_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_clock_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_clock_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_MATCHES_nordic_nrf_clock 1
#define DT_N_S_soc_S_clock_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_clock_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_clock_40000000_P_label "CLOCK"
#define DT_N_S_soc_S_clock_40000000_P_label_STRING_TOKEN CLOCK
#define DT_N_S_soc_S_clock_40000000_P_label_STRING_UPPER_TOKEN CLOCK
#define DT_N_S_soc_S_clock_40000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_40000000, label, 0) \
	fn(DT_N_S_soc_S_clock_40000000, label, 1) \
	fn(DT_N_S_soc_S_clock_40000000, label, 2) \
	fn(DT_N_S_soc_S_clock_40000000, label, 3) \
	fn(DT_N_S_soc_S_clock_40000000, label, 4)
#define DT_N_S_soc_S_clock_40000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_40000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_40000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_40000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_40000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_40000000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_label_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg {1073741824 /* 0x40000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_40000000, reg, 0) \
	fn(DT_N_S_soc_S_clock_40000000, reg, 1)
#define DT_N_S_soc_S_clock_40000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_40000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_40000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts {0 /* 0x0 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_40000000, interrupts, 0) \
	fn(DT_N_S_soc_S_clock_40000000, interrupts, 1)
#define DT_N_S_soc_S_clock_40000000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_40000000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_40000000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_status "okay"
#define DT_N_S_soc_S_clock_40000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_clock_40000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_40000000, status, 0) \
	fn(DT_N_S_soc_S_clock_40000000, status, 1) \
	fn(DT_N_S_soc_S_clock_40000000, status, 2) \
	fn(DT_N_S_soc_S_clock_40000000, status, 3)
#define DT_N_S_soc_S_clock_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_40000000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_40000000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_40000000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_clock_40000000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_compatible {"nordic,nrf-clock"}
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0 "nordic,nrf-clock"
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_40000000, compatible, 0)
#define DT_N_S_soc_S_clock_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_clock_40000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/ecb@4000e000
 *
 * Node identifier: DT_N_S_soc_S_ecb_4000e000
 *
 * Binding (compatible = nordic,nrf-ecb):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-ecb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ecb_4000e000_PATH "/soc/ecb@4000e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ecb_4000e000_FULL_NAME "ecb@4000e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ecb_4000e000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ecb_4000e000_ORD 78

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ecb_4000e000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ecb_4000e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ecb_4000e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ecb DT_N_S_soc_S_ecb_4000e000
#define DT_N_NODELABEL_ecb         DT_N_S_soc_S_ecb_4000e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ecb_4000e000_REG_NUM 1
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_VAL_ADDRESS 1073799168 /* 0x4000e000 */
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ecb_4000e000_RANGES_NUM 0
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ecb_4000e000_IRQ_NUM 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_MATCHES_nordic_nrf_ecb 1
#define DT_N_S_soc_S_ecb_4000e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ecb_4000e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ecb_4000e000_P_reg {1073799168 /* 0x4000e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_0 1073799168
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4000e000, reg, 0) \
	fn(DT_N_S_soc_S_ecb_4000e000, reg, 1)
#define DT_N_S_soc_S_ecb_4000e000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ecb_4000e000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts {14 /* 0xe */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4000e000, interrupts, 0) \
	fn(DT_N_S_soc_S_ecb_4000e000, interrupts, 1)
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ecb_4000e000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_status "okay"
#define DT_N_S_soc_S_ecb_4000e000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4000e000, status, 0) \
	fn(DT_N_S_soc_S_ecb_4000e000, status, 1) \
	fn(DT_N_S_soc_S_ecb_4000e000, status, 2) \
	fn(DT_N_S_soc_S_ecb_4000e000, status, 3)
#define DT_N_S_soc_S_ecb_4000e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ecb_4000e000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ecb_4000e000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ecb_4000e000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_status_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible {"nordic,nrf-ecb"}
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0 "nordic,nrf-ecb"
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_LEN 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_label "ECB"
#define DT_N_S_soc_S_ecb_4000e000_P_label_STRING_TOKEN ECB
#define DT_N_S_soc_S_ecb_4000e000_P_label_STRING_UPPER_TOKEN ECB
#define DT_N_S_soc_S_ecb_4000e000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4000e000, label, 0) \
	fn(DT_N_S_soc_S_ecb_4000e000, label, 1) \
	fn(DT_N_S_soc_S_ecb_4000e000, label, 2)
#define DT_N_S_soc_S_ecb_4000e000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ecb_4000e000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ecb_4000e000, label, 2, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4000e000_P_label_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_wakeup_source 0
#define DT_N_S_soc_S_ecb_4000e000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/egu@40014000
 *
 * Node identifier: DT_N_S_soc_S_egu_40014000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40014000_PATH "/soc/egu@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40014000_FULL_NAME "egu@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40014000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40014000_ORD 79

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40014000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40014000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40014000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_egu DT_N_S_soc_S_egu_40014000
#define DT_N_NODELABEL_egu0        DT_N_S_soc_S_egu_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40014000_REG_NUM 1
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_egu_40014000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40014000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40014000_P_reg {1073823744 /* 0x40014000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40014000, reg, 0) \
	fn(DT_N_S_soc_S_egu_40014000, reg, 1)
#define DT_N_S_soc_S_egu_40014000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40014000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40014000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts {20 /* 0x14 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40014000, interrupts, 0) \
	fn(DT_N_S_soc_S_egu_40014000, interrupts, 1)
#define DT_N_S_soc_S_egu_40014000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40014000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40014000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_status "okay"
#define DT_N_S_soc_S_egu_40014000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40014000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40014000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40014000, status, 0) \
	fn(DT_N_S_soc_S_egu_40014000, status, 1) \
	fn(DT_N_S_soc_S_egu_40014000, status, 2) \
	fn(DT_N_S_soc_S_egu_40014000, status, 3)
#define DT_N_S_soc_S_egu_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40014000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40014000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40014000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40014000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40014000, compatible, 0)
#define DT_N_S_soc_S_egu_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_egu_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40014000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/egu@40015000
 *
 * Node identifier: DT_N_S_soc_S_egu_40015000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40015000_PATH "/soc/egu@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40015000_FULL_NAME "egu@40015000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40015000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40015000_ORD 80

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40015000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40015000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40015000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_egu DT_N_S_soc_S_egu_40015000
#define DT_N_NODELABEL_egu1        DT_N_S_soc_S_egu_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40015000_REG_NUM 1
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_egu_40015000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40015000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40015000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40015000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40015000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40015000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40015000_P_reg {1073827840 /* 0x40015000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40015000, reg, 0) \
	fn(DT_N_S_soc_S_egu_40015000, reg, 1)
#define DT_N_S_soc_S_egu_40015000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40015000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40015000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts {21 /* 0x15 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40015000, interrupts, 0) \
	fn(DT_N_S_soc_S_egu_40015000, interrupts, 1)
#define DT_N_S_soc_S_egu_40015000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40015000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40015000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_status "okay"
#define DT_N_S_soc_S_egu_40015000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40015000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40015000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40015000, status, 0) \
	fn(DT_N_S_soc_S_egu_40015000, status, 1) \
	fn(DT_N_S_soc_S_egu_40015000, status, 2) \
	fn(DT_N_S_soc_S_egu_40015000, status, 3)
#define DT_N_S_soc_S_egu_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40015000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40015000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40015000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40015000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40015000, compatible, 0)
#define DT_N_S_soc_S_egu_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40015000_P_compatible_LEN 1
#define DT_N_S_soc_S_egu_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40015000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/egu@40016000
 *
 * Node identifier: DT_N_S_soc_S_egu_40016000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40016000_PATH "/soc/egu@40016000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40016000_FULL_NAME "egu@40016000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40016000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40016000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40016000_ORD 81

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40016000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40016000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40016000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_egu DT_N_S_soc_S_egu_40016000
#define DT_N_NODELABEL_egu2        DT_N_S_soc_S_egu_40016000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40016000_REG_NUM 1
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_VAL_ADDRESS 1073831936 /* 0x40016000 */
#define DT_N_S_soc_S_egu_40016000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40016000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40016000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40016000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40016000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40016000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40016000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40016000_P_reg {1073831936 /* 0x40016000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_0 1073831936
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40016000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40016000, reg, 0) \
	fn(DT_N_S_soc_S_egu_40016000, reg, 1)
#define DT_N_S_soc_S_egu_40016000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40016000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40016000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts {22 /* 0x16 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40016000, interrupts, 0) \
	fn(DT_N_S_soc_S_egu_40016000, interrupts, 1)
#define DT_N_S_soc_S_egu_40016000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40016000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40016000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_status "okay"
#define DT_N_S_soc_S_egu_40016000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40016000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40016000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40016000, status, 0) \
	fn(DT_N_S_soc_S_egu_40016000, status, 1) \
	fn(DT_N_S_soc_S_egu_40016000, status, 2) \
	fn(DT_N_S_soc_S_egu_40016000, status, 3)
#define DT_N_S_soc_S_egu_40016000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40016000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40016000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40016000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40016000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40016000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40016000, compatible, 0)
#define DT_N_S_soc_S_egu_40016000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40016000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40016000_P_compatible_LEN 1
#define DT_N_S_soc_S_egu_40016000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40016000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40016000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/egu@40017000
 *
 * Node identifier: DT_N_S_soc_S_egu_40017000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40017000_PATH "/soc/egu@40017000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40017000_FULL_NAME "egu@40017000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40017000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40017000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40017000_ORD 82

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40017000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40017000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40017000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_egu DT_N_S_soc_S_egu_40017000
#define DT_N_NODELABEL_egu3        DT_N_S_soc_S_egu_40017000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40017000_REG_NUM 1
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_VAL_ADDRESS 1073836032 /* 0x40017000 */
#define DT_N_S_soc_S_egu_40017000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40017000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40017000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40017000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_irq 23
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40017000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40017000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40017000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40017000_P_reg {1073836032 /* 0x40017000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_0 1073836032
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40017000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40017000, reg, 0) \
	fn(DT_N_S_soc_S_egu_40017000, reg, 1)
#define DT_N_S_soc_S_egu_40017000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40017000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40017000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts {23 /* 0x17 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_0 23
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40017000, interrupts, 0) \
	fn(DT_N_S_soc_S_egu_40017000, interrupts, 1)
#define DT_N_S_soc_S_egu_40017000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40017000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40017000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_status "okay"
#define DT_N_S_soc_S_egu_40017000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40017000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40017000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40017000, status, 0) \
	fn(DT_N_S_soc_S_egu_40017000, status, 1) \
	fn(DT_N_S_soc_S_egu_40017000, status, 2) \
	fn(DT_N_S_soc_S_egu_40017000, status, 3)
#define DT_N_S_soc_S_egu_40017000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40017000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40017000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40017000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40017000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40017000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40017000, compatible, 0)
#define DT_N_S_soc_S_egu_40017000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40017000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40017000_P_compatible_LEN 1
#define DT_N_S_soc_S_egu_40017000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40017000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40017000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/egu@40018000
 *
 * Node identifier: DT_N_S_soc_S_egu_40018000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40018000_PATH "/soc/egu@40018000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40018000_FULL_NAME "egu@40018000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40018000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40018000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40018000_ORD 83

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40018000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40018000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40018000_EXISTS 1
#define DT_N_INST_4_nordic_nrf_egu DT_N_S_soc_S_egu_40018000
#define DT_N_NODELABEL_egu4        DT_N_S_soc_S_egu_40018000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40018000_REG_NUM 1
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_VAL_ADDRESS 1073840128 /* 0x40018000 */
#define DT_N_S_soc_S_egu_40018000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40018000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40018000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40018000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40018000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40018000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40018000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40018000_P_reg {1073840128 /* 0x40018000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_0 1073840128
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40018000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40018000, reg, 0) \
	fn(DT_N_S_soc_S_egu_40018000, reg, 1)
#define DT_N_S_soc_S_egu_40018000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40018000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40018000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts {24 /* 0x18 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40018000, interrupts, 0) \
	fn(DT_N_S_soc_S_egu_40018000, interrupts, 1)
#define DT_N_S_soc_S_egu_40018000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40018000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40018000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_status "okay"
#define DT_N_S_soc_S_egu_40018000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40018000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40018000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40018000, status, 0) \
	fn(DT_N_S_soc_S_egu_40018000, status, 1) \
	fn(DT_N_S_soc_S_egu_40018000, status, 2) \
	fn(DT_N_S_soc_S_egu_40018000, status, 3)
#define DT_N_S_soc_S_egu_40018000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40018000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40018000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40018000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40018000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40018000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40018000, compatible, 0)
#define DT_N_S_soc_S_egu_40018000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40018000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40018000_P_compatible_LEN 1
#define DT_N_S_soc_S_egu_40018000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40018000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40018000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/egu@40019000
 *
 * Node identifier: DT_N_S_soc_S_egu_40019000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_40019000_PATH "/soc/egu@40019000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_40019000_FULL_NAME "egu@40019000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_40019000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_40019000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_40019000_ORD 84

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_40019000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_40019000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_40019000_EXISTS 1
#define DT_N_INST_5_nordic_nrf_egu DT_N_S_soc_S_egu_40019000
#define DT_N_NODELABEL_egu5        DT_N_S_soc_S_egu_40019000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_40019000_REG_NUM 1
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_VAL_ADDRESS 1073844224 /* 0x40019000 */
#define DT_N_S_soc_S_egu_40019000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_40019000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_40019000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_40019000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_40019000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_40019000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_40019000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_40019000_P_reg {1073844224 /* 0x40019000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_0 1073844224
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_40019000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40019000, reg, 0) \
	fn(DT_N_S_soc_S_egu_40019000, reg, 1)
#define DT_N_S_soc_S_egu_40019000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40019000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40019000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts {25 /* 0x19 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40019000, interrupts, 0) \
	fn(DT_N_S_soc_S_egu_40019000, interrupts, 1)
#define DT_N_S_soc_S_egu_40019000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40019000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40019000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_status "okay"
#define DT_N_S_soc_S_egu_40019000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_40019000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_egu_40019000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40019000, status, 0) \
	fn(DT_N_S_soc_S_egu_40019000, status, 1) \
	fn(DT_N_S_soc_S_egu_40019000, status, 2) \
	fn(DT_N_S_soc_S_egu_40019000, status, 3)
#define DT_N_S_soc_S_egu_40019000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40019000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40019000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40019000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_egu_40019000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_40019000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_40019000, compatible, 0)
#define DT_N_S_soc_S_egu_40019000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_40019000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_40019000_P_compatible_LEN 1
#define DT_N_S_soc_S_egu_40019000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_40019000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_40019000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/ficr@10000000
 *
 * Node identifier: DT_N_S_soc_S_ficr_10000000
 *
 * Binding (compatible = nordic,nrf-ficr):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-ficr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ficr_10000000_PATH "/soc/ficr@10000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ficr_10000000_FULL_NAME "ficr@10000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ficr_10000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ficr_10000000_ORD 85

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ficr_10000000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ficr_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ficr_10000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ficr DT_N_S_soc_S_ficr_10000000
#define DT_N_NODELABEL_ficr         DT_N_S_soc_S_ficr_10000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ficr_10000000_REG_NUM 1
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ficr_10000000_RANGES_NUM 0
#define DT_N_S_soc_S_ficr_10000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ficr_10000000_IRQ_NUM 0
#define DT_N_S_soc_S_ficr_10000000_COMPAT_MATCHES_nordic_nrf_ficr 1
#define DT_N_S_soc_S_ficr_10000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ficr_10000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ficr_10000000_P_reg {268435456 /* 0x10000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_0 268435456
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_10000000, reg, 0) \
	fn(DT_N_S_soc_S_ficr_10000000, reg, 1)
#define DT_N_S_soc_S_ficr_10000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ficr_10000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_status "okay"
#define DT_N_S_soc_S_ficr_10000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ficr_10000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_10000000, status, 0) \
	fn(DT_N_S_soc_S_ficr_10000000, status, 1) \
	fn(DT_N_S_soc_S_ficr_10000000, status, 2) \
	fn(DT_N_S_soc_S_ficr_10000000, status, 3)
#define DT_N_S_soc_S_ficr_10000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ficr_10000000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ficr_10000000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ficr_10000000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_status_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible {"nordic,nrf-ficr"}
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0 "nordic,nrf-ficr"
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_10000000_P_compatible_LEN 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_wakeup_source 0
#define DT_N_S_soc_S_ficr_10000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/gpiote@40006000
 *
 * Node identifier: DT_N_S_soc_S_gpiote_40006000
 *
 * Binding (compatible = nordic,nrf-gpiote):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpiote.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpiote_40006000_PATH "/soc/gpiote@40006000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpiote_40006000_FULL_NAME "gpiote@40006000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpiote_40006000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpiote_40006000_ORD 86

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpiote_40006000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpiote_40006000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpiote_40006000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpiote DT_N_S_soc_S_gpiote_40006000
#define DT_N_NODELABEL_gpiote         DT_N_S_soc_S_gpiote_40006000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpiote_40006000_REG_NUM 1
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_VAL_ADDRESS 1073766400 /* 0x40006000 */
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_gpiote_40006000_RANGES_NUM 0
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpiote_40006000_IRQ_NUM 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_MATCHES_nordic_nrf_gpiote 1
#define DT_N_S_soc_S_gpiote_40006000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpiote_40006000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpiote_40006000_P_reg {1073766400 /* 0x40006000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_0 1073766400
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_40006000, reg, 0) \
	fn(DT_N_S_soc_S_gpiote_40006000, reg, 1)
#define DT_N_S_soc_S_gpiote_40006000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts {6 /* 0x6 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_40006000, interrupts, 0) \
	fn(DT_N_S_soc_S_gpiote_40006000, interrupts, 1)
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_label "GPIOTE_0"
#define DT_N_S_soc_S_gpiote_40006000_P_label_STRING_TOKEN GPIOTE_0
#define DT_N_S_soc_S_gpiote_40006000_P_label_STRING_UPPER_TOKEN GPIOTE_0
#define DT_N_S_soc_S_gpiote_40006000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_40006000, label, 0) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 1) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 2) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 3) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 4) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 5) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 6) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 7)
#define DT_N_S_soc_S_gpiote_40006000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_label_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_status "okay"
#define DT_N_S_soc_S_gpiote_40006000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_40006000, status, 0) \
	fn(DT_N_S_soc_S_gpiote_40006000, status, 1) \
	fn(DT_N_S_soc_S_gpiote_40006000, status, 2) \
	fn(DT_N_S_soc_S_gpiote_40006000, status, 3)
#define DT_N_S_soc_S_gpiote_40006000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_40006000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible {"nordic,nrf-gpiote"}
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0 "nordic,nrf-gpiote"
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_wakeup_source 0
#define DT_N_S_soc_S_gpiote_40006000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40004000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40004000
 *
 * Binding (compatible = nordic,nrf-twim):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nordic,nrf-twim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40004000_PATH "/soc/i2c@40004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40004000_FULL_NAME "i2c@40004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40004000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40004000_ORD 87

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40004000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40004000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_twim DT_N_S_soc_S_i2c_40004000
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40004000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_ADDRESS 1073758208 /* 0x40004000 */
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40004000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40004000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_COMPAT_MATCHES_nordic_nrf_twim 1
#define DT_N_S_soc_S_i2c_40004000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_concat_buf_size 16
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_concat_buf_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_flash_buf_max_size 16
#define DT_N_S_soc_S_i2c_40004000_P_zephyr_flash_buf_max_size_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg {1073758208 /* 0x40004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0 1073758208
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40004000, reg, 1)
#define DT_N_S_soc_S_i2c_40004000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts {4 /* 0x4 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40004000, interrupts, 1)
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40004000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_label "I2C_1"
#define DT_N_S_soc_S_i2c_40004000_P_label_STRING_TOKEN I2C_1
#define DT_N_S_soc_S_i2c_40004000_P_label_STRING_UPPER_TOKEN I2C_1
#define DT_N_S_soc_S_i2c_40004000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, label, 0) \
	fn(DT_N_S_soc_S_i2c_40004000, label, 1) \
	fn(DT_N_S_soc_S_i2c_40004000, label, 2) \
	fn(DT_N_S_soc_S_i2c_40004000, label, 3) \
	fn(DT_N_S_soc_S_i2c_40004000, label, 4)
#define DT_N_S_soc_S_i2c_40004000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, status, 0) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 1) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 2) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 3) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 4) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 5) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 6) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 7)
#define DT_N_S_soc_S_i2c_40004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40004000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible {"nordic,nrf-twim"}
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0 "nordic,nrf-twim"
#define DT_N_S_soc_S_i2c_40004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40004000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40004000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40025000
 *
 * Node identifier: DT_N_S_soc_S_i2s_40025000
 *
 * Binding (compatible = nordic,nrf-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/nordic,nrf-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40025000_PATH "/soc/i2s@40025000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40025000_FULL_NAME "i2s@40025000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40025000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40025000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40025000_ORD 88

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40025000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40025000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40025000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_i2s DT_N_S_soc_S_i2s_40025000
#define DT_N_NODELABEL_i2s0        DT_N_S_soc_S_i2s_40025000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40025000_REG_NUM 1
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_VAL_ADDRESS 1073893376 /* 0x40025000 */
#define DT_N_S_soc_S_i2s_40025000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2s_40025000_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40025000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40025000_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2s_40025000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_COMPAT_MATCHES_nordic_nrf_i2s 1
#define DT_N_S_soc_S_i2s_40025000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40025000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40025000_P_reg {1073893376 /* 0x40025000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_0 1073893376
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2s_40025000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, reg, 0) \
	fn(DT_N_S_soc_S_i2s_40025000, reg, 1)
#define DT_N_S_soc_S_i2s_40025000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts {37 /* 0x25 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2s_40025000, interrupts, 1)
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source "PCLK32M_HFXO"
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_STRING_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_STRING_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_ENUM_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 1) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 2) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 3) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 4) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 5) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 6) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 7) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 8) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 9) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 10) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 11)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, clock_source, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, clock_source, 11, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_label "I2S_0"
#define DT_N_S_soc_S_i2s_40025000_P_label_STRING_TOKEN I2S_0
#define DT_N_S_soc_S_i2s_40025000_P_label_STRING_UPPER_TOKEN I2S_0
#define DT_N_S_soc_S_i2s_40025000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, label, 0) \
	fn(DT_N_S_soc_S_i2s_40025000, label, 1) \
	fn(DT_N_S_soc_S_i2s_40025000, label, 2) \
	fn(DT_N_S_soc_S_i2s_40025000, label, 3) \
	fn(DT_N_S_soc_S_i2s_40025000, label, 4)
#define DT_N_S_soc_S_i2s_40025000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_status "disabled"
#define DT_N_S_soc_S_i2s_40025000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40025000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40025000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, status, 0) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 1) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 2) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 3) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 4) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 5) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 6) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 7)
#define DT_N_S_soc_S_i2s_40025000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40025000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible {"nordic,nrf-i2s"}
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0 "nordic,nrf-i2s"
#define DT_N_S_soc_S_i2s_40025000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40025000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40025000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40025000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40025000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40025000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 89

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, reg, 0) \
	fn(DT_N_S_soc_S_memory_20000000, reg, 1)
#define DT_N_S_soc_S_memory_20000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pdm@4001d000
 *
 * Node identifier: DT_N_S_soc_S_pdm_4001d000
 *
 * Binding (compatible = nordic,nrf-pdm):
 *   $ZEPHYR_BASE/dts/bindings/audio/nordic,nrf-pdm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pdm_4001d000_PATH "/soc/pdm@4001d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pdm_4001d000_FULL_NAME "pdm@4001d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pdm_4001d000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pdm_4001d000_ORD 90

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pdm_4001d000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pdm_4001d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pdm_4001d000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pdm DT_N_S_soc_S_pdm_4001d000
#define DT_N_NODELABEL_pdm0        DT_N_S_soc_S_pdm_4001d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pdm_4001d000_REG_NUM 1
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_VAL_ADDRESS 1073860608 /* 0x4001d000 */
#define DT_N_S_soc_S_pdm_4001d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pdm_4001d000_RANGES_NUM 0
#define DT_N_S_soc_S_pdm_4001d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pdm_4001d000_IRQ_NUM 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pdm_4001d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_COMPAT_MATCHES_nordic_nrf_pdm 1
#define DT_N_S_soc_S_pdm_4001d000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pdm_4001d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pdm_4001d000_P_reg {1073860608 /* 0x4001d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_0 1073860608
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pdm_4001d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, reg, 0) \
	fn(DT_N_S_soc_S_pdm_4001d000, reg, 1)
#define DT_N_S_soc_S_pdm_4001d000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts {29 /* 0x1d */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, interrupts, 0) \
	fn(DT_N_S_soc_S_pdm_4001d000, interrupts, 1)
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source "PCLK32M_HFXO"
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_STRING_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_STRING_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_ENUM_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 1) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 2) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 3) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 4) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 5) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 6) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 7) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 8) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 9) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 10) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 11)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, clock_source, 11, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_queue_size 4
#define DT_N_S_soc_S_pdm_4001d000_P_queue_size_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_status "disabled"
#define DT_N_S_soc_S_pdm_4001d000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pdm_4001d000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pdm_4001d000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, status, 0) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 1) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 2) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 3) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 4) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 5) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 6) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 7)
#define DT_N_S_soc_S_pdm_4001d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_status_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible {"nordic,nrf-pdm"}
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0 "nordic,nrf-pdm"
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_LEN 1
#define DT_N_S_soc_S_pdm_4001d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_label "PDM_0"
#define DT_N_S_soc_S_pdm_4001d000_P_label_STRING_TOKEN PDM_0
#define DT_N_S_soc_S_pdm_4001d000_P_label_STRING_UPPER_TOKEN PDM_0
#define DT_N_S_soc_S_pdm_4001d000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pdm_4001d000, label, 0) \
	fn(DT_N_S_soc_S_pdm_4001d000, label, 1) \
	fn(DT_N_S_soc_S_pdm_4001d000, label, 2) \
	fn(DT_N_S_soc_S_pdm_4001d000, label, 3) \
	fn(DT_N_S_soc_S_pdm_4001d000, label, 4)
#define DT_N_S_soc_S_pdm_4001d000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pdm_4001d000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pdm_4001d000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pdm_4001d000_P_label_EXISTS 1
#define DT_N_S_soc_S_pdm_4001d000_P_wakeup_source 0
#define DT_N_S_soc_S_pdm_4001d000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pwm@4001c000
 *
 * Node identifier: DT_N_S_soc_S_pwm_4001c000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_4001c000_PATH "/soc/pwm@4001c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_4001c000_FULL_NAME "pwm@4001c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_4001c000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_4001c000_ORD 91

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_4001c000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_4001c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_4001c000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pwm DT_N_S_soc_S_pwm_4001c000
#define DT_N_NODELABEL_pwm0        DT_N_S_soc_S_pwm_4001c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_4001c000_REG_NUM 1
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_VAL_ADDRESS 1073856512 /* 0x4001c000 */
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_4001c000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_4001c000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_4001c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_4001c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_4001c000_P_reg {1073856512 /* 0x4001c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_0 1073856512
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, reg, 0) \
	fn(DT_N_S_soc_S_pwm_4001c000, reg, 1)
#define DT_N_S_soc_S_pwm_4001c000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_4001c000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_ch0_inverted 0
#define DT_N_S_soc_S_pwm_4001c000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_ch1_inverted 0
#define DT_N_S_soc_S_pwm_4001c000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_ch2_inverted 0
#define DT_N_S_soc_S_pwm_4001c000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_ch3_inverted 0
#define DT_N_S_soc_S_pwm_4001c000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_label "PWM_0"
#define DT_N_S_soc_S_pwm_4001c000_P_label_STRING_TOKEN PWM_0
#define DT_N_S_soc_S_pwm_4001c000_P_label_STRING_UPPER_TOKEN PWM_0
#define DT_N_S_soc_S_pwm_4001c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, label, 0) \
	fn(DT_N_S_soc_S_pwm_4001c000, label, 1) \
	fn(DT_N_S_soc_S_pwm_4001c000, label, 2) \
	fn(DT_N_S_soc_S_pwm_4001c000, label, 3) \
	fn(DT_N_S_soc_S_pwm_4001c000, label, 4)
#define DT_N_S_soc_S_pwm_4001c000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_label_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_status "disabled"
#define DT_N_S_soc_S_pwm_4001c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_4001c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, status, 0) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 1) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 2) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 3) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 4) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 5) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 6) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 7)
#define DT_N_S_soc_S_pwm_4001c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts {28 /* 0x1c */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4001c000, interrupts, 0) \
	fn(DT_N_S_soc_S_pwm_4001c000, interrupts, 1)
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4001c000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4001c000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_4001c000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40021000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40021000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40021000_PATH "/soc/pwm@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40021000_FULL_NAME "pwm@40021000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40021000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40021000_ORD 92

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40021000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40021000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40021000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_pwm DT_N_S_soc_S_pwm_40021000
#define DT_N_NODELABEL_pwm1        DT_N_S_soc_S_pwm_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40021000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_40021000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40021000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_40021000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40021000_P_reg {1073876992 /* 0x40021000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40021000, reg, 0) \
	fn(DT_N_S_soc_S_pwm_40021000, reg, 1)
#define DT_N_S_soc_S_pwm_40021000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40021000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_40021000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_ch0_inverted 0
#define DT_N_S_soc_S_pwm_40021000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_ch1_inverted 0
#define DT_N_S_soc_S_pwm_40021000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_ch2_inverted 0
#define DT_N_S_soc_S_pwm_40021000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_ch3_inverted 0
#define DT_N_S_soc_S_pwm_40021000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_label "PWM_1"
#define DT_N_S_soc_S_pwm_40021000_P_label_STRING_TOKEN PWM_1
#define DT_N_S_soc_S_pwm_40021000_P_label_STRING_UPPER_TOKEN PWM_1
#define DT_N_S_soc_S_pwm_40021000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40021000, label, 0) \
	fn(DT_N_S_soc_S_pwm_40021000, label, 1) \
	fn(DT_N_S_soc_S_pwm_40021000, label, 2) \
	fn(DT_N_S_soc_S_pwm_40021000, label, 3) \
	fn(DT_N_S_soc_S_pwm_40021000, label, 4)
#define DT_N_S_soc_S_pwm_40021000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40021000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_label_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40021000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40021000, status, 0) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 1) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 2) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 3) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 4) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 5) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 6) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 7)
#define DT_N_S_soc_S_pwm_40021000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40021000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts {33 /* 0x21 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40021000, interrupts, 0) \
	fn(DT_N_S_soc_S_pwm_40021000, interrupts, 1)
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40021000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40021000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40021000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40022000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40022000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40022000_PATH "/soc/pwm@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40022000_FULL_NAME "pwm@40022000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40022000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40022000_ORD 93

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40022000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40022000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_pwm DT_N_S_soc_S_pwm_40022000
#define DT_N_NODELABEL_pwm2        DT_N_S_soc_S_pwm_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40022000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_40022000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40022000_P_reg {1073881088 /* 0x40022000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40022000, reg, 0) \
	fn(DT_N_S_soc_S_pwm_40022000, reg, 1)
#define DT_N_S_soc_S_pwm_40022000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40022000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_40022000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_ch0_inverted 0
#define DT_N_S_soc_S_pwm_40022000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_ch1_inverted 0
#define DT_N_S_soc_S_pwm_40022000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_ch2_inverted 0
#define DT_N_S_soc_S_pwm_40022000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_ch3_inverted 0
#define DT_N_S_soc_S_pwm_40022000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_label "PWM_2"
#define DT_N_S_soc_S_pwm_40022000_P_label_STRING_TOKEN PWM_2
#define DT_N_S_soc_S_pwm_40022000_P_label_STRING_UPPER_TOKEN PWM_2
#define DT_N_S_soc_S_pwm_40022000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40022000, label, 0) \
	fn(DT_N_S_soc_S_pwm_40022000, label, 1) \
	fn(DT_N_S_soc_S_pwm_40022000, label, 2) \
	fn(DT_N_S_soc_S_pwm_40022000, label, 3) \
	fn(DT_N_S_soc_S_pwm_40022000, label, 4)
#define DT_N_S_soc_S_pwm_40022000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40022000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_label_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40022000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40022000, status, 0) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 1) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 2) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 3) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 4) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 5) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 6) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 7)
#define DT_N_S_soc_S_pwm_40022000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40022000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts {34 /* 0x22 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40022000, interrupts, 0) \
	fn(DT_N_S_soc_S_pwm_40022000, interrupts, 1)
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40022000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_40022000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40022000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pwm@4002d000
 *
 * Node identifier: DT_N_S_soc_S_pwm_4002d000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_4002d000_PATH "/soc/pwm@4002d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_4002d000_FULL_NAME "pwm@4002d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_4002d000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_4002d000_ORD 94

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_4002d000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_4002d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_4002d000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_pwm DT_N_S_soc_S_pwm_4002d000
#define DT_N_NODELABEL_pwm3        DT_N_S_soc_S_pwm_4002d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_4002d000_REG_NUM 1
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_VAL_ADDRESS 1073926144 /* 0x4002d000 */
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_4002d000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_4002d000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_4002d000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_4002d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_4002d000_P_reg {1073926144 /* 0x4002d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_0 1073926144
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4002d000, reg, 0) \
	fn(DT_N_S_soc_S_pwm_4002d000, reg, 1)
#define DT_N_S_soc_S_pwm_4002d000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4002d000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_4002d000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_ch0_inverted 0
#define DT_N_S_soc_S_pwm_4002d000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_ch1_inverted 0
#define DT_N_S_soc_S_pwm_4002d000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_ch2_inverted 0
#define DT_N_S_soc_S_pwm_4002d000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_ch3_inverted 0
#define DT_N_S_soc_S_pwm_4002d000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_label "PWM_3"
#define DT_N_S_soc_S_pwm_4002d000_P_label_STRING_TOKEN PWM_3
#define DT_N_S_soc_S_pwm_4002d000_P_label_STRING_UPPER_TOKEN PWM_3
#define DT_N_S_soc_S_pwm_4002d000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4002d000, label, 0) \
	fn(DT_N_S_soc_S_pwm_4002d000, label, 1) \
	fn(DT_N_S_soc_S_pwm_4002d000, label, 2) \
	fn(DT_N_S_soc_S_pwm_4002d000, label, 3) \
	fn(DT_N_S_soc_S_pwm_4002d000, label, 4)
#define DT_N_S_soc_S_pwm_4002d000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4002d000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_label_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_status "disabled"
#define DT_N_S_soc_S_pwm_4002d000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4002d000, status, 0) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 1) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 2) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 3) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 4) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 5) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 6) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 7)
#define DT_N_S_soc_S_pwm_4002d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4002d000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4002d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts {45 /* 0x2d */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_4002d000, interrupts, 0) \
	fn(DT_N_S_soc_S_pwm_4002d000, interrupts, 1)
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_4002d000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pwm_4002d000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_4002d000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qdec@40012000
 *
 * Node identifier: DT_N_S_soc_S_qdec_40012000
 *
 * Binding (compatible = nordic,nrf-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nordic,nrf-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qdec_40012000_PATH "/soc/qdec@40012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qdec_40012000_FULL_NAME "qdec@40012000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qdec_40012000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qdec_40012000_ORD 95

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qdec_40012000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qdec_40012000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qdec_40012000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_qdec DT_N_S_soc_S_qdec_40012000
#define DT_N_NODELABEL_qdec         DT_N_S_soc_S_qdec_40012000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qdec_40012000_REG_NUM 1
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_VAL_ADDRESS 1073815552 /* 0x40012000 */
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_qdec_40012000_RANGES_NUM 0
#define DT_N_S_soc_S_qdec_40012000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qdec_40012000_IRQ_NUM 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_MATCHES_nordic_nrf_qdec 1
#define DT_N_S_soc_S_qdec_40012000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qdec_40012000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qdec_40012000_P_reg {1073815552 /* 0x40012000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_0 1073815552
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_40012000, reg, 0) \
	fn(DT_N_S_soc_S_qdec_40012000, reg, 1)
#define DT_N_S_soc_S_qdec_40012000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_40012000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts {18 /* 0x12 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_40012000, interrupts, 0) \
	fn(DT_N_S_soc_S_qdec_40012000, interrupts, 1)
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_40012000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_label "QDEC"
#define DT_N_S_soc_S_qdec_40012000_P_label_STRING_TOKEN QDEC
#define DT_N_S_soc_S_qdec_40012000_P_label_STRING_UPPER_TOKEN QDEC
#define DT_N_S_soc_S_qdec_40012000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_40012000, label, 0) \
	fn(DT_N_S_soc_S_qdec_40012000, label, 1) \
	fn(DT_N_S_soc_S_qdec_40012000, label, 2) \
	fn(DT_N_S_soc_S_qdec_40012000, label, 3)
#define DT_N_S_soc_S_qdec_40012000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_40012000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, label, 3, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_label_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_status "disabled"
#define DT_N_S_soc_S_qdec_40012000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_40012000, status, 0) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 1) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 2) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 3) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 4) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 5) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 6) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 7)
#define DT_N_S_soc_S_qdec_40012000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_40012000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qdec_40012000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_status_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible {"nordic,nrf-qdec"}
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0 "nordic,nrf-qdec"
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qdec_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qdec_40012000_P_compatible_LEN 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_wakeup_source 0
#define DT_N_S_soc_S_qdec_40012000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/qspi@40029000
 *
 * Node identifier: DT_N_S_soc_S_qspi_40029000
 *
 * Binding (compatible = nordic,nrf-qspi):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/nordic,nrf-qspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qspi_40029000_PATH "/soc/qspi@40029000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_qspi_40029000_FULL_NAME "qspi@40029000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qspi_40029000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qspi_40029000_ORD 96

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qspi_40029000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qspi_40029000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qspi_40029000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_qspi DT_N_S_soc_S_qspi_40029000
#define DT_N_NODELABEL_qspi         DT_N_S_soc_S_qspi_40029000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_qspi_40029000_REG_NUM 2
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_ADDRESS 1073909760 /* 0x40029000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_ADDRESS 301989888 /* 0x12000000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_SIZE 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_VAL_ADDRESS DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_VAL_SIZE DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_mm_VAL_ADDRESS DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_qspi_40029000_REG_NAME_qspi_mm_VAL_SIZE DT_N_S_soc_S_qspi_40029000_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_qspi_40029000_RANGES_NUM 0
#define DT_N_S_soc_S_qspi_40029000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_qspi_40029000_IRQ_NUM 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_MATCHES_nordic_nrf_qspi 1
#define DT_N_S_soc_S_qspi_40029000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_qspi_40029000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_qspi_40029000_P_interrupts {41 /* 0x29 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, interrupts, 0) \
	fn(DT_N_S_soc_S_qspi_40029000, interrupts, 1)
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_label "QSPI"
#define DT_N_S_soc_S_qspi_40029000_P_label_STRING_TOKEN QSPI
#define DT_N_S_soc_S_qspi_40029000_P_label_STRING_UPPER_TOKEN QSPI
#define DT_N_S_soc_S_qspi_40029000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, label, 0) \
	fn(DT_N_S_soc_S_qspi_40029000, label, 1) \
	fn(DT_N_S_soc_S_qspi_40029000, label, 2) \
	fn(DT_N_S_soc_S_qspi_40029000, label, 3)
#define DT_N_S_soc_S_qspi_40029000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, label, 3, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_label_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg {1073909760 /* 0x40029000 */, 4096 /* 0x1000 */, 301989888 /* 0x12000000 */, 134217728 /* 0x8000000 */}
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_0 1073909760
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_2 301989888
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_3 134217728
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, reg, 0) \
	fn(DT_N_S_soc_S_qspi_40029000, reg, 1) \
	fn(DT_N_S_soc_S_qspi_40029000, reg, 2) \
	fn(DT_N_S_soc_S_qspi_40029000, reg, 3)
#define DT_N_S_soc_S_qspi_40029000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, reg, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, reg, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, reg, 3, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_status "disabled"
#define DT_N_S_soc_S_qspi_40029000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_qspi_40029000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, status, 0) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 1) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 2) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 3) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 4) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 5) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 6) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 7)
#define DT_N_S_soc_S_qspi_40029000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_status_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible {"nordic,nrf-qspi"}
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0 "nordic,nrf-qspi"
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_compatible_LEN 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names {"qspi", "qspi_mm"}
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0 "qspi"
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1 "qspi_mm"
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0) \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_qspi_40029000, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_qspi_40029000, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_LEN 2
#define DT_N_S_soc_S_qspi_40029000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_wakeup_source 0
#define DT_N_S_soc_S_qspi_40029000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/radio@40001000
 *
 * Node identifier: DT_N_S_soc_S_radio_40001000
 *
 * Binding (compatible = nordic,nrf-radio):
 *   $ZEPHYR_BASE/dts/bindings/net/wireless/nordic,nrf-radio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_40001000_PATH "/soc/radio@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_40001000_FULL_NAME "radio@40001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_radio_40001000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_40001000_ORD 97

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_40001000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_40001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_40001000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_radio DT_N_S_soc_S_radio_40001000
#define DT_N_NODELABEL_radio         DT_N_S_soc_S_radio_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_40001000_REG_NUM 1
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_radio_40001000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_radio_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_radio_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_irq 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_radio_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_COMPAT_MATCHES_nordic_nrf_radio 1
#define DT_N_S_soc_S_radio_40001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_40001000_P_reg {1073745920 /* 0x40001000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_radio_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000, reg, 0) \
	fn(DT_N_S_soc_S_radio_40001000, reg, 1)
#define DT_N_S_soc_S_radio_40001000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_radio_40001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts {1 /* 0x1 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_0 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000, interrupts, 0) \
	fn(DT_N_S_soc_S_radio_40001000, interrupts, 1)
#define DT_N_S_soc_S_radio_40001000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_radio_40001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_dfe_supported 0
#define DT_N_S_soc_S_radio_40001000_P_dfe_supported_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_status "okay"
#define DT_N_S_soc_S_radio_40001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_radio_40001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_radio_40001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000, status, 0) \
	fn(DT_N_S_soc_S_radio_40001000, status, 1) \
	fn(DT_N_S_soc_S_radio_40001000, status, 2) \
	fn(DT_N_S_soc_S_radio_40001000, status, 3)
#define DT_N_S_soc_S_radio_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_radio_40001000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_radio_40001000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_radio_40001000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_compatible {"nordic,nrf-radio"}
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0 "nordic,nrf-radio"
#define DT_N_S_soc_S_radio_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_40001000, compatible, 0)
#define DT_N_S_soc_S_radio_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_radio_40001000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/random@4000d000
 *
 * Node identifier: DT_N_S_soc_S_random_4000d000
 *
 * Binding (compatible = nordic,nrf-rng):
 *   $ZEPHYR_BASE/dts/bindings/rng/nordic,nrf-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_random_4000d000_PATH "/soc/random@4000d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_random_4000d000_FULL_NAME "random@4000d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_random_4000d000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_random_4000d000_ORD 98

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_random_4000d000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_random_4000d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_random_4000d000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rng DT_N_S_soc_S_random_4000d000
#define DT_N_NODELABEL_rng         DT_N_S_soc_S_random_4000d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_random_4000d000_REG_NUM 1
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_VAL_ADDRESS 1073795072 /* 0x4000d000 */
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_random_4000d000_RANGES_NUM 0
#define DT_N_S_soc_S_random_4000d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_random_4000d000_IRQ_NUM 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_MATCHES_nordic_nrf_rng 1
#define DT_N_S_soc_S_random_4000d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_random_4000d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_random_4000d000_P_reg {1073795072 /* 0x4000d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_0 1073795072
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_4000d000, reg, 0) \
	fn(DT_N_S_soc_S_random_4000d000, reg, 1)
#define DT_N_S_soc_S_random_4000d000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_4000d000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_4000d000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts {13 /* 0xd */, 1 /* 0x1 */}
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_4000d000, interrupts, 0) \
	fn(DT_N_S_soc_S_random_4000d000, interrupts, 1)
#define DT_N_S_soc_S_random_4000d000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_4000d000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_4000d000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_status "okay"
#define DT_N_S_soc_S_random_4000d000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_random_4000d000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_4000d000, status, 0) \
	fn(DT_N_S_soc_S_random_4000d000, status, 1) \
	fn(DT_N_S_soc_S_random_4000d000, status, 2) \
	fn(DT_N_S_soc_S_random_4000d000, status, 3)
#define DT_N_S_soc_S_random_4000d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_4000d000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_4000d000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_4000d000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_4000d000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_status_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_compatible {"nordic,nrf-rng"}
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0 "nordic,nrf-rng"
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_4000d000, compatible, 0)
#define DT_N_S_soc_S_random_4000d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_4000d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_compatible_LEN 1
#define DT_N_S_soc_S_random_4000d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_label "RNG"
#define DT_N_S_soc_S_random_4000d000_P_label_STRING_TOKEN RNG
#define DT_N_S_soc_S_random_4000d000_P_label_STRING_UPPER_TOKEN RNG
#define DT_N_S_soc_S_random_4000d000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_4000d000, label, 0) \
	fn(DT_N_S_soc_S_random_4000d000, label, 1) \
	fn(DT_N_S_soc_S_random_4000d000, label, 2)
#define DT_N_S_soc_S_random_4000d000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_4000d000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_4000d000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_random_4000d000, label, 2, __VA_ARGS__)
#define DT_N_S_soc_S_random_4000d000_P_label_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_wakeup_source 0
#define DT_N_S_soc_S_random_4000d000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rtc@4000b000
 *
 * Node identifier: DT_N_S_soc_S_rtc_4000b000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_4000b000_PATH "/soc/rtc@4000b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_4000b000_FULL_NAME "rtc@4000b000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_4000b000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_4000b000_ORD 99

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_4000b000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_4000b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_4000b000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rtc DT_N_S_soc_S_rtc_4000b000
#define DT_N_NODELABEL_rtc0        DT_N_S_soc_S_rtc_4000b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_4000b000_REG_NUM 1
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_VAL_ADDRESS 1073786880 /* 0x4000b000 */
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_4000b000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_4000b000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_4000b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_4000b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_4000b000_P_reg {1073786880 /* 0x4000b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_0 1073786880
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4000b000, reg, 0) \
	fn(DT_N_S_soc_S_rtc_4000b000, reg, 1)
#define DT_N_S_soc_S_rtc_4000b000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_4000b000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_cc_num 3
#define DT_N_S_soc_S_rtc_4000b000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_4000b000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_4000b000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_4000b000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_label "RTC_0"
#define DT_N_S_soc_S_rtc_4000b000_P_label_STRING_TOKEN RTC_0
#define DT_N_S_soc_S_rtc_4000b000_P_label_STRING_UPPER_TOKEN RTC_0
#define DT_N_S_soc_S_rtc_4000b000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4000b000, label, 0) \
	fn(DT_N_S_soc_S_rtc_4000b000, label, 1) \
	fn(DT_N_S_soc_S_rtc_4000b000, label, 2) \
	fn(DT_N_S_soc_S_rtc_4000b000, label, 3) \
	fn(DT_N_S_soc_S_rtc_4000b000, label, 4)
#define DT_N_S_soc_S_rtc_4000b000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_4000b000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_4000b000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_4000b000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_4000b000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts {11 /* 0xb */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4000b000, interrupts, 0) \
	fn(DT_N_S_soc_S_rtc_4000b000, interrupts, 1)
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_4000b000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_prescaler 1
#define DT_N_S_soc_S_rtc_4000b000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_status "okay"
#define DT_N_S_soc_S_rtc_4000b000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_4000b000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4000b000, status, 0) \
	fn(DT_N_S_soc_S_rtc_4000b000, status, 1) \
	fn(DT_N_S_soc_S_rtc_4000b000, status, 2) \
	fn(DT_N_S_soc_S_rtc_4000b000, status, 3)
#define DT_N_S_soc_S_rtc_4000b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_4000b000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_4000b000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_4000b000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_4000b000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40011000
 *
 * Node identifier: DT_N_S_soc_S_rtc_40011000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40011000_PATH "/soc/rtc@40011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40011000_FULL_NAME "rtc@40011000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40011000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40011000_ORD 100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40011000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40011000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_rtc DT_N_S_soc_S_rtc_40011000
#define DT_N_NODELABEL_rtc1        DT_N_S_soc_S_rtc_40011000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40011000_REG_NUM 1
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_40011000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40011000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40011000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_40011000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40011000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40011000_P_reg {1073811456 /* 0x40011000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40011000, reg, 0) \
	fn(DT_N_S_soc_S_rtc_40011000, reg, 1)
#define DT_N_S_soc_S_rtc_40011000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40011000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40011000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_cc_num 4
#define DT_N_S_soc_S_rtc_40011000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_40011000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_40011000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_40011000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_label "RTC_1"
#define DT_N_S_soc_S_rtc_40011000_P_label_STRING_TOKEN RTC_1
#define DT_N_S_soc_S_rtc_40011000_P_label_STRING_UPPER_TOKEN RTC_1
#define DT_N_S_soc_S_rtc_40011000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40011000, label, 0) \
	fn(DT_N_S_soc_S_rtc_40011000, label, 1) \
	fn(DT_N_S_soc_S_rtc_40011000, label, 2) \
	fn(DT_N_S_soc_S_rtc_40011000, label, 3) \
	fn(DT_N_S_soc_S_rtc_40011000, label, 4)
#define DT_N_S_soc_S_rtc_40011000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40011000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40011000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40011000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40011000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40011000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts {17 /* 0x11 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40011000, interrupts, 0) \
	fn(DT_N_S_soc_S_rtc_40011000, interrupts, 1)
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40011000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40011000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_prescaler 1
#define DT_N_S_soc_S_rtc_40011000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_status "okay"
#define DT_N_S_soc_S_rtc_40011000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_40011000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40011000, status, 0) \
	fn(DT_N_S_soc_S_rtc_40011000, status, 1) \
	fn(DT_N_S_soc_S_rtc_40011000, status, 2) \
	fn(DT_N_S_soc_S_rtc_40011000, status, 3)
#define DT_N_S_soc_S_rtc_40011000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40011000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40011000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40011000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40011000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40011000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40011000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40024000
 *
 * Node identifier: DT_N_S_soc_S_rtc_40024000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40024000_PATH "/soc/rtc@40024000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40024000_FULL_NAME "rtc@40024000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40024000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40024000_ORD 101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40024000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40024000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40024000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_rtc DT_N_S_soc_S_rtc_40024000
#define DT_N_NODELABEL_rtc2        DT_N_S_soc_S_rtc_40024000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40024000_REG_NUM 1
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_VAL_ADDRESS 1073889280 /* 0x40024000 */
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_40024000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40024000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40024000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_40024000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40024000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40024000_P_reg {1073889280 /* 0x40024000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_0 1073889280
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40024000, reg, 0) \
	fn(DT_N_S_soc_S_rtc_40024000, reg, 1)
#define DT_N_S_soc_S_rtc_40024000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40024000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40024000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_cc_num 4
#define DT_N_S_soc_S_rtc_40024000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_40024000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_40024000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_40024000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_label "RTC_2"
#define DT_N_S_soc_S_rtc_40024000_P_label_STRING_TOKEN RTC_2
#define DT_N_S_soc_S_rtc_40024000_P_label_STRING_UPPER_TOKEN RTC_2
#define DT_N_S_soc_S_rtc_40024000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40024000, label, 0) \
	fn(DT_N_S_soc_S_rtc_40024000, label, 1) \
	fn(DT_N_S_soc_S_rtc_40024000, label, 2) \
	fn(DT_N_S_soc_S_rtc_40024000, label, 3) \
	fn(DT_N_S_soc_S_rtc_40024000, label, 4)
#define DT_N_S_soc_S_rtc_40024000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40024000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40024000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40024000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40024000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40024000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts {36 /* 0x24 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40024000, interrupts, 0) \
	fn(DT_N_S_soc_S_rtc_40024000, interrupts, 1)
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40024000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40024000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_prescaler 1
#define DT_N_S_soc_S_rtc_40024000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_status "okay"
#define DT_N_S_soc_S_rtc_40024000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_40024000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40024000, status, 0) \
	fn(DT_N_S_soc_S_rtc_40024000, status, 1) \
	fn(DT_N_S_soc_S_rtc_40024000, status, 2) \
	fn(DT_N_S_soc_S_rtc_40024000, status, 3)
#define DT_N_S_soc_S_rtc_40024000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40024000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40024000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40024000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40024000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40024000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40024000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003000
 *
 * Node identifier: DT_N_S_soc_S_spi_40003000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003000_PATH "/soc/spi@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003000_FULL_NAME "spi@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003000_ORD 102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_spim  DT_N_S_soc_S_spi_40003000
#define DT_N_NODELABEL_spi0          DT_N_S_soc_S_spi_40003000
#define DT_N_NODELABEL_pro_micro_spi DT_N_S_soc_S_spi_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003000_REG_NUM 1
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003000_P_miso_pull_up 0
#define DT_N_S_soc_S_spi_40003000_P_miso_pull_up_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_miso_pull_down 0
#define DT_N_S_soc_S_spi_40003000_P_miso_pull_down_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_40003000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg {1073754112 /* 0x40003000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40003000, reg, 1)
#define DT_N_S_soc_S_spi_40003000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts {3 /* 0x3 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40003000, interrupts, 1)
#define DT_N_S_soc_S_spi_40003000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_label "SPI_0"
#define DT_N_S_soc_S_spi_40003000_P_label_STRING_TOKEN SPI_0
#define DT_N_S_soc_S_spi_40003000_P_label_STRING_UPPER_TOKEN SPI_0
#define DT_N_S_soc_S_spi_40003000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003000, label, 0) \
	fn(DT_N_S_soc_S_spi_40003000, label, 1) \
	fn(DT_N_S_soc_S_spi_40003000, label, 2) \
	fn(DT_N_S_soc_S_spi_40003000, label, 3) \
	fn(DT_N_S_soc_S_spi_40003000, label, 4)
#define DT_N_S_soc_S_spi_40003000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_status "disabled"
#define DT_N_S_soc_S_spi_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003000, status, 0) \
	fn(DT_N_S_soc_S_spi_40003000, status, 1) \
	fn(DT_N_S_soc_S_spi_40003000, status, 2) \
	fn(DT_N_S_soc_S_spi_40003000, status, 3) \
	fn(DT_N_S_soc_S_spi_40003000, status, 4) \
	fn(DT_N_S_soc_S_spi_40003000, status, 5) \
	fn(DT_N_S_soc_S_spi_40003000, status, 6) \
	fn(DT_N_S_soc_S_spi_40003000, status, 7)
#define DT_N_S_soc_S_spi_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003000, compatible, 0)
#define DT_N_S_soc_S_spi_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40004000
 *
 * Node identifier: DT_N_S_soc_S_spi_40004000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40004000_PATH "/soc/spi@40004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40004000_FULL_NAME "spi@40004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40004000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40004000_ORD 103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40004000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40004000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_spim DT_N_S_soc_S_spi_40004000
#define DT_N_NODELABEL_spi1         DT_N_S_soc_S_spi_40004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40004000_REG_NUM 1
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_VAL_ADDRESS 1073758208 /* 0x40004000 */
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40004000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40004000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_40004000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40004000_P_miso_pull_up 0
#define DT_N_S_soc_S_spi_40004000_P_miso_pull_up_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_miso_pull_down 0
#define DT_N_S_soc_S_spi_40004000_P_miso_pull_down_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_40004000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg {1073758208 /* 0x40004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_0 1073758208
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40004000, reg, 1)
#define DT_N_S_soc_S_spi_40004000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts {4 /* 0x4 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40004000, interrupts, 1)
#define DT_N_S_soc_S_spi_40004000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_label "SPI_1"
#define DT_N_S_soc_S_spi_40004000_P_label_STRING_TOKEN SPI_1
#define DT_N_S_soc_S_spi_40004000_P_label_STRING_UPPER_TOKEN SPI_1
#define DT_N_S_soc_S_spi_40004000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, label, 0) \
	fn(DT_N_S_soc_S_spi_40004000, label, 1) \
	fn(DT_N_S_soc_S_spi_40004000, label, 2) \
	fn(DT_N_S_soc_S_spi_40004000, label, 3) \
	fn(DT_N_S_soc_S_spi_40004000, label, 4)
#define DT_N_S_soc_S_spi_40004000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_status "disabled"
#define DT_N_S_soc_S_spi_40004000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40004000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, status, 0) \
	fn(DT_N_S_soc_S_spi_40004000, status, 1) \
	fn(DT_N_S_soc_S_spi_40004000, status, 2) \
	fn(DT_N_S_soc_S_spi_40004000, status, 3) \
	fn(DT_N_S_soc_S_spi_40004000, status, 4) \
	fn(DT_N_S_soc_S_spi_40004000, status, 5) \
	fn(DT_N_S_soc_S_spi_40004000, status, 6) \
	fn(DT_N_S_soc_S_spi_40004000, status, 7)
#define DT_N_S_soc_S_spi_40004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40004000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_40004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40004000, compatible, 0)
#define DT_N_S_soc_S_spi_40004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40004000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40004000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40023000
 *
 * Node identifier: DT_N_S_soc_S_spi_40023000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40023000_PATH "/soc/spi@40023000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40023000_FULL_NAME "spi@40023000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40023000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40023000_ORD 104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40023000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40023000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40023000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_spim DT_N_S_soc_S_spi_40023000
#define DT_N_NODELABEL_spi2         DT_N_S_soc_S_spi_40023000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40023000_REG_NUM 1
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_VAL_ADDRESS 1073885184 /* 0x40023000 */
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40023000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40023000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40023000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_40023000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40023000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40023000_P_miso_pull_up 0
#define DT_N_S_soc_S_spi_40023000_P_miso_pull_up_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_miso_pull_down 0
#define DT_N_S_soc_S_spi_40023000_P_miso_pull_down_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_40023000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg {1073885184 /* 0x40023000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_0 1073885184
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40023000, reg, 1)
#define DT_N_S_soc_S_spi_40023000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts {35 /* 0x23 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40023000, interrupts, 1)
#define DT_N_S_soc_S_spi_40023000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_label "SPI_2"
#define DT_N_S_soc_S_spi_40023000_P_label_STRING_TOKEN SPI_2
#define DT_N_S_soc_S_spi_40023000_P_label_STRING_UPPER_TOKEN SPI_2
#define DT_N_S_soc_S_spi_40023000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, label, 0) \
	fn(DT_N_S_soc_S_spi_40023000, label, 1) \
	fn(DT_N_S_soc_S_spi_40023000, label, 2) \
	fn(DT_N_S_soc_S_spi_40023000, label, 3) \
	fn(DT_N_S_soc_S_spi_40023000, label, 4)
#define DT_N_S_soc_S_spi_40023000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_status "disabled"
#define DT_N_S_soc_S_spi_40023000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40023000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, status, 0) \
	fn(DT_N_S_soc_S_spi_40023000, status, 1) \
	fn(DT_N_S_soc_S_spi_40023000, status, 2) \
	fn(DT_N_S_soc_S_spi_40023000, status, 3) \
	fn(DT_N_S_soc_S_spi_40023000, status, 4) \
	fn(DT_N_S_soc_S_spi_40023000, status, 5) \
	fn(DT_N_S_soc_S_spi_40023000, status, 6) \
	fn(DT_N_S_soc_S_spi_40023000, status, 7)
#define DT_N_S_soc_S_spi_40023000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40023000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_40023000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40023000, compatible, 0)
#define DT_N_S_soc_S_spi_40023000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40023000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40023000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40023000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40023000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@4002f000
 *
 * Node identifier: DT_N_S_soc_S_spi_4002f000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_4002f000_PATH "/soc/spi@4002f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_4002f000_FULL_NAME "spi@4002f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_4002f000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_4002f000_ORD 105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_4002f000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_4002f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_4002f000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_spim DT_N_S_soc_S_spi_4002f000
#define DT_N_NODELABEL_spi3         DT_N_S_soc_S_spi_4002f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_4002f000_REG_NUM 1
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_VAL_ADDRESS 1073934336 /* 0x4002f000 */
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_4002f000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_4002f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_4002f000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_irq 47
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_4002f000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_4002f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_4002f000_P_miso_pull_up 0
#define DT_N_S_soc_S_spi_4002f000_P_miso_pull_up_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_miso_pull_down 0
#define DT_N_S_soc_S_spi_4002f000_P_miso_pull_down_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_4002f000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg {1073934336 /* 0x4002f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_0 1073934336
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4002f000, reg, 0) \
	fn(DT_N_S_soc_S_spi_4002f000, reg, 1)
#define DT_N_S_soc_S_spi_4002f000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4002f000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts {47 /* 0x2f */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_0 47
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4002f000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_4002f000, interrupts, 1)
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4002f000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_label "SPI_3"
#define DT_N_S_soc_S_spi_4002f000_P_label_STRING_TOKEN SPI_3
#define DT_N_S_soc_S_spi_4002f000_P_label_STRING_UPPER_TOKEN SPI_3
#define DT_N_S_soc_S_spi_4002f000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4002f000, label, 0) \
	fn(DT_N_S_soc_S_spi_4002f000, label, 1) \
	fn(DT_N_S_soc_S_spi_4002f000, label, 2) \
	fn(DT_N_S_soc_S_spi_4002f000, label, 3) \
	fn(DT_N_S_soc_S_spi_4002f000, label, 4)
#define DT_N_S_soc_S_spi_4002f000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4002f000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_status "disabled"
#define DT_N_S_soc_S_spi_4002f000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4002f000, status, 0) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 1) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 2) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 3) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 4) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 5) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 6) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 7)
#define DT_N_S_soc_S_spi_4002f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4002f000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4002f000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4002f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4002f000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_4002f000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/temp@4000c000
 *
 * Node identifier: DT_N_S_soc_S_temp_4000c000
 *
 * Binding (compatible = nordic,nrf-temp):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nordic,nrf-temp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_temp_4000c000_PATH "/soc/temp@4000c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_temp_4000c000_FULL_NAME "temp@4000c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_temp_4000c000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_temp_4000c000_ORD 106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_temp_4000c000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_temp_4000c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_temp_4000c000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_temp DT_N_S_soc_S_temp_4000c000
#define DT_N_NODELABEL_temp         DT_N_S_soc_S_temp_4000c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_temp_4000c000_REG_NUM 1
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_VAL_ADDRESS 1073790976 /* 0x4000c000 */
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_temp_4000c000_RANGES_NUM 0
#define DT_N_S_soc_S_temp_4000c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_temp_4000c000_IRQ_NUM 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_MATCHES_nordic_nrf_temp 1
#define DT_N_S_soc_S_temp_4000c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_temp_4000c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_temp_4000c000_P_reg {1073790976 /* 0x4000c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_0 1073790976
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_4000c000, reg, 0) \
	fn(DT_N_S_soc_S_temp_4000c000, reg, 1)
#define DT_N_S_soc_S_temp_4000c000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_temp_4000c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts {12 /* 0xc */, 1 /* 0x1 */}
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_4000c000, interrupts, 0) \
	fn(DT_N_S_soc_S_temp_4000c000, interrupts, 1)
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_temp_4000c000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_label "TEMP_0"
#define DT_N_S_soc_S_temp_4000c000_P_label_STRING_TOKEN TEMP_0
#define DT_N_S_soc_S_temp_4000c000_P_label_STRING_UPPER_TOKEN TEMP_0
#define DT_N_S_soc_S_temp_4000c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_4000c000, label, 0) \
	fn(DT_N_S_soc_S_temp_4000c000, label, 1) \
	fn(DT_N_S_soc_S_temp_4000c000, label, 2) \
	fn(DT_N_S_soc_S_temp_4000c000, label, 3) \
	fn(DT_N_S_soc_S_temp_4000c000, label, 4) \
	fn(DT_N_S_soc_S_temp_4000c000, label, 5)
#define DT_N_S_soc_S_temp_4000c000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_temp_4000c000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_temp_4000c000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_temp_4000c000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_temp_4000c000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_temp_4000c000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_label_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_status "okay"
#define DT_N_S_soc_S_temp_4000c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_temp_4000c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_4000c000, status, 0) \
	fn(DT_N_S_soc_S_temp_4000c000, status, 1) \
	fn(DT_N_S_soc_S_temp_4000c000, status, 2) \
	fn(DT_N_S_soc_S_temp_4000c000, status, 3)
#define DT_N_S_soc_S_temp_4000c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_temp_4000c000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_temp_4000c000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_temp_4000c000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_status_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible {"nordic,nrf-temp"}
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0 "nordic,nrf-temp"
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_4000c000_P_compatible_LEN 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_wakeup_source 0
#define DT_N_S_soc_S_temp_4000c000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@40008000
 *
 * Node identifier: DT_N_S_soc_S_timer_40008000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40008000_PATH "/soc/timer@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40008000_FULL_NAME "timer@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40008000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40008000_ORD 107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40008000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40008000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_timer DT_N_S_soc_S_timer_40008000
#define DT_N_NODELABEL_timer0        DT_N_S_soc_S_timer_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40008000_REG_NUM 1
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_40008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40008000_P_reg {1073774592 /* 0x40008000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40008000, reg, 0) \
	fn(DT_N_S_soc_S_timer_40008000, reg, 1)
#define DT_N_S_soc_S_timer_40008000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40008000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40008000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_cc_num 4
#define DT_N_S_soc_S_timer_40008000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts {8 /* 0x8 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40008000, interrupts, 0) \
	fn(DT_N_S_soc_S_timer_40008000, interrupts, 1)
#define DT_N_S_soc_S_timer_40008000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40008000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40008000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_label "TIMER_0"
#define DT_N_S_soc_S_timer_40008000_P_label_STRING_TOKEN TIMER_0
#define DT_N_S_soc_S_timer_40008000_P_label_STRING_UPPER_TOKEN TIMER_0
#define DT_N_S_soc_S_timer_40008000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40008000, label, 0) \
	fn(DT_N_S_soc_S_timer_40008000, label, 1) \
	fn(DT_N_S_soc_S_timer_40008000, label, 2) \
	fn(DT_N_S_soc_S_timer_40008000, label, 3) \
	fn(DT_N_S_soc_S_timer_40008000, label, 4) \
	fn(DT_N_S_soc_S_timer_40008000, label, 5) \
	fn(DT_N_S_soc_S_timer_40008000, label, 6)
#define DT_N_S_soc_S_timer_40008000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40008000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40008000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40008000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40008000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40008000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40008000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40008000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_label_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_prescaler 0
#define DT_N_S_soc_S_timer_40008000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_status "okay"
#define DT_N_S_soc_S_timer_40008000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40008000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40008000, status, 0) \
	fn(DT_N_S_soc_S_timer_40008000, status, 1) \
	fn(DT_N_S_soc_S_timer_40008000, status, 2) \
	fn(DT_N_S_soc_S_timer_40008000, status, 3)
#define DT_N_S_soc_S_timer_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40008000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40008000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40008000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40008000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40008000, compatible, 0)
#define DT_N_S_soc_S_timer_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40008000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40008000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@40009000
 *
 * Node identifier: DT_N_S_soc_S_timer_40009000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40009000_PATH "/soc/timer@40009000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40009000_FULL_NAME "timer@40009000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40009000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40009000_ORD 108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40009000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40009000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40009000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_timer DT_N_S_soc_S_timer_40009000
#define DT_N_NODELABEL_timer1        DT_N_S_soc_S_timer_40009000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40009000_REG_NUM 1
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_VAL_ADDRESS 1073778688 /* 0x40009000 */
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40009000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40009000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40009000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_40009000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40009000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40009000_P_reg {1073778688 /* 0x40009000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_0 1073778688
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40009000, reg, 0) \
	fn(DT_N_S_soc_S_timer_40009000, reg, 1)
#define DT_N_S_soc_S_timer_40009000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40009000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40009000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_cc_num 4
#define DT_N_S_soc_S_timer_40009000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts {9 /* 0x9 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40009000, interrupts, 0) \
	fn(DT_N_S_soc_S_timer_40009000, interrupts, 1)
#define DT_N_S_soc_S_timer_40009000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40009000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40009000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_label "TIMER_1"
#define DT_N_S_soc_S_timer_40009000_P_label_STRING_TOKEN TIMER_1
#define DT_N_S_soc_S_timer_40009000_P_label_STRING_UPPER_TOKEN TIMER_1
#define DT_N_S_soc_S_timer_40009000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40009000, label, 0) \
	fn(DT_N_S_soc_S_timer_40009000, label, 1) \
	fn(DT_N_S_soc_S_timer_40009000, label, 2) \
	fn(DT_N_S_soc_S_timer_40009000, label, 3) \
	fn(DT_N_S_soc_S_timer_40009000, label, 4) \
	fn(DT_N_S_soc_S_timer_40009000, label, 5) \
	fn(DT_N_S_soc_S_timer_40009000, label, 6)
#define DT_N_S_soc_S_timer_40009000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40009000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40009000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40009000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40009000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40009000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40009000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40009000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_label_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_prescaler 0
#define DT_N_S_soc_S_timer_40009000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_status "okay"
#define DT_N_S_soc_S_timer_40009000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40009000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40009000, status, 0) \
	fn(DT_N_S_soc_S_timer_40009000, status, 1) \
	fn(DT_N_S_soc_S_timer_40009000, status, 2) \
	fn(DT_N_S_soc_S_timer_40009000, status, 3)
#define DT_N_S_soc_S_timer_40009000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40009000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40009000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40009000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40009000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40009000, compatible, 0)
#define DT_N_S_soc_S_timer_40009000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40009000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40009000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40009000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@4001a000
 *
 * Node identifier: DT_N_S_soc_S_timer_4001a000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4001a000_PATH "/soc/timer@4001a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4001a000_FULL_NAME "timer@4001a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4001a000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4001a000_ORD 109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4001a000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4001a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4001a000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_timer DT_N_S_soc_S_timer_4001a000
#define DT_N_NODELABEL_timer3        DT_N_S_soc_S_timer_4001a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4001a000_REG_NUM 1
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_VAL_ADDRESS 1073848320 /* 0x4001a000 */
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4001a000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4001a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4001a000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4001a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4001a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4001a000_P_reg {1073848320 /* 0x4001a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_0 1073848320
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001a000, reg, 0) \
	fn(DT_N_S_soc_S_timer_4001a000, reg, 1)
#define DT_N_S_soc_S_timer_4001a000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001a000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001a000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_cc_num 6
#define DT_N_S_soc_S_timer_4001a000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts {26 /* 0x1a */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001a000, interrupts, 0) \
	fn(DT_N_S_soc_S_timer_4001a000, interrupts, 1)
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001a000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001a000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_label "TIMER_3"
#define DT_N_S_soc_S_timer_4001a000_P_label_STRING_TOKEN TIMER_3
#define DT_N_S_soc_S_timer_4001a000_P_label_STRING_UPPER_TOKEN TIMER_3
#define DT_N_S_soc_S_timer_4001a000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001a000, label, 0) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 1) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 2) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 3) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 4) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 5) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 6)
#define DT_N_S_soc_S_timer_4001a000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001a000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001a000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_label_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_prescaler 0
#define DT_N_S_soc_S_timer_4001a000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_status "okay"
#define DT_N_S_soc_S_timer_4001a000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_4001a000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001a000, status, 0) \
	fn(DT_N_S_soc_S_timer_4001a000, status, 1) \
	fn(DT_N_S_soc_S_timer_4001a000, status, 2) \
	fn(DT_N_S_soc_S_timer_4001a000, status, 3)
#define DT_N_S_soc_S_timer_4001a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001a000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001a000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001a000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001a000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001a000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4001a000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@4001b000
 *
 * Node identifier: DT_N_S_soc_S_timer_4001b000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4001b000_PATH "/soc/timer@4001b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4001b000_FULL_NAME "timer@4001b000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4001b000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4001b000_ORD 110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4001b000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4001b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4001b000_EXISTS 1
#define DT_N_INST_4_nordic_nrf_timer DT_N_S_soc_S_timer_4001b000
#define DT_N_NODELABEL_timer4        DT_N_S_soc_S_timer_4001b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4001b000_REG_NUM 1
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_VAL_ADDRESS 1073852416 /* 0x4001b000 */
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4001b000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4001b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4001b000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4001b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4001b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4001b000_P_reg {1073852416 /* 0x4001b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_0 1073852416
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001b000, reg, 0) \
	fn(DT_N_S_soc_S_timer_4001b000, reg, 1)
#define DT_N_S_soc_S_timer_4001b000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001b000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001b000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_cc_num 6
#define DT_N_S_soc_S_timer_4001b000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts {27 /* 0x1b */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001b000, interrupts, 0) \
	fn(DT_N_S_soc_S_timer_4001b000, interrupts, 1)
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001b000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001b000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_label "TIMER_4"
#define DT_N_S_soc_S_timer_4001b000_P_label_STRING_TOKEN TIMER_4
#define DT_N_S_soc_S_timer_4001b000_P_label_STRING_UPPER_TOKEN TIMER_4
#define DT_N_S_soc_S_timer_4001b000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001b000, label, 0) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 1) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 2) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 3) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 4) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 5) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 6)
#define DT_N_S_soc_S_timer_4001b000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001b000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001b000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_label_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_prescaler 0
#define DT_N_S_soc_S_timer_4001b000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_status "okay"
#define DT_N_S_soc_S_timer_4001b000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_4001b000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001b000, status, 0) \
	fn(DT_N_S_soc_S_timer_4001b000, status, 1) \
	fn(DT_N_S_soc_S_timer_4001b000, status, 2) \
	fn(DT_N_S_soc_S_timer_4001b000, status, 3)
#define DT_N_S_soc_S_timer_4001b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001b000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001b000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001b000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_4001b000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4001b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4001b000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4001b000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, status, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 1) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 2) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 3) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 4) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 5) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 6) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 7)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1

/*
 * Devicetree node: /soc/uart@40002000
 *
 * Node identifier: DT_N_S_soc_S_uart_40002000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE/dts/bindings/serial/nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40002000_PATH "/soc/uart@40002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40002000_FULL_NAME "uart@40002000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40002000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40002000_ORD 112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40002000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40002000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40002000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uarte    DT_N_S_soc_S_uart_40002000
#define DT_N_NODELABEL_uart0            DT_N_S_soc_S_uart_40002000
#define DT_N_NODELABEL_pro_micro_serial DT_N_S_soc_S_uart_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40002000_REG_NUM 1
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40002000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_uart_40002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40002000_P_reg {1073750016 /* 0x40002000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, reg, 0) \
	fn(DT_N_S_soc_S_uart_40002000, reg, 1)
#define DT_N_S_soc_S_uart_40002000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts {2 /* 0x2 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, interrupts, 0) \
	fn(DT_N_S_soc_S_uart_40002000, interrupts, 1)
#define DT_N_S_soc_S_uart_40002000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_disable_rx 0
#define DT_N_S_soc_S_uart_40002000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_tx_pin 6
#define DT_N_S_soc_S_uart_40002000_P_tx_pin_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_rx_pin 8
#define DT_N_S_soc_S_uart_40002000_P_rx_pin_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_rx_pull_up 0
#define DT_N_S_soc_S_uart_40002000_P_rx_pull_up_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_cts_pull_up 0
#define DT_N_S_soc_S_uart_40002000_P_cts_pull_up_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_label "UART_0"
#define DT_N_S_soc_S_uart_40002000_P_label_STRING_TOKEN UART_0
#define DT_N_S_soc_S_uart_40002000_P_label_STRING_UPPER_TOKEN UART_0
#define DT_N_S_soc_S_uart_40002000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, label, 0) \
	fn(DT_N_S_soc_S_uart_40002000, label, 1) \
	fn(DT_N_S_soc_S_uart_40002000, label, 2) \
	fn(DT_N_S_soc_S_uart_40002000, label, 3) \
	fn(DT_N_S_soc_S_uart_40002000, label, 4) \
	fn(DT_N_S_soc_S_uart_40002000, label, 5)
#define DT_N_S_soc_S_uart_40002000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_label_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40002000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_status "disabled"
#define DT_N_S_soc_S_uart_40002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, status, 0) \
	fn(DT_N_S_soc_S_uart_40002000, status, 1) \
	fn(DT_N_S_soc_S_uart_40002000, status, 2) \
	fn(DT_N_S_soc_S_uart_40002000, status, 3) \
	fn(DT_N_S_soc_S_uart_40002000, status, 4) \
	fn(DT_N_S_soc_S_uart_40002000, status, 5) \
	fn(DT_N_S_soc_S_uart_40002000, status, 6) \
	fn(DT_N_S_soc_S_uart_40002000, status, 7)
#define DT_N_S_soc_S_uart_40002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40002000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40002000, compatible, 0)
#define DT_N_S_soc_S_uart_40002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40002000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/uart@40028000
 *
 * Node identifier: DT_N_S_soc_S_uart_40028000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE/dts/bindings/serial/nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40028000_PATH "/soc/uart@40028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40028000_FULL_NAME "uart@40028000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40028000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40028000_ORD 113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40028000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40028000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40028000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_uarte DT_N_S_soc_S_uart_40028000
#define DT_N_NODELABEL_uart1         DT_N_S_soc_S_uart_40028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40028000_REG_NUM 1
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_VAL_ADDRESS 1073905664 /* 0x40028000 */
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40028000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40028000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_irq 40
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_uart_40028000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40028000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40028000_P_reg {1073905664 /* 0x40028000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_0 1073905664
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, reg, 0) \
	fn(DT_N_S_soc_S_uart_40028000, reg, 1)
#define DT_N_S_soc_S_uart_40028000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts {40 /* 0x28 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_0 40
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, interrupts, 0) \
	fn(DT_N_S_soc_S_uart_40028000, interrupts, 1)
#define DT_N_S_soc_S_uart_40028000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_disable_rx 0
#define DT_N_S_soc_S_uart_40028000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_rx_pull_up 0
#define DT_N_S_soc_S_uart_40028000_P_rx_pull_up_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_cts_pull_up 0
#define DT_N_S_soc_S_uart_40028000_P_cts_pull_up_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_label "UART_1"
#define DT_N_S_soc_S_uart_40028000_P_label_STRING_TOKEN UART_1
#define DT_N_S_soc_S_uart_40028000_P_label_STRING_UPPER_TOKEN UART_1
#define DT_N_S_soc_S_uart_40028000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, label, 0) \
	fn(DT_N_S_soc_S_uart_40028000, label, 1) \
	fn(DT_N_S_soc_S_uart_40028000, label, 2) \
	fn(DT_N_S_soc_S_uart_40028000, label, 3) \
	fn(DT_N_S_soc_S_uart_40028000, label, 4) \
	fn(DT_N_S_soc_S_uart_40028000, label, 5)
#define DT_N_S_soc_S_uart_40028000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_label_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40028000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_status "disabled"
#define DT_N_S_soc_S_uart_40028000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40028000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, status, 0) \
	fn(DT_N_S_soc_S_uart_40028000, status, 1) \
	fn(DT_N_S_soc_S_uart_40028000, status, 2) \
	fn(DT_N_S_soc_S_uart_40028000, status, 3) \
	fn(DT_N_S_soc_S_uart_40028000, status, 4) \
	fn(DT_N_S_soc_S_uart_40028000, status, 5) \
	fn(DT_N_S_soc_S_uart_40028000, status, 6) \
	fn(DT_N_S_soc_S_uart_40028000, status, 7)
#define DT_N_S_soc_S_uart_40028000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_40028000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40028000, compatible, 0)
#define DT_N_S_soc_S_uart_40028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40028000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40028000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/uicr@10001000
 *
 * Node identifier: DT_N_S_soc_S_uicr_10001000
 *
 * Binding (compatible = nordic,nrf-uicr):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-uicr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uicr_10001000_PATH "/soc/uicr@10001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uicr_10001000_FULL_NAME "uicr@10001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uicr_10001000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uicr_10001000_ORD 114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uicr_10001000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uicr_10001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uicr_10001000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uicr DT_N_S_soc_S_uicr_10001000
#define DT_N_NODELABEL_uicr         DT_N_S_soc_S_uicr_10001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uicr_10001000_REG_NUM 1
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_VAL_ADDRESS 268439552 /* 0x10001000 */
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uicr_10001000_RANGES_NUM 0
#define DT_N_S_soc_S_uicr_10001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uicr_10001000_IRQ_NUM 0
#define DT_N_S_soc_S_uicr_10001000_COMPAT_MATCHES_nordic_nrf_uicr 1
#define DT_N_S_soc_S_uicr_10001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uicr_10001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uicr_10001000_P_reg {268439552 /* 0x10001000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_0 268439552
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_10001000, reg, 0) \
	fn(DT_N_S_soc_S_uicr_10001000, reg, 1)
#define DT_N_S_soc_S_uicr_10001000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uicr_10001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_status "okay"
#define DT_N_S_soc_S_uicr_10001000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uicr_10001000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_10001000, status, 0) \
	fn(DT_N_S_soc_S_uicr_10001000, status, 1) \
	fn(DT_N_S_soc_S_uicr_10001000, status, 2) \
	fn(DT_N_S_soc_S_uicr_10001000, status, 3)
#define DT_N_S_soc_S_uicr_10001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uicr_10001000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uicr_10001000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uicr_10001000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_status_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible {"nordic,nrf-uicr"}
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0 "nordic,nrf-uicr"
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_10001000_P_compatible_LEN 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_wakeup_source 0
#define DT_N_S_soc_S_uicr_10001000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40010000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40010000
 *
 * Binding (compatible = nordic,nrf-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/nordic,nrf-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40010000_PATH "/soc/watchdog@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40010000_FULL_NAME "watchdog@40010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40010000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40010000_ORD 115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40010000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40010000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_watchdog DT_N_S_soc_S_watchdog_40010000
#define DT_N_NODELABEL_wdt              DT_N_S_soc_S_watchdog_40010000
#define DT_N_NODELABEL_wdt0             DT_N_S_soc_S_watchdog_40010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40010000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_watchdog_40010000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40010000_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_MATCHES_nordic_nrf_watchdog 1
#define DT_N_S_soc_S_watchdog_40010000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40010000_P_reg {1073807360 /* 0x40010000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40010000, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40010000, reg, 1)
#define DT_N_S_soc_S_watchdog_40010000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40010000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_label "WDT"
#define DT_N_S_soc_S_watchdog_40010000_P_label_STRING_TOKEN WDT
#define DT_N_S_soc_S_watchdog_40010000_P_label_STRING_UPPER_TOKEN WDT
#define DT_N_S_soc_S_watchdog_40010000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40010000, label, 0) \
	fn(DT_N_S_soc_S_watchdog_40010000, label, 1) \
	fn(DT_N_S_soc_S_watchdog_40010000, label, 2)
#define DT_N_S_soc_S_watchdog_40010000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40010000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40010000, label, 2, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts {16 /* 0x10 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40010000, interrupts, 0) \
	fn(DT_N_S_soc_S_watchdog_40010000, interrupts, 1)
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40010000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40010000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40010000, status, 0) \
	fn(DT_N_S_soc_S_watchdog_40010000, status, 1) \
	fn(DT_N_S_soc_S_watchdog_40010000, status, 2) \
	fn(DT_N_S_soc_S_watchdog_40010000, status, 3)
#define DT_N_S_soc_S_watchdog_40010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40010000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40010000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40010000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible {"nordic,nrf-watchdog"}
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0 "nordic,nrf-watchdog"
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40010000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/crypto@5002a000
 *
 * Node identifier: DT_N_S_soc_S_crypto_5002a000
 *
 * Binding (compatible = nordic,nrf-cc310):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-cc310.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_crypto_5002a000_PATH "/soc/crypto@5002a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_crypto_5002a000_FULL_NAME "crypto@5002a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_crypto_5002a000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000)
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000) 
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_crypto_5002a000_ORD 116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_crypto_5002a000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_crypto_5002a000_SUPPORTS_ORDS \
	117, /* /soc/crypto@5002a000/crypto@5002b000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_crypto_5002a000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_cc310 DT_N_S_soc_S_crypto_5002a000
#define DT_N_NODELABEL_cryptocell    DT_N_S_soc_S_crypto_5002a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_crypto_5002a000_REG_NUM 1
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_ADDRESS 1342349312 /* 0x5002a000 */
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_5002a000_RANGES_NUM 0
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_crypto_5002a000_IRQ_NUM 0
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MATCHES_nordic_nrf_cc310 1
#define DT_N_S_soc_S_crypto_5002a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_crypto_5002a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_crypto_5002a000_P_reg {1342349312 /* 0x5002a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_0 1342349312
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, reg, 0) \
	fn(DT_N_S_soc_S_crypto_5002a000, reg, 1)
#define DT_N_S_soc_S_crypto_5002a000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_label "CRYPTOCELL"
#define DT_N_S_soc_S_crypto_5002a000_P_label_STRING_TOKEN CRYPTOCELL
#define DT_N_S_soc_S_crypto_5002a000_P_label_STRING_UPPER_TOKEN CRYPTOCELL
#define DT_N_S_soc_S_crypto_5002a000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, label, 0) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 1) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 2) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 3) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 4) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 5) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 6) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 7) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 8) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 9)
#define DT_N_S_soc_S_crypto_5002a000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_label_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_status "okay"
#define DT_N_S_soc_S_crypto_5002a000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_crypto_5002a000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, status, 0) \
	fn(DT_N_S_soc_S_crypto_5002a000, status, 1) \
	fn(DT_N_S_soc_S_crypto_5002a000, status, 2) \
	fn(DT_N_S_soc_S_crypto_5002a000, status, 3)
#define DT_N_S_soc_S_crypto_5002a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_status_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible {"nordic,nrf-cc310"}
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0 "nordic,nrf-cc310"
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_LEN 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_wakeup_source 0
#define DT_N_S_soc_S_crypto_5002a000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/crypto@5002a000/crypto@5002b000
 *
 * Node identifier: DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000
 *
 * Binding (compatible = arm,cryptocell-310):
 *   $ZEPHYR_BASE/dts/bindings/crypto/arm,cryptocell-310.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_PATH "/soc/crypto@5002a000/crypto@5002b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FULL_NAME "crypto@5002b000"

/* Node parent (/soc/crypto@5002a000) identifier: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_PARENT DT_N_S_soc_S_crypto_5002a000
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_ORD 117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REQUIRES_ORDS \
	15, /* /soc/interrupt-controller@e000e100 */ \
	116, /* /soc/crypto@5002a000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_EXISTS 1
#define DT_N_INST_0_arm_cryptocell_310 DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000
#define DT_N_NODELABEL_cryptocell310   DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_NUM 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_IDX_0_VAL_ADDRESS 1342353408 /* 0x5002b000 */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_RANGES_NUM 0
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_NUM 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_irq 42
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_COMPAT_MATCHES_arm_cryptocell_310 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg {1342353408 /* 0x5002b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_0 1342353408
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, reg, 0) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, reg, 1)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_label "CRYPTOCELL310"
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_label_STRING_TOKEN CRYPTOCELL310
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_label_STRING_UPPER_TOKEN CRYPTOCELL310
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 0) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 1) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 2) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 3) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 4) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 5) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 6) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 7) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 8) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 9) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 10) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 11) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 12)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, label, 12, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_label_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts {42 /* 0x2a */, 1 /* 0x1 */}
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_0 42
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, interrupts, 0) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, interrupts, 1)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible {"arm,cryptocell-310"}
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_IDX_0 "arm,cryptocell-310"
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, compatible, 0)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_LEN 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_wakeup_source 0
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000
 *
 * Binding (compatible = nordic,nrf52-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/nordic,nrf52-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_PATH "/soc/flash-controller@4001e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_FULL_NAME "flash-controller@4001e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0) 
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_ORD 118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_SUPPORTS_ORDS \
	119, /* /soc/flash-controller@4001e000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf52_flash_controller DT_N_S_soc_S_flash_controller_4001e000
#define DT_N_NODELABEL_flash_controller           DT_N_S_soc_S_flash_controller_4001e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_VAL_ADDRESS 1073864704 /* 0x4001e000 */
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_4001e000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_MATCHES_nordic_nrf52_flash_controller 1
#define DT_N_S_soc_S_flash_controller_4001e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_P_label "NRF_FLASH_DRV_NAME"
#define DT_N_S_soc_S_flash_controller_4001e000_P_label_STRING_TOKEN NRF_FLASH_DRV_NAME
#define DT_N_S_soc_S_flash_controller_4001e000_P_label_STRING_UPPER_TOKEN NRF_FLASH_DRV_NAME
#define DT_N_S_soc_S_flash_controller_4001e000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 9) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 10) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 11) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 12) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 13) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 14) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 15) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 16) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 17)
#define DT_N_S_soc_S_flash_controller_4001e000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, label, 17, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg {1073864704 /* 0x4001e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_0 1073864704
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, reg, 1)
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible {"nordic,nrf52-flash-controller"}
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0 "nordic,nrf52-flash-controller"
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_4001e000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PATH "/soc/flash-controller@4001e000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FULL_NAME "flash@0"

/* Node parent (/soc/flash-controller@4001e000) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PARENT DT_N_S_soc_S_flash_controller_4001e000
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_ORD 119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REQUIRES_ORDS \
	118, /* /soc/flash-controller@4001e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_SUPPORTS_ORDS \
	120, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_4001e000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_label "NRF_FLASH"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_label_STRING_TOKEN NRF_FLASH
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_label_STRING_UPPER_TOKEN NRF_FLASH
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 8)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg {0 /* 0x0 */, 1048576 /* 0x100000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_1 1048576
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, reg, 1)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PATH "/soc/flash-controller@4001e000/flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@4001e000/flash@0) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_ORD 120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_REQUIRES_ORDS \
	119, /* /soc/flash-controller@4001e000/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_SUPPORTS_ORDS \
	121, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@0 */ \
	122, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@26000 */ \
	123, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000 */ \
	124, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_ORD 121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	120, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_sd_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 155648 /* 0x26000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label "softdevice"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_TOKEN softdevice
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN SOFTDEVICE
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 9)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 155648 /* 0x26000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1 155648
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@26000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@26000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FULL_NAME "partition@26000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_ORD 122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REQUIRES_ORDS \
	120, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_EXISTS 1
#define DT_N_NODELABEL_code_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_IDX_0_VAL_ADDRESS 155648 /* 0x26000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_IDX_0_VAL_SIZE 811008 /* 0xc6000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_label "code_partition"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_label_STRING_TOKEN code_partition
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_label_STRING_UPPER_TOKEN CODE_PARTITION
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 9) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 10) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 11) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 12) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 13)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, label, 13, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg {155648 /* 0x26000 */, 811008 /* 0xc6000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_0 155648
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_1 811008
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, reg, 1)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@ec000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FULL_NAME "partition@ec000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_ORD 123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REQUIRES_ORDS \
	120, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_VAL_ADDRESS 966656 /* 0xec000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 6)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg {966656 /* 0xec000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_0 966656
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, reg, 1)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@f4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FULL_NAME "partition@f4000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_ORD 124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REQUIRES_ORDS \
	120, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_VAL_ADDRESS 999424 /* 0xf4000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_VAL_SIZE 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label "adafruit_boot"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_STRING_TOKEN adafruit_boot
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_STRING_UPPER_TOKEN ADAFRUIT_BOOT
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 9) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 10) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 11) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 12)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, label, 12, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg {999424 /* 0xf4000 */, 49152 /* 0xc000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_0 999424
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_1 49152
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, reg, 1)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000
 *
 * Binding (compatible = nordic,nrf-twi):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nordic,nrf-twi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_PATH "/soc/i2c@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_FULL_NAME "i2c@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40003000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c)
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c) 
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_ORD 125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_SUPPORTS_ORDS \
	126, /* /soc/i2c@40003000/ssd1306@3c */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_twi   DT_N_S_soc_S_i2c_40003000
#define DT_N_NODELABEL_i2c0          DT_N_S_soc_S_i2c_40003000
#define DT_N_NODELABEL_pro_micro_i2c DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_MATCHES_nordic_nrf_twi 1
#define DT_N_S_soc_S_i2c_40003000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_P_reg {1073754112 /* 0x40003000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40003000, reg, 1)
#define DT_N_S_soc_S_i2c_40003000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts {3 /* 0x3 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40003000, interrupts, 1)
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_sda_pin 17
#define DT_N_S_soc_S_i2c_40003000_P_sda_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_scl_pin 20
#define DT_N_S_soc_S_i2c_40003000_P_scl_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40003000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_label "I2C_0"
#define DT_N_S_soc_S_i2c_40003000_P_label_STRING_TOKEN I2C_0
#define DT_N_S_soc_S_i2c_40003000_P_label_STRING_UPPER_TOKEN I2C_0
#define DT_N_S_soc_S_i2c_40003000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, label, 0) \
	fn(DT_N_S_soc_S_i2c_40003000, label, 1) \
	fn(DT_N_S_soc_S_i2c_40003000, label, 2) \
	fn(DT_N_S_soc_S_i2c_40003000, label, 3) \
	fn(DT_N_S_soc_S_i2c_40003000, label, 4)
#define DT_N_S_soc_S_i2c_40003000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_status "okay"
#define DT_N_S_soc_S_i2c_40003000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40003000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, status, 0) \
	fn(DT_N_S_soc_S_i2c_40003000, status, 1) \
	fn(DT_N_S_soc_S_i2c_40003000, status, 2) \
	fn(DT_N_S_soc_S_i2c_40003000, status, 3)
#define DT_N_S_soc_S_i2c_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible {"nordic,nrf-twi"}
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0 "nordic,nrf-twi"
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000/ssd1306@3c
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c
 *
 * Binding (compatible = solomon,ssd1306fb):
 *   $ZEPHYR_BASE/dts/bindings/display/solomon,ssd1306fb-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_PATH "/soc/i2c@40003000/ssd1306@3c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_FULL_NAME "ssd1306@3c"

/* Node parent (/soc/i2c@40003000) identifier: */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_PARENT DT_N_S_soc_S_i2c_40003000
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_ORD 126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_REQUIRES_ORDS \
	125, /* /soc/i2c@40003000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_EXISTS 1
#define DT_N_INST_0_solomon_ssd1306fb DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c
#define DT_N_NODELABEL_oled           DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c

/* Bus info (controller: '/soc/i2c@40003000', type: 'i2c') */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_BUS_i2c 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_BUS DT_N_S_soc_S_i2c_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_REG_IDX_0_VAL_ADDRESS 60 /* 0x3c */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_COMPAT_MATCHES_solomon_ssd1306fb 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_segment_offset 0
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_segment_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_page_offset 0
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_page_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_display_offset 0
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_display_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_multiplex_ratio 31
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_multiplex_ratio_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_segment_remap 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_segment_remap_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_com_invdir 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_com_invdir_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_com_sequential 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_com_sequential_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_prechargep 34
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_prechargep_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_height 32
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_height_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_width 128
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_width_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_label "DISPLAY"
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_label_STRING_TOKEN DISPLAY
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_label_STRING_UPPER_TOKEN DISPLAY
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 0) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 1) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 2) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 3) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 4) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 5) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 6)
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_compatible {"solomon,ssd1306fb"}
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_compatible_IDX_0 "solomon,ssd1306fb"
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, compatible, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_reg {60 /* 0x3c */}
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_reg_IDX_0 60
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, reg, 0)
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/usbd@40027000
 *
 * Node identifier: DT_N_S_soc_S_usbd_40027000
 *
 * Binding (compatible = nordic,nrf-usbd):
 *   $ZEPHYR_BASE/dts/bindings/usb/nordic,nrf-usbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_40027000_PATH "/soc/usbd@40027000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_40027000_FULL_NAME "usbd@40027000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usbd_40027000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart) 
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_40027000_ORD 127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_40027000_REQUIRES_ORDS \
	5, /* /soc */ \
	15, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_40027000_SUPPORTS_ORDS \
	128, /* /soc/usbd@40027000/cdc_acm_uart */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_40027000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_usbd DT_N_S_soc_S_usbd_40027000
#define DT_N_NODELABEL_usbd         DT_N_S_soc_S_usbd_40027000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_40027000_REG_NUM 1
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_VAL_ADDRESS 1073901568 /* 0x40027000 */
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_usbd_40027000_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_40027000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_40027000_IRQ_NUM 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_MATCHES_nordic_nrf_usbd 1
#define DT_N_S_soc_S_usbd_40027000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_40027000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_40027000_P_reg {1073901568 /* 0x40027000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_0 1073901568
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000, reg, 0) \
	fn(DT_N_S_soc_S_usbd_40027000, reg, 1)
#define DT_N_S_soc_S_usbd_40027000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts {39 /* 0x27 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000, interrupts, 0) \
	fn(DT_N_S_soc_S_usbd_40027000, interrupts, 1)
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoin_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoin_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoout_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoout_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_bidir_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_in_endpoints 7
#define DT_N_S_soc_S_usbd_40027000_P_num_in_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_out_endpoints 7
#define DT_N_S_soc_S_usbd_40027000_P_num_out_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_label "USBD"
#define DT_N_S_soc_S_usbd_40027000_P_label_STRING_TOKEN USBD
#define DT_N_S_soc_S_usbd_40027000_P_label_STRING_UPPER_TOKEN USBD
#define DT_N_S_soc_S_usbd_40027000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000, label, 0) \
	fn(DT_N_S_soc_S_usbd_40027000, label, 1) \
	fn(DT_N_S_soc_S_usbd_40027000, label, 2) \
	fn(DT_N_S_soc_S_usbd_40027000, label, 3)
#define DT_N_S_soc_S_usbd_40027000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000, label, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_label_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_status "okay"
#define DT_N_S_soc_S_usbd_40027000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usbd_40027000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000, status, 0) \
	fn(DT_N_S_soc_S_usbd_40027000, status, 1) \
	fn(DT_N_S_soc_S_usbd_40027000, status, 2) \
	fn(DT_N_S_soc_S_usbd_40027000, status, 3)
#define DT_N_S_soc_S_usbd_40027000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_status_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible {"nordic,nrf-usbd"}
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0 "nordic,nrf-usbd"
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_40027000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/usbd@40027000/cdc_acm_uart
 *
 * Node identifier: DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart
 *
 * Binding (compatible = zephyr,cdc-acm-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/zephyr,cdc-acm-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_PATH "/soc/usbd@40027000/cdc_acm_uart"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FULL_NAME "cdc_acm_uart"

/* Node parent (/soc/usbd@40027000) identifier: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_PARENT DT_N_S_soc_S_usbd_40027000
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_ORD 128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_REQUIRES_ORDS \
	127, /* /soc/usbd@40027000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_EXISTS 1
#define DT_N_INST_0_zephyr_cdc_acm_uart DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart
#define DT_N_NODELABEL_cdc_acm_uart     DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart

/* Bus info (controller: '/soc/usbd@40027000', type: 'usb') */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_BUS_usb 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_BUS DT_N_S_soc_S_usbd_40027000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_REG_NUM 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_IRQ_NUM 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_COMPAT_MATCHES_zephyr_cdc_acm_uart 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_label "CDC_ACM_0"
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_label_STRING_TOKEN CDC_ACM_0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_label_STRING_UPPER_TOKEN CDC_ACM_0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 0) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 1) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 2) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 3) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 4) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 5) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 6) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 7) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 8)
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_label_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_hw_flow_control 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible {"zephyr,cdc-acm-uart"}
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_IDX_0 "zephyr,cdc-acm-uart"
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, compatible, 0)
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_wakeup_source_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_random_4000d000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_4001e000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zmk_battery                    DT_N_S_vbatt
#define DT_CHOSEN_zmk_battery_EXISTS             1
#define DT_CHOSEN_zephyr_display                 DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c
#define DT_CHOSEN_zephyr_display_EXISTS          1
#define DT_CHOSEN_zmk_kscan                      DT_N_S_kscan
#define DT_CHOSEN_zmk_kscan_EXISTS               1
#define DT_CHOSEN_zmk_matrix_transform           DT_N_S_keymap_transform_0
#define DT_CHOSEN_zmk_matrix_transform_EXISTS    1
#define DT_COMPAT_fixed_partitions_LABEL_softdevice DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_softdevice_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_code_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000
#define DT_COMPAT_fixed_partitions_LABEL_code_partition_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_adafruit_boot DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000
#define DT_COMPAT_fixed_partitions_LABEL_adafruit_boot_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_nice_nano 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52840_qiaa 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52840 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ficr 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_uicr 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_clock 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_radio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_twi 1
#define DT_COMPAT_HAS_OKAY_solomon_ssd1306fb 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpiote 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_saadc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_timer 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_rtc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_temp 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_rng 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ecb 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_watchdog 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_egu 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_usbd 1
#define DT_COMPAT_HAS_OKAY_zephyr_cdc_acm_uart 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_cc310 1
#define DT_COMPAT_HAS_OKAY_arm_cryptocell_310 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_pinctrl 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_arduino_pro_micro 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_zmk_ext_power_generic 1
#define DT_COMPAT_HAS_OKAY_zmk_battery_nrf_vddh 1
#define DT_COMPAT_HAS_OKAY_zmk_matrix_transform 1
#define DT_COMPAT_HAS_OKAY_zmk_kscan_gpio_matrix 1
#define DT_COMPAT_HAS_OKAY_alps_ec11 1
#define DT_COMPAT_HAS_OKAY_zmk_keymap_sensors 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_key_press 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_none 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_hold_tap 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_momentary_layer 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_to_layer 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_reset 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_sensor_rotate_key_press 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_rgb_underglow 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_bluetooth 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_ext_power 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_outputs 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_caps_word 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_tap 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_press 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_release 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_tap_time 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_wait_time 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_pause_for_release 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_mod_morph 1
#define DT_COMPAT_HAS_OKAY_zmk_keymap 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_macro 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_nice_nano_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52840_qiaa_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52840_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ficr_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_uicr_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_clock_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_radio_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_twi_NUM_OKAY 1
#define DT_N_INST_solomon_ssd1306fb_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpiote_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_saadc_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_timer_NUM_OKAY 5
#define DT_N_INST_nordic_nrf_rtc_NUM_OKAY 3
#define DT_N_INST_nordic_nrf_temp_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_rng_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ecb_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_watchdog_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_egu_NUM_OKAY 6
#define DT_N_INST_nordic_nrf52_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_usbd_NUM_OKAY 1
#define DT_N_INST_zephyr_cdc_acm_uart_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpio_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_cc310_NUM_OKAY 1
#define DT_N_INST_arm_cryptocell_310_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_pinctrl_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_arduino_pro_micro_NUM_OKAY 2
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_zmk_ext_power_generic_NUM_OKAY 1
#define DT_N_INST_zmk_battery_nrf_vddh_NUM_OKAY 1
#define DT_N_INST_zmk_matrix_transform_NUM_OKAY 1
#define DT_N_INST_zmk_kscan_gpio_matrix_NUM_OKAY 1
#define DT_N_INST_alps_ec11_NUM_OKAY 2
#define DT_N_INST_zmk_keymap_sensors_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_key_press_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_none_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_hold_tap_NUM_OKAY 2
#define DT_N_INST_zmk_behavior_momentary_layer_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_to_layer_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_reset_NUM_OKAY 2
#define DT_N_INST_zmk_behavior_sensor_rotate_key_press_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_rgb_underglow_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_bluetooth_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_ext_power_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_outputs_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_caps_word_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_tap_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_press_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_release_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_tap_time_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_wait_time_NUM_OKAY 1
#define DT_N_INST_zmk_macro_pause_for_release_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_mod_morph_NUM_OKAY 12
#define DT_N_INST_zmk_keymap_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_macro_NUM_OKAY 8
#define DT_FOREACH_OKAY_nice_nano(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_nice_nano(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nice_nano(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nice_nano(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52840_qiaa(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52840_qiaa(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52840_qiaa(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52840_qiaa(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52840(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52840(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52840(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52840(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ficr(fn) fn(DT_N_S_soc_S_ficr_10000000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ficr(fn, ...) fn(DT_N_S_soc_S_ficr_10000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ficr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ficr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_uicr(fn) fn(DT_N_S_soc_S_uicr_10001000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_uicr(fn, ...) fn(DT_N_S_soc_S_uicr_10001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_uicr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_uicr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_clock(fn) fn(DT_N_S_soc_S_clock_40000000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_clock(fn, ...) fn(DT_N_S_soc_S_clock_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_radio(fn) fn(DT_N_S_soc_S_radio_40001000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_radio(fn, ...) fn(DT_N_S_soc_S_radio_40001000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_radio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_radio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_twi(fn) fn(DT_N_S_soc_S_i2c_40003000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_twi(fn, ...) fn(DT_N_S_soc_S_i2c_40003000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_twi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_twi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_solomon_ssd1306fb(fn) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c)
#define DT_FOREACH_OKAY_VARGS_solomon_ssd1306fb(fn, ...) fn(DT_N_S_soc_S_i2c_40003000_S_ssd1306_3c, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_solomon_ssd1306fb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_solomon_ssd1306fb(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpiote(fn) fn(DT_N_S_soc_S_gpiote_40006000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpiote(fn, ...) fn(DT_N_S_soc_S_gpiote_40006000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpiote(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpiote(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_saadc(fn) fn(DT_N_S_soc_S_adc_40007000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_saadc(fn, ...) fn(DT_N_S_soc_S_adc_40007000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_saadc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_saadc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_timer(fn) fn(DT_N_S_soc_S_timer_40008000) fn(DT_N_S_soc_S_timer_40009000) fn(DT_N_S_soc_S_timer_4000a000) fn(DT_N_S_soc_S_timer_4001a000) fn(DT_N_S_soc_S_timer_4001b000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_timer(fn, ...) fn(DT_N_S_soc_S_timer_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4000a000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001a000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4001b000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_timer(fn) fn(0) fn(1) fn(2) fn(3) fn(4)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_timer(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_rtc(fn) fn(DT_N_S_soc_S_rtc_4000b000) fn(DT_N_S_soc_S_rtc_40011000) fn(DT_N_S_soc_S_rtc_40024000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_4000b000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40024000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_rtc(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_rtc(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_temp(fn) fn(DT_N_S_soc_S_temp_4000c000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_temp(fn, ...) fn(DT_N_S_soc_S_temp_4000c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_temp(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_temp(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_rng(fn) fn(DT_N_S_soc_S_random_4000d000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_rng(fn, ...) fn(DT_N_S_soc_S_random_4000d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_rng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_rng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ecb(fn) fn(DT_N_S_soc_S_ecb_4000e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ecb(fn, ...) fn(DT_N_S_soc_S_ecb_4000e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ecb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ecb(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40010000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40010000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_egu(fn) fn(DT_N_S_soc_S_egu_40014000) fn(DT_N_S_soc_S_egu_40015000) fn(DT_N_S_soc_S_egu_40016000) fn(DT_N_S_soc_S_egu_40017000) fn(DT_N_S_soc_S_egu_40018000) fn(DT_N_S_soc_S_egu_40019000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_egu(fn, ...) fn(DT_N_S_soc_S_egu_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40016000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40017000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40018000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_40019000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_egu(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_egu(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf52_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_4001e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf52_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf52_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf52_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_usbd(fn) fn(DT_N_S_soc_S_usbd_40027000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_usbd(fn, ...) fn(DT_N_S_soc_S_usbd_40027000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_usbd(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_usbd(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_cdc_acm_uart(fn) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart)
#define DT_FOREACH_OKAY_VARGS_zephyr_cdc_acm_uart(fn, ...) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_cdc_acm_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_cdc_acm_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpio(fn) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_50000300, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_cc310(fn) fn(DT_N_S_soc_S_crypto_5002a000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_cc310(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_cc310(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_cc310(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cryptocell_310(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000)
#define DT_FOREACH_OKAY_VARGS_arm_cryptocell_310(fn, ...) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cryptocell_310(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cryptocell_310(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_pinctrl(fn) fn(DT_N_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_pinctrl(fn, ...) fn(DT_N_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arduino_pro_micro(fn) fn(DT_N_S_connector) fn(DT_N_S_connector_a)
#define DT_FOREACH_OKAY_VARGS_arduino_pro_micro(fn, ...) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_connector_a, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arduino_pro_micro(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_arduino_pro_micro(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_ext_power_generic(fn) fn(DT_N_S_ext_power)
#define DT_FOREACH_OKAY_VARGS_zmk_ext_power_generic(fn, ...) fn(DT_N_S_ext_power, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_ext_power_generic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_ext_power_generic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_battery_nrf_vddh(fn) fn(DT_N_S_vbatt)
#define DT_FOREACH_OKAY_VARGS_zmk_battery_nrf_vddh(fn, ...) fn(DT_N_S_vbatt, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_battery_nrf_vddh(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_battery_nrf_vddh(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_matrix_transform(fn) fn(DT_N_S_keymap_transform_0)
#define DT_FOREACH_OKAY_VARGS_zmk_matrix_transform(fn, ...) fn(DT_N_S_keymap_transform_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_matrix_transform(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_matrix_transform(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_kscan_gpio_matrix(fn) fn(DT_N_S_kscan)
#define DT_FOREACH_OKAY_VARGS_zmk_kscan_gpio_matrix(fn, ...) fn(DT_N_S_kscan, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_kscan_gpio_matrix(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_kscan_gpio_matrix(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_alps_ec11(fn) fn(DT_N_S_encoder_left) fn(DT_N_S_encoder_right)
#define DT_FOREACH_OKAY_VARGS_alps_ec11(fn, ...) fn(DT_N_S_encoder_left, __VA_ARGS__) fn(DT_N_S_encoder_right, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_alps_ec11(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_alps_ec11(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_keymap_sensors(fn) fn(DT_N_S_sensors)
#define DT_FOREACH_OKAY_VARGS_zmk_keymap_sensors(fn, ...) fn(DT_N_S_sensors, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_keymap_sensors(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_keymap_sensors(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_key_press(fn) fn(DT_N_S_behaviors_S_behavior_key_press)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_key_press(fn, ...) fn(DT_N_S_behaviors_S_behavior_key_press, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_key_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_key_press(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_none(fn) fn(DT_N_S_behaviors_S_behavior_none)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_none(fn, ...) fn(DT_N_S_behaviors_S_behavior_none, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_none(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_none(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_hold_tap(fn) fn(DT_N_S_behaviors_S_behavior_layer_tap) fn(DT_N_S_behaviors_S_homerow_mods)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_hold_tap(fn, ...) fn(DT_N_S_behaviors_S_behavior_layer_tap, __VA_ARGS__) fn(DT_N_S_behaviors_S_homerow_mods, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_hold_tap(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_hold_tap(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_momentary_layer(fn) fn(DT_N_S_behaviors_S_behavior_momentary_layer)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_momentary_layer(fn, ...) fn(DT_N_S_behaviors_S_behavior_momentary_layer, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_momentary_layer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_momentary_layer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_to_layer(fn) fn(DT_N_S_behaviors_S_behavior_to_layer)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_to_layer(fn, ...) fn(DT_N_S_behaviors_S_behavior_to_layer, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_to_layer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_to_layer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_reset(fn) fn(DT_N_S_behaviors_S_behavior_reset) fn(DT_N_S_behaviors_S_behavior_reset_dfu)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_reset(fn, ...) fn(DT_N_S_behaviors_S_behavior_reset, __VA_ARGS__) fn(DT_N_S_behaviors_S_behavior_reset_dfu, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_reset(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_reset(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_sensor_rotate_key_press(fn) fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_sensor_rotate_key_press(fn, ...) fn(DT_N_S_behaviors_S_behavior_sensor_rotate_key_press, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_sensor_rotate_key_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_sensor_rotate_key_press(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_rgb_underglow(fn) fn(DT_N_S_behaviors_S_behavior_rgb_underglow)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_rgb_underglow(fn, ...) fn(DT_N_S_behaviors_S_behavior_rgb_underglow, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_rgb_underglow(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_rgb_underglow(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_bluetooth(fn) fn(DT_N_S_behaviors_S_behavior_bluetooth)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_bluetooth(fn, ...) fn(DT_N_S_behaviors_S_behavior_bluetooth, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_bluetooth(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_bluetooth(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_ext_power(fn) fn(DT_N_S_behaviors_S_behavior_ext_power)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_ext_power(fn, ...) fn(DT_N_S_behaviors_S_behavior_ext_power, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_ext_power(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_ext_power(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_outputs(fn) fn(DT_N_S_behaviors_S_behavior_outputs)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_outputs(fn, ...) fn(DT_N_S_behaviors_S_behavior_outputs, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_outputs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_outputs(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_caps_word(fn) fn(DT_N_S_behaviors_S_behavior_caps_word)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_caps_word(fn, ...) fn(DT_N_S_behaviors_S_behavior_caps_word, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_caps_word(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_caps_word(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_mode_tap(fn) fn(DT_N_S_behaviors_S_macro_control_mode_tap)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_mode_tap(fn, ...) fn(DT_N_S_behaviors_S_macro_control_mode_tap, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_tap(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_mode_tap(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_mode_press(fn) fn(DT_N_S_behaviors_S_macro_control_mode_press)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_mode_press(fn, ...) fn(DT_N_S_behaviors_S_macro_control_mode_press, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_mode_press(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_mode_release(fn) fn(DT_N_S_behaviors_S_macro_control_mode_release)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_mode_release(fn, ...) fn(DT_N_S_behaviors_S_macro_control_mode_release, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_release(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_mode_release(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_tap_time(fn) fn(DT_N_S_behaviors_S_macro_control_tap_time)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_tap_time(fn, ...) fn(DT_N_S_behaviors_S_macro_control_tap_time, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_tap_time(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_tap_time(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_control_wait_time(fn) fn(DT_N_S_behaviors_S_macro_control_wait_time)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_control_wait_time(fn, ...) fn(DT_N_S_behaviors_S_macro_control_wait_time, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_wait_time(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_control_wait_time(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_macro_pause_for_release(fn) fn(DT_N_S_behaviors_S_macro_pause_for_release)
#define DT_FOREACH_OKAY_VARGS_zmk_macro_pause_for_release(fn, ...) fn(DT_N_S_behaviors_S_macro_pause_for_release, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_macro_pause_for_release(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_macro_pause_for_release(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_mod_morph(fn) fn(DT_N_S_behaviors_S_u_bt_sel_0) fn(DT_N_S_behaviors_S_u_bt_sel_1) fn(DT_N_S_behaviors_S_u_bt_sel_2) fn(DT_N_S_behaviors_S_u_bt_sel_3) fn(DT_N_S_behaviors_S_u_bt_sel_4) fn(DT_N_S_behaviors_S_u_out_tog) fn(DT_N_S_behaviors_S_u_rgb_eff) fn(DT_N_S_behaviors_S_u_rgb_hui) fn(DT_N_S_behaviors_S_u_rgb_sai) fn(DT_N_S_behaviors_S_u_rgb_bri) fn(DT_N_S_behaviors_S_u_ep_tog) fn(DT_N_S_behaviors_S_u_caps_word)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_mod_morph(fn, ...) fn(DT_N_S_behaviors_S_u_bt_sel_0, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_1, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_2, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_3, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_bt_sel_4, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_out_tog, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_eff, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_hui, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_sai, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_rgb_bri, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_ep_tog, __VA_ARGS__) fn(DT_N_S_behaviors_S_u_caps_word, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_mod_morph(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8) fn(9) fn(10) fn(11)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_mod_morph(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__) fn(9, __VA_ARGS__) fn(10, __VA_ARGS__) fn(11, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_keymap(fn) fn(DT_N_S_keymap)
#define DT_FOREACH_OKAY_VARGS_zmk_keymap(fn, ...) fn(DT_N_S_keymap, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_keymap(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_keymap(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zmk_behavior_macro(fn) fn(DT_N_S_macros_S_u_macro_u_bt_sel_0) fn(DT_N_S_macros_S_u_macro_u_bt_sel_1) fn(DT_N_S_macros_S_u_macro_u_bt_sel_2) fn(DT_N_S_macros_S_u_macro_u_bt_sel_3) fn(DT_N_S_macros_S_u_macro_u_bt_sel_4) fn(DT_N_S_macros_S_u_macro_btn1) fn(DT_N_S_macros_S_u_macro_btn2) fn(DT_N_S_macros_S_u_macro_btn3)
#define DT_FOREACH_OKAY_VARGS_zmk_behavior_macro(fn, ...) fn(DT_N_S_macros_S_u_macro_u_bt_sel_0, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_1, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_2, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_3, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_u_bt_sel_4, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_btn1, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_btn2, __VA_ARGS__) fn(DT_N_S_macros_S_u_macro_btn3, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zmk_behavior_macro(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7)
#define DT_FOREACH_OKAY_INST_VARGS_zmk_behavior_macro(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_solomon_ssd1306fb_BUS_i2c 1
#define DT_COMPAT_zephyr_cdc_acm_uart_BUS_usb 1
